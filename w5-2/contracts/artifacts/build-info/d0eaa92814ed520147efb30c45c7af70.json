{
	"id": "d0eaa92814ed520147efb30c45c7af70",
	"_format": "hh-sol-build-info-1",
	"solcVersion": "0.8.17",
	"solcLongVersion": "0.8.17+commit.8df45f5f",
	"input": {
		"language": "Solidity",
		"sources": {
			"DengLianHW/w5-2/contracts/MyTokenMarket.sol": {
				"content": "//SPDX-License-Identifier: MIT\npragma solidity ^0.8.0;\n\nimport \"./Uniswap/interfaces/IUniswapV2Router01.sol\";\n\nimport \"@openzeppelin/contracts/token/ERC20/IERC20.sol\";\nimport \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\";\n\ncontract MyTokenMarket {\n    using SafeERC20 for IERC20;\n\n    address public router;\n    address public weth;\n\n    constructor(address _router, address _weth) {\n        router = _router;\n        weth = _weth;\n    }\n\n    // 添加流动性：token 与 ETH\n    function AddLiquidityETH(address token, uint tokenAmount) public payable {\n        IERC20(token).safeTransferFrom(msg.sender, address(this),tokenAmount);\n        IERC20(token).safeApprove(router, tokenAmount);\n\n        // ingnore slippage\n        // (uint amountToken, uint amountETH, uint liquidity) = \n        IUniswapV2Router01(router).addLiquidityETH{value: msg.value}(token, tokenAmount, 0, 0, msg.sender, block.timestamp);\n\n        //TODO: handle left\n    }\n\n    // 添加流动性: tokenA 与 tokenB\n    function AddLiquidity(address tokenA, uint amountA, address tokenB, uint amountB) public payable{\n        IERC20(tokenA).safeTransferFrom(msg.sender, address(this), amountA);\n        IERC20(tokenA).safeApprove(router, amountA);\n\n        IERC20(tokenB).safeTransferFrom(msg.sender, address(this), amountB);\n        IERC20(tokenB).safeApprove(router, amountB);\n\n        IUniswapV2Router01(router).addLiquidity(tokenA, tokenB, amountA, amountB, 0, 0, msg.sender, block.timestamp);\n\n        //TODO: handle left\n    }\n\n    // 用 ETH 购买 token\n    function buyTokenWithETH(address token, uint minTokenAmount) public payable {\n        address[] memory path = new address[](2);\n        path[0] = weth;\n        path[1] = token;\n        IUniswapV2Router01(router).swapExactETHForTokens{value : msg.value}(minTokenAmount, path, msg.sender, block.timestamp);\n    }\n\n   // 用 tokenA 购买 tokenB\n    function buyToken(address tokenA, address tokenB, uint amountIn, uint minTokenAmount) public {\n        address[] memory path = new address[](2);\n        path[0] = tokenA;\n        path[1] = tokenB;\n        IERC20(tokenA).safeTransferFrom(msg.sender, address(this), amountIn);\n        IERC20(tokenA).safeApprove(router, amountIn);\n        IUniswapV2Router01(router).swapExactTokensForTokens(amountIn, minTokenAmount, path, msg.sender, block.timestamp);\n    }\n\n}"
			},
			"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v4.8.0) (token/ERC20/utils/SafeERC20.sol)\n\npragma solidity ^0.8.0;\n\nimport \"../IERC20.sol\";\nimport \"../extensions/draft-IERC20Permit.sol\";\nimport \"../../../utils/Address.sol\";\n\n/**\n * @title SafeERC20\n * @dev Wrappers around ERC20 operations that throw on failure (when the token\n * contract returns false). Tokens that return no value (and instead revert or\n * throw on failure) are also supported, non-reverting calls are assumed to be\n * successful.\n * To use this library you can add a `using SafeERC20 for IERC20;` statement to your contract,\n * which allows you to call the safe operations as `token.safeTransfer(...)`, etc.\n */\nlibrary SafeERC20 {\n    using Address for address;\n\n    function safeTransfer(\n        IERC20 token,\n        address to,\n        uint256 value\n    ) internal {\n        _callOptionalReturn(token, abi.encodeWithSelector(token.transfer.selector, to, value));\n    }\n\n    function safeTransferFrom(\n        IERC20 token,\n        address from,\n        address to,\n        uint256 value\n    ) internal {\n        _callOptionalReturn(token, abi.encodeWithSelector(token.transferFrom.selector, from, to, value));\n    }\n\n    /**\n     * @dev Deprecated. This function has issues similar to the ones found in\n     * {IERC20-approve}, and its usage is discouraged.\n     *\n     * Whenever possible, use {safeIncreaseAllowance} and\n     * {safeDecreaseAllowance} instead.\n     */\n    function safeApprove(\n        IERC20 token,\n        address spender,\n        uint256 value\n    ) internal {\n        // safeApprove should only be called when setting an initial allowance,\n        // or when resetting it to zero. To increase and decrease it, use\n        // 'safeIncreaseAllowance' and 'safeDecreaseAllowance'\n        require(\n            (value == 0) || (token.allowance(address(this), spender) == 0),\n            \"SafeERC20: approve from non-zero to non-zero allowance\"\n        );\n        _callOptionalReturn(token, abi.encodeWithSelector(token.approve.selector, spender, value));\n    }\n\n    function safeIncreaseAllowance(\n        IERC20 token,\n        address spender,\n        uint256 value\n    ) internal {\n        uint256 newAllowance = token.allowance(address(this), spender) + value;\n        _callOptionalReturn(token, abi.encodeWithSelector(token.approve.selector, spender, newAllowance));\n    }\n\n    function safeDecreaseAllowance(\n        IERC20 token,\n        address spender,\n        uint256 value\n    ) internal {\n        unchecked {\n            uint256 oldAllowance = token.allowance(address(this), spender);\n            require(oldAllowance >= value, \"SafeERC20: decreased allowance below zero\");\n            uint256 newAllowance = oldAllowance - value;\n            _callOptionalReturn(token, abi.encodeWithSelector(token.approve.selector, spender, newAllowance));\n        }\n    }\n\n    function safePermit(\n        IERC20Permit token,\n        address owner,\n        address spender,\n        uint256 value,\n        uint256 deadline,\n        uint8 v,\n        bytes32 r,\n        bytes32 s\n    ) internal {\n        uint256 nonceBefore = token.nonces(owner);\n        token.permit(owner, spender, value, deadline, v, r, s);\n        uint256 nonceAfter = token.nonces(owner);\n        require(nonceAfter == nonceBefore + 1, \"SafeERC20: permit did not succeed\");\n    }\n\n    /**\n     * @dev Imitates a Solidity high-level call (i.e. a regular function call to a contract), relaxing the requirement\n     * on the return value: the return value is optional (but if data is returned, it must not be false).\n     * @param token The token targeted by the call.\n     * @param data The call data (encoded using abi.encode or one of its variants).\n     */\n    function _callOptionalReturn(IERC20 token, bytes memory data) private {\n        // We need to perform a low level call here, to bypass Solidity's return data size checking mechanism, since\n        // we're implementing it ourselves. We use {Address-functionCall} to perform this call, which verifies that\n        // the target address contains contract code and also asserts for success in the low-level call.\n\n        bytes memory returndata = address(token).functionCall(data, \"SafeERC20: low-level call failed\");\n        if (returndata.length > 0) {\n            // Return data is optional\n            require(abi.decode(returndata, (bool)), \"SafeERC20: ERC20 operation did not succeed\");\n        }\n    }\n}\n"
			},
			"@openzeppelin/contracts/token/ERC20/IERC20.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v4.6.0) (token/ERC20/IERC20.sol)\n\npragma solidity ^0.8.0;\n\n/**\n * @dev Interface of the ERC20 standard as defined in the EIP.\n */\ninterface IERC20 {\n    /**\n     * @dev Emitted when `value` tokens are moved from one account (`from`) to\n     * another (`to`).\n     *\n     * Note that `value` may be zero.\n     */\n    event Transfer(address indexed from, address indexed to, uint256 value);\n\n    /**\n     * @dev Emitted when the allowance of a `spender` for an `owner` is set by\n     * a call to {approve}. `value` is the new allowance.\n     */\n    event Approval(address indexed owner, address indexed spender, uint256 value);\n\n    /**\n     * @dev Returns the amount of tokens in existence.\n     */\n    function totalSupply() external view returns (uint256);\n\n    /**\n     * @dev Returns the amount of tokens owned by `account`.\n     */\n    function balanceOf(address account) external view returns (uint256);\n\n    /**\n     * @dev Moves `amount` tokens from the caller's account to `to`.\n     *\n     * Returns a boolean value indicating whether the operation succeeded.\n     *\n     * Emits a {Transfer} event.\n     */\n    function transfer(address to, uint256 amount) external returns (bool);\n\n    /**\n     * @dev Returns the remaining number of tokens that `spender` will be\n     * allowed to spend on behalf of `owner` through {transferFrom}. This is\n     * zero by default.\n     *\n     * This value changes when {approve} or {transferFrom} are called.\n     */\n    function allowance(address owner, address spender) external view returns (uint256);\n\n    /**\n     * @dev Sets `amount` as the allowance of `spender` over the caller's tokens.\n     *\n     * Returns a boolean value indicating whether the operation succeeded.\n     *\n     * IMPORTANT: Beware that changing an allowance with this method brings the risk\n     * that someone may use both the old and the new allowance by unfortunate\n     * transaction ordering. One possible solution to mitigate this race\n     * condition is to first reduce the spender's allowance to 0 and set the\n     * desired value afterwards:\n     * https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729\n     *\n     * Emits an {Approval} event.\n     */\n    function approve(address spender, uint256 amount) external returns (bool);\n\n    /**\n     * @dev Moves `amount` tokens from `from` to `to` using the\n     * allowance mechanism. `amount` is then deducted from the caller's\n     * allowance.\n     *\n     * Returns a boolean value indicating whether the operation succeeded.\n     *\n     * Emits a {Transfer} event.\n     */\n    function transferFrom(\n        address from,\n        address to,\n        uint256 amount\n    ) external returns (bool);\n}\n"
			},
			"DengLianHW/w5-2/contracts/Uniswap/interfaces/IUniswapV2Router01.sol": {
				"content": "pragma solidity >=0.6.2;\n\ninterface IUniswapV2Router01 {\n    function factory() external pure returns (address);\n    function WETH() external pure returns (address);\n\n    function addLiquidity(\n        address tokenA,\n        address tokenB,\n        uint amountADesired,\n        uint amountBDesired,\n        uint amountAMin,\n        uint amountBMin,\n        address to,\n        uint deadline\n    ) external returns (uint amountA, uint amountB, uint liquidity);\n    function addLiquidityETH(\n        address token,\n        uint amountTokenDesired,\n        uint amountTokenMin,\n        uint amountETHMin,\n        address to,\n        uint deadline\n    ) external payable returns (uint amountToken, uint amountETH, uint liquidity);\n    function removeLiquidity(\n        address tokenA,\n        address tokenB,\n        uint liquidity,\n        uint amountAMin,\n        uint amountBMin,\n        address to,\n        uint deadline\n    ) external returns (uint amountA, uint amountB);\n    function removeLiquidityETH(\n        address token,\n        uint liquidity,\n        uint amountTokenMin,\n        uint amountETHMin,\n        address to,\n        uint deadline\n    ) external returns (uint amountToken, uint amountETH);\n    function removeLiquidityWithPermit(\n        address tokenA,\n        address tokenB,\n        uint liquidity,\n        uint amountAMin,\n        uint amountBMin,\n        address to,\n        uint deadline,\n        bool approveMax, uint8 v, bytes32 r, bytes32 s\n    ) external returns (uint amountA, uint amountB);\n    function removeLiquidityETHWithPermit(\n        address token,\n        uint liquidity,\n        uint amountTokenMin,\n        uint amountETHMin,\n        address to,\n        uint deadline,\n        bool approveMax, uint8 v, bytes32 r, bytes32 s\n    ) external returns (uint amountToken, uint amountETH);\n    function swapExactTokensForTokens(\n        uint amountIn,\n        uint amountOutMin,\n        address[] calldata path,\n        address to,\n        uint deadline\n    ) external returns (uint[] memory amounts);\n    function swapTokensForExactTokens(\n        uint amountOut,\n        uint amountInMax,\n        address[] calldata path,\n        address to,\n        uint deadline\n    ) external returns (uint[] memory amounts);\n    function swapExactETHForTokens(uint amountOutMin, address[] calldata path, address to, uint deadline)\n        external\n        payable\n        returns (uint[] memory amounts);\n    function swapTokensForExactETH(uint amountOut, uint amountInMax, address[] calldata path, address to, uint deadline)\n        external\n        returns (uint[] memory amounts);\n    function swapExactTokensForETH(uint amountIn, uint amountOutMin, address[] calldata path, address to, uint deadline)\n        external\n        returns (uint[] memory amounts);\n    function swapETHForExactTokens(uint amountOut, address[] calldata path, address to, uint deadline)\n        external\n        payable\n        returns (uint[] memory amounts);\n\n    function quote(uint amountA, uint reserveA, uint reserveB) external pure returns (uint amountB);\n    function getAmountOut(uint amountIn, uint reserveIn, uint reserveOut) external pure returns (uint amountOut);\n    function getAmountIn(uint amountOut, uint reserveIn, uint reserveOut) external pure returns (uint amountIn);\n    function getAmountsOut(uint amountIn, address[] calldata path) external view returns (uint[] memory amounts);\n    function getAmountsIn(uint amountOut, address[] calldata path) external view returns (uint[] memory amounts);\n}\n"
			},
			"@openzeppelin/contracts/utils/Address.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v4.8.0) (utils/Address.sol)\n\npragma solidity ^0.8.1;\n\n/**\n * @dev Collection of functions related to the address type\n */\nlibrary Address {\n    /**\n     * @dev Returns true if `account` is a contract.\n     *\n     * [IMPORTANT]\n     * ====\n     * It is unsafe to assume that an address for which this function returns\n     * false is an externally-owned account (EOA) and not a contract.\n     *\n     * Among others, `isContract` will return false for the following\n     * types of addresses:\n     *\n     *  - an externally-owned account\n     *  - a contract in construction\n     *  - an address where a contract will be created\n     *  - an address where a contract lived, but was destroyed\n     * ====\n     *\n     * [IMPORTANT]\n     * ====\n     * You shouldn't rely on `isContract` to protect against flash loan attacks!\n     *\n     * Preventing calls from contracts is highly discouraged. It breaks composability, breaks support for smart wallets\n     * like Gnosis Safe, and does not provide security since it can be circumvented by calling from a contract\n     * constructor.\n     * ====\n     */\n    function isContract(address account) internal view returns (bool) {\n        // This method relies on extcodesize/address.code.length, which returns 0\n        // for contracts in construction, since the code is only stored at the end\n        // of the constructor execution.\n\n        return account.code.length > 0;\n    }\n\n    /**\n     * @dev Replacement for Solidity's `transfer`: sends `amount` wei to\n     * `recipient`, forwarding all available gas and reverting on errors.\n     *\n     * https://eips.ethereum.org/EIPS/eip-1884[EIP1884] increases the gas cost\n     * of certain opcodes, possibly making contracts go over the 2300 gas limit\n     * imposed by `transfer`, making them unable to receive funds via\n     * `transfer`. {sendValue} removes this limitation.\n     *\n     * https://diligence.consensys.net/posts/2019/09/stop-using-soliditys-transfer-now/[Learn more].\n     *\n     * IMPORTANT: because control is transferred to `recipient`, care must be\n     * taken to not create reentrancy vulnerabilities. Consider using\n     * {ReentrancyGuard} or the\n     * https://solidity.readthedocs.io/en/v0.5.11/security-considerations.html#use-the-checks-effects-interactions-pattern[checks-effects-interactions pattern].\n     */\n    function sendValue(address payable recipient, uint256 amount) internal {\n        require(address(this).balance >= amount, \"Address: insufficient balance\");\n\n        (bool success, ) = recipient.call{value: amount}(\"\");\n        require(success, \"Address: unable to send value, recipient may have reverted\");\n    }\n\n    /**\n     * @dev Performs a Solidity function call using a low level `call`. A\n     * plain `call` is an unsafe replacement for a function call: use this\n     * function instead.\n     *\n     * If `target` reverts with a revert reason, it is bubbled up by this\n     * function (like regular Solidity function calls).\n     *\n     * Returns the raw returned data. To convert to the expected return value,\n     * use https://solidity.readthedocs.io/en/latest/units-and-global-variables.html?highlight=abi.decode#abi-encoding-and-decoding-functions[`abi.decode`].\n     *\n     * Requirements:\n     *\n     * - `target` must be a contract.\n     * - calling `target` with `data` must not revert.\n     *\n     * _Available since v3.1._\n     */\n    function functionCall(address target, bytes memory data) internal returns (bytes memory) {\n        return functionCallWithValue(target, data, 0, \"Address: low-level call failed\");\n    }\n\n    /**\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`], but with\n     * `errorMessage` as a fallback revert reason when `target` reverts.\n     *\n     * _Available since v3.1._\n     */\n    function functionCall(\n        address target,\n        bytes memory data,\n        string memory errorMessage\n    ) internal returns (bytes memory) {\n        return functionCallWithValue(target, data, 0, errorMessage);\n    }\n\n    /**\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\n     * but also transferring `value` wei to `target`.\n     *\n     * Requirements:\n     *\n     * - the calling contract must have an ETH balance of at least `value`.\n     * - the called Solidity function must be `payable`.\n     *\n     * _Available since v3.1._\n     */\n    function functionCallWithValue(\n        address target,\n        bytes memory data,\n        uint256 value\n    ) internal returns (bytes memory) {\n        return functionCallWithValue(target, data, value, \"Address: low-level call with value failed\");\n    }\n\n    /**\n     * @dev Same as {xref-Address-functionCallWithValue-address-bytes-uint256-}[`functionCallWithValue`], but\n     * with `errorMessage` as a fallback revert reason when `target` reverts.\n     *\n     * _Available since v3.1._\n     */\n    function functionCallWithValue(\n        address target,\n        bytes memory data,\n        uint256 value,\n        string memory errorMessage\n    ) internal returns (bytes memory) {\n        require(address(this).balance >= value, \"Address: insufficient balance for call\");\n        (bool success, bytes memory returndata) = target.call{value: value}(data);\n        return verifyCallResultFromTarget(target, success, returndata, errorMessage);\n    }\n\n    /**\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\n     * but performing a static call.\n     *\n     * _Available since v3.3._\n     */\n    function functionStaticCall(address target, bytes memory data) internal view returns (bytes memory) {\n        return functionStaticCall(target, data, \"Address: low-level static call failed\");\n    }\n\n    /**\n     * @dev Same as {xref-Address-functionCall-address-bytes-string-}[`functionCall`],\n     * but performing a static call.\n     *\n     * _Available since v3.3._\n     */\n    function functionStaticCall(\n        address target,\n        bytes memory data,\n        string memory errorMessage\n    ) internal view returns (bytes memory) {\n        (bool success, bytes memory returndata) = target.staticcall(data);\n        return verifyCallResultFromTarget(target, success, returndata, errorMessage);\n    }\n\n    /**\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\n     * but performing a delegate call.\n     *\n     * _Available since v3.4._\n     */\n    function functionDelegateCall(address target, bytes memory data) internal returns (bytes memory) {\n        return functionDelegateCall(target, data, \"Address: low-level delegate call failed\");\n    }\n\n    /**\n     * @dev Same as {xref-Address-functionCall-address-bytes-string-}[`functionCall`],\n     * but performing a delegate call.\n     *\n     * _Available since v3.4._\n     */\n    function functionDelegateCall(\n        address target,\n        bytes memory data,\n        string memory errorMessage\n    ) internal returns (bytes memory) {\n        (bool success, bytes memory returndata) = target.delegatecall(data);\n        return verifyCallResultFromTarget(target, success, returndata, errorMessage);\n    }\n\n    /**\n     * @dev Tool to verify that a low level call to smart-contract was successful, and revert (either by bubbling\n     * the revert reason or using the provided one) in case of unsuccessful call or if target was not a contract.\n     *\n     * _Available since v4.8._\n     */\n    function verifyCallResultFromTarget(\n        address target,\n        bool success,\n        bytes memory returndata,\n        string memory errorMessage\n    ) internal view returns (bytes memory) {\n        if (success) {\n            if (returndata.length == 0) {\n                // only check isContract if the call was successful and the return data is empty\n                // otherwise we already know that it was a contract\n                require(isContract(target), \"Address: call to non-contract\");\n            }\n            return returndata;\n        } else {\n            _revert(returndata, errorMessage);\n        }\n    }\n\n    /**\n     * @dev Tool to verify that a low level call was successful, and revert if it wasn't, either by bubbling the\n     * revert reason or using the provided one.\n     *\n     * _Available since v4.3._\n     */\n    function verifyCallResult(\n        bool success,\n        bytes memory returndata,\n        string memory errorMessage\n    ) internal pure returns (bytes memory) {\n        if (success) {\n            return returndata;\n        } else {\n            _revert(returndata, errorMessage);\n        }\n    }\n\n    function _revert(bytes memory returndata, string memory errorMessage) private pure {\n        // Look for revert reason and bubble it up if present\n        if (returndata.length > 0) {\n            // The easiest way to bubble the revert reason is using memory via assembly\n            /// @solidity memory-safe-assembly\n            assembly {\n                let returndata_size := mload(returndata)\n                revert(add(32, returndata), returndata_size)\n            }\n        } else {\n            revert(errorMessage);\n        }\n    }\n}\n"
			},
			"@openzeppelin/contracts/token/ERC20/extensions/draft-IERC20Permit.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts v4.4.1 (token/ERC20/extensions/draft-IERC20Permit.sol)\n\npragma solidity ^0.8.0;\n\n/**\n * @dev Interface of the ERC20 Permit extension allowing approvals to be made via signatures, as defined in\n * https://eips.ethereum.org/EIPS/eip-2612[EIP-2612].\n *\n * Adds the {permit} method, which can be used to change an account's ERC20 allowance (see {IERC20-allowance}) by\n * presenting a message signed by the account. By not relying on {IERC20-approve}, the token holder account doesn't\n * need to send a transaction, and thus is not required to hold Ether at all.\n */\ninterface IERC20Permit {\n    /**\n     * @dev Sets `value` as the allowance of `spender` over ``owner``'s tokens,\n     * given ``owner``'s signed approval.\n     *\n     * IMPORTANT: The same issues {IERC20-approve} has related to transaction\n     * ordering also apply here.\n     *\n     * Emits an {Approval} event.\n     *\n     * Requirements:\n     *\n     * - `spender` cannot be the zero address.\n     * - `deadline` must be a timestamp in the future.\n     * - `v`, `r` and `s` must be a valid `secp256k1` signature from `owner`\n     * over the EIP712-formatted function arguments.\n     * - the signature must use ``owner``'s current nonce (see {nonces}).\n     *\n     * For more information on the signature format, see the\n     * https://eips.ethereum.org/EIPS/eip-2612#specification[relevant EIP\n     * section].\n     */\n    function permit(\n        address owner,\n        address spender,\n        uint256 value,\n        uint256 deadline,\n        uint8 v,\n        bytes32 r,\n        bytes32 s\n    ) external;\n\n    /**\n     * @dev Returns the current nonce for `owner`. This value must be\n     * included whenever a signature is generated for {permit}.\n     *\n     * Every successful call to {permit} increases ``owner``'s nonce by one. This\n     * prevents a signature from being used multiple times.\n     */\n    function nonces(address owner) external view returns (uint256);\n\n    /**\n     * @dev Returns the domain separator used in the encoding of the signature for {permit}, as defined by {EIP712}.\n     */\n    // solhint-disable-next-line func-name-mixedcase\n    function DOMAIN_SEPARATOR() external view returns (bytes32);\n}\n"
			}
		},
		"settings": {
			"optimizer": {
				"enabled": false,
				"runs": 200
			},
			"outputSelection": {
				"*": {
					"": [
						"ast"
					],
					"*": [
						"abi",
						"metadata",
						"devdoc",
						"userdoc",
						"storageLayout",
						"evm.legacyAssembly",
						"evm.bytecode",
						"evm.deployedBytecode",
						"evm.methodIdentifiers",
						"evm.gasEstimates",
						"evm.assembly"
					]
				}
			}
		}
	},
	"output": {
		"contracts": {
			"@openzeppelin/contracts/token/ERC20/IERC20.sol": {
				"IERC20": {
					"abi": [
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Approval",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Transfer",
							"type": "event"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								}
							],
							"name": "allowance",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "approve",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "balanceOf",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "totalSupply",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "transfer",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "transferFrom",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Interface of the ERC20 standard as defined in the EIP.",
						"events": {
							"Approval(address,address,uint256)": {
								"details": "Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance."
							},
							"Transfer(address,address,uint256)": {
								"details": "Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero."
							}
						},
						"kind": "dev",
						"methods": {
							"allowance(address,address)": {
								"details": "Returns the remaining number of tokens that `spender` will be allowed to spend on behalf of `owner` through {transferFrom}. This is zero by default. This value changes when {approve} or {transferFrom} are called."
							},
							"approve(address,uint256)": {
								"details": "Sets `amount` as the allowance of `spender` over the caller's tokens. Returns a boolean value indicating whether the operation succeeded. IMPORTANT: Beware that changing an allowance with this method brings the risk that someone may use both the old and the new allowance by unfortunate transaction ordering. One possible solution to mitigate this race condition is to first reduce the spender's allowance to 0 and set the desired value afterwards: https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729 Emits an {Approval} event."
							},
							"balanceOf(address)": {
								"details": "Returns the amount of tokens owned by `account`."
							},
							"totalSupply()": {
								"details": "Returns the amount of tokens in existence."
							},
							"transfer(address,uint256)": {
								"details": "Moves `amount` tokens from the caller's account to `to`. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event."
							},
							"transferFrom(address,address,uint256)": {
								"details": "Moves `amount` tokens from `from` to `to` using the allowance mechanism. `amount` is then deducted from the caller's allowance. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"allowance(address,address)": "dd62ed3e",
							"approve(address,uint256)": "095ea7b3",
							"balanceOf(address)": "70a08231",
							"totalSupply()": "18160ddd",
							"transfer(address,uint256)": "a9059cbb",
							"transferFrom(address,address,uint256)": "23b872dd"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.17+commit.8df45f5f\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Interface of the ERC20 standard as defined in the EIP.\",\"events\":{\"Approval(address,address,uint256)\":{\"details\":\"Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance.\"},\"Transfer(address,address,uint256)\":{\"details\":\"Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero.\"}},\"kind\":\"dev\",\"methods\":{\"allowance(address,address)\":{\"details\":\"Returns the remaining number of tokens that `spender` will be allowed to spend on behalf of `owner` through {transferFrom}. This is zero by default. This value changes when {approve} or {transferFrom} are called.\"},\"approve(address,uint256)\":{\"details\":\"Sets `amount` as the allowance of `spender` over the caller's tokens. Returns a boolean value indicating whether the operation succeeded. IMPORTANT: Beware that changing an allowance with this method brings the risk that someone may use both the old and the new allowance by unfortunate transaction ordering. One possible solution to mitigate this race condition is to first reduce the spender's allowance to 0 and set the desired value afterwards: https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729 Emits an {Approval} event.\"},\"balanceOf(address)\":{\"details\":\"Returns the amount of tokens owned by `account`.\"},\"totalSupply()\":{\"details\":\"Returns the amount of tokens in existence.\"},\"transfer(address,uint256)\":{\"details\":\"Moves `amount` tokens from the caller's account to `to`. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"Moves `amount` tokens from `from` to `to` using the allowance mechanism. `amount` is then deducted from the caller's allowance. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":\"IERC20\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0x9750c6b834f7b43000631af5cc30001c5f547b3ceb3635488f140f60e897ea6b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://5a7d5b1ef5d8d5889ad2ed89d8619c09383b80b72ab226e0fe7bde1636481e34\",\"dweb:/ipfs/QmebXWgtEfumQGBdVeM6c71McLixYXQP5Bk6kKXuoY4Bmr\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/token/ERC20/extensions/draft-IERC20Permit.sol": {
				"IERC20Permit": {
					"abi": [
						{
							"inputs": [],
							"name": "DOMAIN_SEPARATOR",
							"outputs": [
								{
									"internalType": "bytes32",
									"name": "",
									"type": "bytes32"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								}
							],
							"name": "nonces",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "deadline",
									"type": "uint256"
								},
								{
									"internalType": "uint8",
									"name": "v",
									"type": "uint8"
								},
								{
									"internalType": "bytes32",
									"name": "r",
									"type": "bytes32"
								},
								{
									"internalType": "bytes32",
									"name": "s",
									"type": "bytes32"
								}
							],
							"name": "permit",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Interface of the ERC20 Permit extension allowing approvals to be made via signatures, as defined in https://eips.ethereum.org/EIPS/eip-2612[EIP-2612]. Adds the {permit} method, which can be used to change an account's ERC20 allowance (see {IERC20-allowance}) by presenting a message signed by the account. By not relying on {IERC20-approve}, the token holder account doesn't need to send a transaction, and thus is not required to hold Ether at all.",
						"kind": "dev",
						"methods": {
							"DOMAIN_SEPARATOR()": {
								"details": "Returns the domain separator used in the encoding of the signature for {permit}, as defined by {EIP712}."
							},
							"nonces(address)": {
								"details": "Returns the current nonce for `owner`. This value must be included whenever a signature is generated for {permit}. Every successful call to {permit} increases ``owner``'s nonce by one. This prevents a signature from being used multiple times."
							},
							"permit(address,address,uint256,uint256,uint8,bytes32,bytes32)": {
								"details": "Sets `value` as the allowance of `spender` over ``owner``'s tokens, given ``owner``'s signed approval. IMPORTANT: The same issues {IERC20-approve} has related to transaction ordering also apply here. Emits an {Approval} event. Requirements: - `spender` cannot be the zero address. - `deadline` must be a timestamp in the future. - `v`, `r` and `s` must be a valid `secp256k1` signature from `owner` over the EIP712-formatted function arguments. - the signature must use ``owner``'s current nonce (see {nonces}). For more information on the signature format, see the https://eips.ethereum.org/EIPS/eip-2612#specification[relevant EIP section]."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"DOMAIN_SEPARATOR()": "3644e515",
							"nonces(address)": "7ecebe00",
							"permit(address,address,uint256,uint256,uint8,bytes32,bytes32)": "d505accf"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.17+commit.8df45f5f\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"name\":\"DOMAIN_SEPARATOR\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"nonces\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"deadline\",\"type\":\"uint256\"},{\"internalType\":\"uint8\",\"name\":\"v\",\"type\":\"uint8\"},{\"internalType\":\"bytes32\",\"name\":\"r\",\"type\":\"bytes32\"},{\"internalType\":\"bytes32\",\"name\":\"s\",\"type\":\"bytes32\"}],\"name\":\"permit\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Interface of the ERC20 Permit extension allowing approvals to be made via signatures, as defined in https://eips.ethereum.org/EIPS/eip-2612[EIP-2612]. Adds the {permit} method, which can be used to change an account's ERC20 allowance (see {IERC20-allowance}) by presenting a message signed by the account. By not relying on {IERC20-approve}, the token holder account doesn't need to send a transaction, and thus is not required to hold Ether at all.\",\"kind\":\"dev\",\"methods\":{\"DOMAIN_SEPARATOR()\":{\"details\":\"Returns the domain separator used in the encoding of the signature for {permit}, as defined by {EIP712}.\"},\"nonces(address)\":{\"details\":\"Returns the current nonce for `owner`. This value must be included whenever a signature is generated for {permit}. Every successful call to {permit} increases ``owner``'s nonce by one. This prevents a signature from being used multiple times.\"},\"permit(address,address,uint256,uint256,uint8,bytes32,bytes32)\":{\"details\":\"Sets `value` as the allowance of `spender` over ``owner``'s tokens, given ``owner``'s signed approval. IMPORTANT: The same issues {IERC20-approve} has related to transaction ordering also apply here. Emits an {Approval} event. Requirements: - `spender` cannot be the zero address. - `deadline` must be a timestamp in the future. - `v`, `r` and `s` must be a valid `secp256k1` signature from `owner` over the EIP712-formatted function arguments. - the signature must use ``owner``'s current nonce (see {nonces}). For more information on the signature format, see the https://eips.ethereum.org/EIPS/eip-2612#specification[relevant EIP section].\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/token/ERC20/extensions/draft-IERC20Permit.sol\":\"IERC20Permit\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/token/ERC20/extensions/draft-IERC20Permit.sol\":{\"keccak256\":\"0xf41ca991f30855bf80ffd11e9347856a517b977f0a6c2d52e6421a99b7840329\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://b2717fd2bdac99daa960a6de500754ea1b932093c946388c381da48658234b95\",\"dweb:/ipfs/QmP6QVMn6UeA3ByahyJbYQr5M6coHKBKsf3ySZSfbyA8R7\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol": {
				"SafeERC20": {
					"abi": [],
					"devdoc": {
						"details": "Wrappers around ERC20 operations that throw on failure (when the token contract returns false). Tokens that return no value (and instead revert or throw on failure) are also supported, non-reverting calls are assumed to be successful. To use this library you can add a `using SafeERC20 for IERC20;` statement to your contract, which allows you to call the safe operations as `token.safeTransfer(...)`, etc.",
						"kind": "dev",
						"methods": {},
						"title": "SafeERC20",
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":707:4455  library SafeERC20 {... */\n  dataSize(sub_0)\n  dataOffset(sub_0)\n  0x0b\n  dup3\n  dup3\n  dup3\n  codecopy\n  dup1\n  mload\n  0x00\n  byte\n  0x73\n  eq\n  tag_1\n  jumpi\n  mstore(0x00, 0x4e487b7100000000000000000000000000000000000000000000000000000000)\n  mstore(0x04, 0x00)\n  revert(0x00, 0x24)\ntag_1:\n  mstore(0x00, address)\n  0x73\n  dup2\n  mstore8\n  dup3\n  dup2\n  return\nstop\n\nsub_0: assembly {\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":707:4455  library SafeERC20 {... */\n      eq(address, deployTimeAddress())\n      mstore(0x40, 0x80)\n      0x00\n      dup1\n      revert\n\n    auxdata: 0xa26469706673582212206cf88f5263029175b3545a48eae10b12554cc86876c6445b3e4e83cc514c8f4264736f6c63430008110033\n}\n",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "60566050600b82828239805160001a6073146043577f4e487b7100000000000000000000000000000000000000000000000000000000600052600060045260246000fd5b30600052607381538281f3fe73000000000000000000000000000000000000000030146080604052600080fdfea26469706673582212206cf88f5263029175b3545a48eae10b12554cc86876c6445b3e4e83cc514c8f4264736f6c63430008110033",
							"opcodes": "PUSH1 0x56 PUSH1 0x50 PUSH1 0xB DUP3 DUP3 DUP3 CODECOPY DUP1 MLOAD PUSH1 0x0 BYTE PUSH1 0x73 EQ PUSH1 0x43 JUMPI PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x0 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST ADDRESS PUSH1 0x0 MSTORE PUSH1 0x73 DUP2 MSTORE8 DUP3 DUP2 RETURN INVALID PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 PUSH13 0xF88F5263029175B3545A48EAE1 SIGNEXTEND SLT SSTORE 0x4C 0xC8 PUSH9 0x76C6445B3E4E83CC51 0x4C DUP16 TIMESTAMP PUSH5 0x736F6C6343 STOP ADDMOD GT STOP CALLER ",
							"sourceMap": "707:3748:2:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;"
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "73000000000000000000000000000000000000000030146080604052600080fdfea26469706673582212206cf88f5263029175b3545a48eae10b12554cc86876c6445b3e4e83cc514c8f4264736f6c63430008110033",
							"opcodes": "PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 PUSH13 0xF88F5263029175B3545A48EAE1 SIGNEXTEND SLT SSTORE 0x4C 0xC8 PUSH9 0x76C6445B3E4E83CC51 0x4C DUP16 TIMESTAMP PUSH5 0x736F6C6343 STOP ADDMOD GT STOP CALLER ",
							"sourceMap": "707:3748:2:-:0;;;;;;;;"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "17200",
								"executionCost": "97",
								"totalCost": "17297"
							},
							"internal": {
								"_callOptionalReturn(contract IERC20,bytes memory)": "infinite",
								"safeApprove(contract IERC20,address,uint256)": "infinite",
								"safeDecreaseAllowance(contract IERC20,address,uint256)": "infinite",
								"safeIncreaseAllowance(contract IERC20,address,uint256)": "infinite",
								"safePermit(contract IERC20Permit,address,address,uint256,uint256,uint8,bytes32,bytes32)": "infinite",
								"safeTransfer(contract IERC20,address,uint256)": "infinite",
								"safeTransferFrom(contract IERC20,address,address,uint256)": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 707,
									"end": 4455,
									"name": "PUSH #[$]",
									"source": 2,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 707,
									"end": 4455,
									"name": "PUSH [$]",
									"source": 2,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 707,
									"end": 4455,
									"name": "PUSH",
									"source": 2,
									"value": "B"
								},
								{
									"begin": 707,
									"end": 4455,
									"name": "DUP3",
									"source": 2
								},
								{
									"begin": 707,
									"end": 4455,
									"name": "DUP3",
									"source": 2
								},
								{
									"begin": 707,
									"end": 4455,
									"name": "DUP3",
									"source": 2
								},
								{
									"begin": 707,
									"end": 4455,
									"name": "CODECOPY",
									"source": 2
								},
								{
									"begin": 707,
									"end": 4455,
									"name": "DUP1",
									"source": 2
								},
								{
									"begin": 707,
									"end": 4455,
									"name": "MLOAD",
									"source": 2
								},
								{
									"begin": 707,
									"end": 4455,
									"name": "PUSH",
									"source": 2,
									"value": "0"
								},
								{
									"begin": 707,
									"end": 4455,
									"name": "BYTE",
									"source": 2
								},
								{
									"begin": 707,
									"end": 4455,
									"name": "PUSH",
									"source": 2,
									"value": "73"
								},
								{
									"begin": 707,
									"end": 4455,
									"name": "EQ",
									"source": 2
								},
								{
									"begin": 707,
									"end": 4455,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "1"
								},
								{
									"begin": 707,
									"end": 4455,
									"name": "JUMPI",
									"source": 2
								},
								{
									"begin": 707,
									"end": 4455,
									"name": "PUSH",
									"source": 2,
									"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 707,
									"end": 4455,
									"name": "PUSH",
									"source": 2,
									"value": "0"
								},
								{
									"begin": 707,
									"end": 4455,
									"name": "MSTORE",
									"source": 2
								},
								{
									"begin": 707,
									"end": 4455,
									"name": "PUSH",
									"source": 2,
									"value": "0"
								},
								{
									"begin": 707,
									"end": 4455,
									"name": "PUSH",
									"source": 2,
									"value": "4"
								},
								{
									"begin": 707,
									"end": 4455,
									"name": "MSTORE",
									"source": 2
								},
								{
									"begin": 707,
									"end": 4455,
									"name": "PUSH",
									"source": 2,
									"value": "24"
								},
								{
									"begin": 707,
									"end": 4455,
									"name": "PUSH",
									"source": 2,
									"value": "0"
								},
								{
									"begin": 707,
									"end": 4455,
									"name": "REVERT",
									"source": 2
								},
								{
									"begin": 707,
									"end": 4455,
									"name": "tag",
									"source": 2,
									"value": "1"
								},
								{
									"begin": 707,
									"end": 4455,
									"name": "JUMPDEST",
									"source": 2
								},
								{
									"begin": 707,
									"end": 4455,
									"name": "ADDRESS",
									"source": 2
								},
								{
									"begin": 707,
									"end": 4455,
									"name": "PUSH",
									"source": 2,
									"value": "0"
								},
								{
									"begin": 707,
									"end": 4455,
									"name": "MSTORE",
									"source": 2
								},
								{
									"begin": 707,
									"end": 4455,
									"name": "PUSH",
									"source": 2,
									"value": "73"
								},
								{
									"begin": 707,
									"end": 4455,
									"name": "DUP2",
									"source": 2
								},
								{
									"begin": 707,
									"end": 4455,
									"name": "MSTORE8",
									"source": 2
								},
								{
									"begin": 707,
									"end": 4455,
									"name": "DUP3",
									"source": 2
								},
								{
									"begin": 707,
									"end": 4455,
									"name": "DUP2",
									"source": 2
								},
								{
									"begin": 707,
									"end": 4455,
									"name": "RETURN",
									"source": 2
								}
							],
							".data": {
								"0": {
									".auxdata": "a26469706673582212206cf88f5263029175b3545a48eae10b12554cc86876c6445b3e4e83cc514c8f4264736f6c63430008110033",
									".code": [
										{
											"begin": 707,
											"end": 4455,
											"name": "PUSHDEPLOYADDRESS",
											"source": 2
										},
										{
											"begin": 707,
											"end": 4455,
											"name": "ADDRESS",
											"source": 2
										},
										{
											"begin": 707,
											"end": 4455,
											"name": "EQ",
											"source": 2
										},
										{
											"begin": 707,
											"end": 4455,
											"name": "PUSH",
											"source": 2,
											"value": "80"
										},
										{
											"begin": 707,
											"end": 4455,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 707,
											"end": 4455,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 707,
											"end": 4455,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 707,
											"end": 4455,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 707,
											"end": 4455,
											"name": "REVERT",
											"source": 2
										}
									]
								}
							},
							"sourceList": [
								"@openzeppelin/contracts/token/ERC20/IERC20.sol",
								"@openzeppelin/contracts/token/ERC20/extensions/draft-IERC20Permit.sol",
								"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol",
								"@openzeppelin/contracts/utils/Address.sol",
								"DengLianHW/w5-2/contracts/MyTokenMarket.sol",
								"DengLianHW/w5-2/contracts/Uniswap/interfaces/IUniswapV2Router01.sol",
								"#utility.yul"
							]
						},
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.17+commit.8df45f5f\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"details\":\"Wrappers around ERC20 operations that throw on failure (when the token contract returns false). Tokens that return no value (and instead revert or throw on failure) are also supported, non-reverting calls are assumed to be successful. To use this library you can add a `using SafeERC20 for IERC20;` statement to your contract, which allows you to call the safe operations as `token.safeTransfer(...)`, etc.\",\"kind\":\"dev\",\"methods\":{},\"title\":\"SafeERC20\",\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":\"SafeERC20\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0x9750c6b834f7b43000631af5cc30001c5f547b3ceb3635488f140f60e897ea6b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://5a7d5b1ef5d8d5889ad2ed89d8619c09383b80b72ab226e0fe7bde1636481e34\",\"dweb:/ipfs/QmebXWgtEfumQGBdVeM6c71McLixYXQP5Bk6kKXuoY4Bmr\"]},\"@openzeppelin/contracts/token/ERC20/extensions/draft-IERC20Permit.sol\":{\"keccak256\":\"0xf41ca991f30855bf80ffd11e9347856a517b977f0a6c2d52e6421a99b7840329\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://b2717fd2bdac99daa960a6de500754ea1b932093c946388c381da48658234b95\",\"dweb:/ipfs/QmP6QVMn6UeA3ByahyJbYQr5M6coHKBKsf3ySZSfbyA8R7\"]},\"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":{\"keccak256\":\"0x9b72f93be69ca894d8492c244259615c4a742afc8d63720dbc8bb81087d9b238\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://f5a7b96e511be78d5cdf635c784e6ab8cdd38625bb8cafb8a80914a1c89cf0f6\",\"dweb:/ipfs/QmVzTCwJxQAkjRQHboT5QrvsVJGWQHgfEjeTbvyxoKBrds\"]},\"@openzeppelin/contracts/utils/Address.sol\":{\"keccak256\":\"0xf96f969e24029d43d0df89e59d365f277021dac62b48e1c1e3ebe0acdd7f1ca1\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://ec772b45a624be516f1c81970caa8a2e144301e9d0921cbc1a2789fef39a1269\",\"dweb:/ipfs/QmNyjwxCrGhQMyzLD93oUobJXVe9ceJvRvfXwbEtuxPiEj\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/utils/Address.sol": {
				"Address": {
					"abi": [],
					"devdoc": {
						"details": "Collection of functions related to the address type",
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"@openzeppelin/contracts/utils/Address.sol\":194:9158  library Address {... */\n  dataSize(sub_0)\n  dataOffset(sub_0)\n  0x0b\n  dup3\n  dup3\n  dup3\n  codecopy\n  dup1\n  mload\n  0x00\n  byte\n  0x73\n  eq\n  tag_1\n  jumpi\n  mstore(0x00, 0x4e487b7100000000000000000000000000000000000000000000000000000000)\n  mstore(0x04, 0x00)\n  revert(0x00, 0x24)\ntag_1:\n  mstore(0x00, address)\n  0x73\n  dup2\n  mstore8\n  dup3\n  dup2\n  return\nstop\n\nsub_0: assembly {\n        /* \"@openzeppelin/contracts/utils/Address.sol\":194:9158  library Address {... */\n      eq(address, deployTimeAddress())\n      mstore(0x40, 0x80)\n      0x00\n      dup1\n      revert\n\n    auxdata: 0xa26469706673582212201456f7767f46f239da11f81368573b480f6d8de2e2a321dadf5bcd65d1c39d7564736f6c63430008110033\n}\n",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "60566050600b82828239805160001a6073146043577f4e487b7100000000000000000000000000000000000000000000000000000000600052600060045260246000fd5b30600052607381538281f3fe73000000000000000000000000000000000000000030146080604052600080fdfea26469706673582212201456f7767f46f239da11f81368573b480f6d8de2e2a321dadf5bcd65d1c39d7564736f6c63430008110033",
							"opcodes": "PUSH1 0x56 PUSH1 0x50 PUSH1 0xB DUP3 DUP3 DUP3 CODECOPY DUP1 MLOAD PUSH1 0x0 BYTE PUSH1 0x73 EQ PUSH1 0x43 JUMPI PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x0 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST ADDRESS PUSH1 0x0 MSTORE PUSH1 0x73 DUP2 MSTORE8 DUP3 DUP2 RETURN INVALID PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 EQ JUMP 0xF7 PUSH23 0x7F46F239DA11F81368573B480F6D8DE2E2A321DADF5BCD PUSH6 0xD1C39D756473 PUSH16 0x6C634300081100330000000000000000 ",
							"sourceMap": "194:8964:3:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;"
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "73000000000000000000000000000000000000000030146080604052600080fdfea26469706673582212201456f7767f46f239da11f81368573b480f6d8de2e2a321dadf5bcd65d1c39d7564736f6c63430008110033",
							"opcodes": "PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 EQ JUMP 0xF7 PUSH23 0x7F46F239DA11F81368573B480F6D8DE2E2A321DADF5BCD PUSH6 0xD1C39D756473 PUSH16 0x6C634300081100330000000000000000 ",
							"sourceMap": "194:8964:3:-:0;;;;;;;;"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "17200",
								"executionCost": "97",
								"totalCost": "17297"
							},
							"internal": {
								"_revert(bytes memory,string memory)": "infinite",
								"functionCall(address,bytes memory)": "infinite",
								"functionCall(address,bytes memory,string memory)": "infinite",
								"functionCallWithValue(address,bytes memory,uint256)": "infinite",
								"functionCallWithValue(address,bytes memory,uint256,string memory)": "infinite",
								"functionDelegateCall(address,bytes memory)": "infinite",
								"functionDelegateCall(address,bytes memory,string memory)": "infinite",
								"functionStaticCall(address,bytes memory)": "infinite",
								"functionStaticCall(address,bytes memory,string memory)": "infinite",
								"isContract(address)": "infinite",
								"sendValue(address payable,uint256)": "infinite",
								"verifyCallResult(bool,bytes memory,string memory)": "infinite",
								"verifyCallResultFromTarget(address,bool,bytes memory,string memory)": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 194,
									"end": 9158,
									"name": "PUSH #[$]",
									"source": 3,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 194,
									"end": 9158,
									"name": "PUSH [$]",
									"source": 3,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 194,
									"end": 9158,
									"name": "PUSH",
									"source": 3,
									"value": "B"
								},
								{
									"begin": 194,
									"end": 9158,
									"name": "DUP3",
									"source": 3
								},
								{
									"begin": 194,
									"end": 9158,
									"name": "DUP3",
									"source": 3
								},
								{
									"begin": 194,
									"end": 9158,
									"name": "DUP3",
									"source": 3
								},
								{
									"begin": 194,
									"end": 9158,
									"name": "CODECOPY",
									"source": 3
								},
								{
									"begin": 194,
									"end": 9158,
									"name": "DUP1",
									"source": 3
								},
								{
									"begin": 194,
									"end": 9158,
									"name": "MLOAD",
									"source": 3
								},
								{
									"begin": 194,
									"end": 9158,
									"name": "PUSH",
									"source": 3,
									"value": "0"
								},
								{
									"begin": 194,
									"end": 9158,
									"name": "BYTE",
									"source": 3
								},
								{
									"begin": 194,
									"end": 9158,
									"name": "PUSH",
									"source": 3,
									"value": "73"
								},
								{
									"begin": 194,
									"end": 9158,
									"name": "EQ",
									"source": 3
								},
								{
									"begin": 194,
									"end": 9158,
									"name": "PUSH [tag]",
									"source": 3,
									"value": "1"
								},
								{
									"begin": 194,
									"end": 9158,
									"name": "JUMPI",
									"source": 3
								},
								{
									"begin": 194,
									"end": 9158,
									"name": "PUSH",
									"source": 3,
									"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 194,
									"end": 9158,
									"name": "PUSH",
									"source": 3,
									"value": "0"
								},
								{
									"begin": 194,
									"end": 9158,
									"name": "MSTORE",
									"source": 3
								},
								{
									"begin": 194,
									"end": 9158,
									"name": "PUSH",
									"source": 3,
									"value": "0"
								},
								{
									"begin": 194,
									"end": 9158,
									"name": "PUSH",
									"source": 3,
									"value": "4"
								},
								{
									"begin": 194,
									"end": 9158,
									"name": "MSTORE",
									"source": 3
								},
								{
									"begin": 194,
									"end": 9158,
									"name": "PUSH",
									"source": 3,
									"value": "24"
								},
								{
									"begin": 194,
									"end": 9158,
									"name": "PUSH",
									"source": 3,
									"value": "0"
								},
								{
									"begin": 194,
									"end": 9158,
									"name": "REVERT",
									"source": 3
								},
								{
									"begin": 194,
									"end": 9158,
									"name": "tag",
									"source": 3,
									"value": "1"
								},
								{
									"begin": 194,
									"end": 9158,
									"name": "JUMPDEST",
									"source": 3
								},
								{
									"begin": 194,
									"end": 9158,
									"name": "ADDRESS",
									"source": 3
								},
								{
									"begin": 194,
									"end": 9158,
									"name": "PUSH",
									"source": 3,
									"value": "0"
								},
								{
									"begin": 194,
									"end": 9158,
									"name": "MSTORE",
									"source": 3
								},
								{
									"begin": 194,
									"end": 9158,
									"name": "PUSH",
									"source": 3,
									"value": "73"
								},
								{
									"begin": 194,
									"end": 9158,
									"name": "DUP2",
									"source": 3
								},
								{
									"begin": 194,
									"end": 9158,
									"name": "MSTORE8",
									"source": 3
								},
								{
									"begin": 194,
									"end": 9158,
									"name": "DUP3",
									"source": 3
								},
								{
									"begin": 194,
									"end": 9158,
									"name": "DUP2",
									"source": 3
								},
								{
									"begin": 194,
									"end": 9158,
									"name": "RETURN",
									"source": 3
								}
							],
							".data": {
								"0": {
									".auxdata": "a26469706673582212201456f7767f46f239da11f81368573b480f6d8de2e2a321dadf5bcd65d1c39d7564736f6c63430008110033",
									".code": [
										{
											"begin": 194,
											"end": 9158,
											"name": "PUSHDEPLOYADDRESS",
											"source": 3
										},
										{
											"begin": 194,
											"end": 9158,
											"name": "ADDRESS",
											"source": 3
										},
										{
											"begin": 194,
											"end": 9158,
											"name": "EQ",
											"source": 3
										},
										{
											"begin": 194,
											"end": 9158,
											"name": "PUSH",
											"source": 3,
											"value": "80"
										},
										{
											"begin": 194,
											"end": 9158,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 194,
											"end": 9158,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 194,
											"end": 9158,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 194,
											"end": 9158,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 194,
											"end": 9158,
											"name": "REVERT",
											"source": 3
										}
									]
								}
							},
							"sourceList": [
								"@openzeppelin/contracts/token/ERC20/IERC20.sol",
								"@openzeppelin/contracts/token/ERC20/extensions/draft-IERC20Permit.sol",
								"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol",
								"@openzeppelin/contracts/utils/Address.sol",
								"DengLianHW/w5-2/contracts/MyTokenMarket.sol",
								"DengLianHW/w5-2/contracts/Uniswap/interfaces/IUniswapV2Router01.sol",
								"#utility.yul"
							]
						},
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.17+commit.8df45f5f\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"details\":\"Collection of functions related to the address type\",\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/utils/Address.sol\":\"Address\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/utils/Address.sol\":{\"keccak256\":\"0xf96f969e24029d43d0df89e59d365f277021dac62b48e1c1e3ebe0acdd7f1ca1\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://ec772b45a624be516f1c81970caa8a2e144301e9d0921cbc1a2789fef39a1269\",\"dweb:/ipfs/QmNyjwxCrGhQMyzLD93oUobJXVe9ceJvRvfXwbEtuxPiEj\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"DengLianHW/w5-2/contracts/MyTokenMarket.sol": {
				"MyTokenMarket": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "_router",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "_weth",
									"type": "address"
								}
							],
							"stateMutability": "nonpayable",
							"type": "constructor"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "tokenA",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "amountA",
									"type": "uint256"
								},
								{
									"internalType": "address",
									"name": "tokenB",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "amountB",
									"type": "uint256"
								}
							],
							"name": "AddLiquidity",
							"outputs": [],
							"stateMutability": "payable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "token",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "tokenAmount",
									"type": "uint256"
								}
							],
							"name": "AddLiquidityETH",
							"outputs": [],
							"stateMutability": "payable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "tokenA",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "tokenB",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "amountIn",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "minTokenAmount",
									"type": "uint256"
								}
							],
							"name": "buyToken",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "token",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "minTokenAmount",
									"type": "uint256"
								}
							],
							"name": "buyTokenWithETH",
							"outputs": [],
							"stateMutability": "payable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "router",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "weth",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						}
					],
					"devdoc": {
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"DengLianHW/w5-2/contracts/MyTokenMarket.sol\":235:2357  contract MyTokenMarket {... */\n  mstore(0x40, 0x80)\n    /* \"DengLianHW/w5-2/contracts/MyTokenMarket.sol\":350:449  constructor(address _router, address _weth) {... */\n  callvalue\n  dup1\n  iszero\n  tag_1\n  jumpi\n  0x00\n  dup1\n  revert\ntag_1:\n  pop\n  mload(0x40)\n  sub(codesize, bytecodeSize)\n  dup1\n  bytecodeSize\n  dup4\n  codecopy\n  dup2\n  dup2\n  add\n  0x40\n  mstore\n  dup2\n  add\n  swap1\n  tag_2\n  swap2\n  swap1\n  tag_3\n  jump\t// in\ntag_2:\n    /* \"DengLianHW/w5-2/contracts/MyTokenMarket.sol\":413:420  _router */\n  dup2\n    /* \"DengLianHW/w5-2/contracts/MyTokenMarket.sol\":404:410  router */\n  0x00\n  dup1\n    /* \"DengLianHW/w5-2/contracts/MyTokenMarket.sol\":404:420  router = _router */\n  0x0100\n  exp\n  dup2\n  sload\n  dup2\n  0xffffffffffffffffffffffffffffffffffffffff\n  mul\n  not\n  and\n  swap1\n  dup4\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  mul\n  or\n  swap1\n  sstore\n  pop\n    /* \"DengLianHW/w5-2/contracts/MyTokenMarket.sol\":437:442  _weth */\n  dup1\n    /* \"DengLianHW/w5-2/contracts/MyTokenMarket.sol\":430:434  weth */\n  0x01\n  0x00\n    /* \"DengLianHW/w5-2/contracts/MyTokenMarket.sol\":430:442  weth = _weth */\n  0x0100\n  exp\n  dup2\n  sload\n  dup2\n  0xffffffffffffffffffffffffffffffffffffffff\n  mul\n  not\n  and\n  swap1\n  dup4\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  mul\n  or\n  swap1\n  sstore\n  pop\n    /* \"DengLianHW/w5-2/contracts/MyTokenMarket.sol\":350:449  constructor(address _router, address _weth) {... */\n  pop\n  pop\n    /* \"DengLianHW/w5-2/contracts/MyTokenMarket.sol\":235:2357  contract MyTokenMarket {... */\n  jump(tag_6)\n    /* \"#utility.yul\":88:205   */\ntag_8:\n    /* \"#utility.yul\":197:198   */\n  0x00\n    /* \"#utility.yul\":194:195   */\n  dup1\n    /* \"#utility.yul\":187:199   */\n  revert\n    /* \"#utility.yul\":334:460   */\ntag_10:\n    /* \"#utility.yul\":371:378   */\n  0x00\n    /* \"#utility.yul\":411:453   */\n  0xffffffffffffffffffffffffffffffffffffffff\n    /* \"#utility.yul\":404:409   */\n  dup3\n    /* \"#utility.yul\":400:454   */\n  and\n    /* \"#utility.yul\":389:454   */\n  swap1\n  pop\n    /* \"#utility.yul\":334:460   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":466:562   */\ntag_11:\n    /* \"#utility.yul\":503:510   */\n  0x00\n    /* \"#utility.yul\":532:556   */\n  tag_20\n    /* \"#utility.yul\":550:555   */\n  dup3\n    /* \"#utility.yul\":532:556   */\n  tag_10\n  jump\t// in\ntag_20:\n    /* \"#utility.yul\":521:556   */\n  swap1\n  pop\n    /* \"#utility.yul\":466:562   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":568:690   */\ntag_12:\n    /* \"#utility.yul\":641:665   */\n  tag_22\n    /* \"#utility.yul\":659:664   */\n  dup2\n    /* \"#utility.yul\":641:665   */\n  tag_11\n  jump\t// in\ntag_22:\n    /* \"#utility.yul\":634:639   */\n  dup2\n    /* \"#utility.yul\":631:666   */\n  eq\n    /* \"#utility.yul\":621:684   */\n  tag_23\n  jumpi\n    /* \"#utility.yul\":680:681   */\n  0x00\n    /* \"#utility.yul\":677:678   */\n  dup1\n    /* \"#utility.yul\":670:682   */\n  revert\n    /* \"#utility.yul\":621:684   */\ntag_23:\n    /* \"#utility.yul\":568:690   */\n  pop\n  jump\t// out\n    /* \"#utility.yul\":696:839   */\ntag_13:\n    /* \"#utility.yul\":753:758   */\n  0x00\n    /* \"#utility.yul\":784:790   */\n  dup2\n    /* \"#utility.yul\":778:791   */\n  mload\n    /* \"#utility.yul\":769:791   */\n  swap1\n  pop\n    /* \"#utility.yul\":800:833   */\n  tag_25\n    /* \"#utility.yul\":827:832   */\n  dup2\n    /* \"#utility.yul\":800:833   */\n  tag_12\n  jump\t// in\ntag_25:\n    /* \"#utility.yul\":696:839   */\n  swap3\n  swap2\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":845:1352   */\ntag_3:\n    /* \"#utility.yul\":924:930   */\n  0x00\n    /* \"#utility.yul\":932:938   */\n  dup1\n    /* \"#utility.yul\":981:983   */\n  0x40\n    /* \"#utility.yul\":969:978   */\n  dup4\n    /* \"#utility.yul\":960:967   */\n  dup6\n    /* \"#utility.yul\":956:979   */\n  sub\n    /* \"#utility.yul\":952:984   */\n  slt\n    /* \"#utility.yul\":949:1068   */\n  iszero\n  tag_27\n  jumpi\n    /* \"#utility.yul\":987:1066   */\n  tag_28\n  tag_8\n  jump\t// in\ntag_28:\n    /* \"#utility.yul\":949:1068   */\ntag_27:\n    /* \"#utility.yul\":1107:1108   */\n  0x00\n    /* \"#utility.yul\":1132:1196   */\n  tag_29\n    /* \"#utility.yul\":1188:1195   */\n  dup6\n    /* \"#utility.yul\":1179:1185   */\n  dup3\n    /* \"#utility.yul\":1168:1177   */\n  dup7\n    /* \"#utility.yul\":1164:1186   */\n  add\n    /* \"#utility.yul\":1132:1196   */\n  tag_13\n  jump\t// in\ntag_29:\n    /* \"#utility.yul\":1122:1196   */\n  swap3\n  pop\n    /* \"#utility.yul\":1078:1206   */\n  pop\n    /* \"#utility.yul\":1245:1247   */\n  0x20\n    /* \"#utility.yul\":1271:1335   */\n  tag_30\n    /* \"#utility.yul\":1327:1334   */\n  dup6\n    /* \"#utility.yul\":1318:1324   */\n  dup3\n    /* \"#utility.yul\":1307:1316   */\n  dup7\n    /* \"#utility.yul\":1303:1325   */\n  add\n    /* \"#utility.yul\":1271:1335   */\n  tag_13\n  jump\t// in\ntag_30:\n    /* \"#utility.yul\":1261:1335   */\n  swap2\n  pop\n    /* \"#utility.yul\":1216:1345   */\n  pop\n    /* \"#utility.yul\":845:1352   */\n  swap3\n  pop\n  swap3\n  swap1\n  pop\n  jump\t// out\n    /* \"DengLianHW/w5-2/contracts/MyTokenMarket.sol\":235:2357  contract MyTokenMarket {... */\ntag_6:\n  dataSize(sub_0)\n  dup1\n  dataOffset(sub_0)\n  0x00\n  codecopy\n  0x00\n  return\nstop\n\nsub_0: assembly {\n        /* \"DengLianHW/w5-2/contracts/MyTokenMarket.sol\":235:2357  contract MyTokenMarket {... */\n      mstore(0x40, 0x80)\n      jumpi(tag_1, lt(calldatasize, 0x04))\n      shr(0xe0, calldataload(0x00))\n      dup1\n      0x07ee83a1\n      eq\n      tag_2\n      jumpi\n      dup1\n      0x3fc8cef3\n      eq\n      tag_3\n      jumpi\n      dup1\n      0x7d17ff3d\n      eq\n      tag_4\n      jumpi\n      dup1\n      0x839da792\n      eq\n      tag_5\n      jumpi\n      dup1\n      0xb4688dc8\n      eq\n      tag_6\n      jumpi\n      dup1\n      0xf887ea40\n      eq\n      tag_7\n      jumpi\n    tag_1:\n      0x00\n      dup1\n      revert\n        /* \"DengLianHW/w5-2/contracts/MyTokenMarket.sol\":1005:1517  function AddLiquidity(address tokenA, uint amountA, address tokenB, uint amountB) public payable{... */\n    tag_2:\n      tag_8\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_9\n      swap2\n      swap1\n      tag_10\n      jump\t// in\n    tag_9:\n      tag_11\n      jump\t// in\n    tag_8:\n      stop\n        /* \"DengLianHW/w5-2/contracts/MyTokenMarket.sol\":324:343  address public weth */\n    tag_3:\n      callvalue\n      dup1\n      iszero\n      tag_12\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_12:\n      pop\n      tag_13\n      tag_14\n      jump\t// in\n    tag_13:\n      mload(0x40)\n      tag_15\n      swap2\n      swap1\n      tag_16\n      jump\t// in\n    tag_15:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"DengLianHW/w5-2/contracts/MyTokenMarket.sol\":1898:2354  function buyToken(address tokenA, address tokenB, uint amountIn, uint minTokenAmount) public {... */\n    tag_4:\n      callvalue\n      dup1\n      iszero\n      tag_17\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_17:\n      pop\n      tag_18\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_19\n      swap2\n      swap1\n      tag_20\n      jump\t// in\n    tag_19:\n      tag_21\n      jump\t// in\n    tag_18:\n      stop\n        /* \"DengLianHW/w5-2/contracts/MyTokenMarket.sol\":494:957  function AddLiquidityETH(address token, uint tokenAmount) public payable {... */\n    tag_5:\n      tag_22\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_23\n      swap2\n      swap1\n      tag_24\n      jump\t// in\n    tag_23:\n      tag_25\n      jump\t// in\n    tag_22:\n      stop\n        /* \"DengLianHW/w5-2/contracts/MyTokenMarket.sol\":1551:1861  function buyTokenWithETH(address token, uint minTokenAmount) public payable {... */\n    tag_6:\n      tag_26\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_27\n      swap2\n      swap1\n      tag_24\n      jump\t// in\n    tag_27:\n      tag_28\n      jump\t// in\n    tag_26:\n      stop\n        /* \"DengLianHW/w5-2/contracts/MyTokenMarket.sol\":297:318  address public router */\n    tag_7:\n      callvalue\n      dup1\n      iszero\n      tag_29\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_29:\n      pop\n      tag_30\n      tag_31\n      jump\t// in\n    tag_30:\n      mload(0x40)\n      tag_32\n      swap2\n      swap1\n      tag_16\n      jump\t// in\n    tag_32:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"DengLianHW/w5-2/contracts/MyTokenMarket.sol\":1005:1517  function AddLiquidity(address tokenA, uint amountA, address tokenB, uint amountB) public payable{... */\n    tag_11:\n        /* \"DengLianHW/w5-2/contracts/MyTokenMarket.sol\":1111:1178  IERC20(tokenA).safeTransferFrom(msg.sender, address(this), amountA) */\n      tag_34\n        /* \"DengLianHW/w5-2/contracts/MyTokenMarket.sol\":1143:1153  msg.sender */\n      caller\n        /* \"DengLianHW/w5-2/contracts/MyTokenMarket.sol\":1163:1167  this */\n      address\n        /* \"DengLianHW/w5-2/contracts/MyTokenMarket.sol\":1170:1177  amountA */\n      dup6\n        /* \"DengLianHW/w5-2/contracts/MyTokenMarket.sol\":1118:1124  tokenA */\n      dup8\n        /* \"DengLianHW/w5-2/contracts/MyTokenMarket.sol\":1111:1142  IERC20(tokenA).safeTransferFrom */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      tag_35\n      swap1\n        /* \"DengLianHW/w5-2/contracts/MyTokenMarket.sol\":1111:1178  IERC20(tokenA).safeTransferFrom(msg.sender, address(this), amountA) */\n      swap4\n      swap3\n      swap2\n      swap1\n      0xffffffff\n      and\n      jump\t// in\n    tag_34:\n        /* \"DengLianHW/w5-2/contracts/MyTokenMarket.sol\":1188:1231  IERC20(tokenA).safeApprove(router, amountA) */\n      tag_36\n        /* \"DengLianHW/w5-2/contracts/MyTokenMarket.sol\":1215:1221  router */\n      0x00\n      dup1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"DengLianHW/w5-2/contracts/MyTokenMarket.sol\":1223:1230  amountA */\n      dup5\n        /* \"DengLianHW/w5-2/contracts/MyTokenMarket.sol\":1195:1201  tokenA */\n      dup7\n        /* \"DengLianHW/w5-2/contracts/MyTokenMarket.sol\":1188:1214  IERC20(tokenA).safeApprove */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      tag_37\n      swap1\n        /* \"DengLianHW/w5-2/contracts/MyTokenMarket.sol\":1188:1231  IERC20(tokenA).safeApprove(router, amountA) */\n      swap3\n      swap2\n      swap1\n      0xffffffff\n      and\n      jump\t// in\n    tag_36:\n        /* \"DengLianHW/w5-2/contracts/MyTokenMarket.sol\":1242:1309  IERC20(tokenB).safeTransferFrom(msg.sender, address(this), amountB) */\n      tag_38\n        /* \"DengLianHW/w5-2/contracts/MyTokenMarket.sol\":1274:1284  msg.sender */\n      caller\n        /* \"DengLianHW/w5-2/contracts/MyTokenMarket.sol\":1294:1298  this */\n      address\n        /* \"DengLianHW/w5-2/contracts/MyTokenMarket.sol\":1301:1308  amountB */\n      dup4\n        /* \"DengLianHW/w5-2/contracts/MyTokenMarket.sol\":1249:1255  tokenB */\n      dup6\n        /* \"DengLianHW/w5-2/contracts/MyTokenMarket.sol\":1242:1273  IERC20(tokenB).safeTransferFrom */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      tag_35\n      swap1\n        /* \"DengLianHW/w5-2/contracts/MyTokenMarket.sol\":1242:1309  IERC20(tokenB).safeTransferFrom(msg.sender, address(this), amountB) */\n      swap4\n      swap3\n      swap2\n      swap1\n      0xffffffff\n      and\n      jump\t// in\n    tag_38:\n        /* \"DengLianHW/w5-2/contracts/MyTokenMarket.sol\":1319:1362  IERC20(tokenB).safeApprove(router, amountB) */\n      tag_39\n        /* \"DengLianHW/w5-2/contracts/MyTokenMarket.sol\":1346:1352  router */\n      0x00\n      dup1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"DengLianHW/w5-2/contracts/MyTokenMarket.sol\":1354:1361  amountB */\n      dup3\n        /* \"DengLianHW/w5-2/contracts/MyTokenMarket.sol\":1326:1332  tokenB */\n      dup5\n        /* \"DengLianHW/w5-2/contracts/MyTokenMarket.sol\":1319:1345  IERC20(tokenB).safeApprove */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      tag_37\n      swap1\n        /* \"DengLianHW/w5-2/contracts/MyTokenMarket.sol\":1319:1362  IERC20(tokenB).safeApprove(router, amountB) */\n      swap3\n      swap2\n      swap1\n      0xffffffff\n      and\n      jump\t// in\n    tag_39:\n        /* \"DengLianHW/w5-2/contracts/MyTokenMarket.sol\":1392:1398  router */\n      0x00\n      dup1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"DengLianHW/w5-2/contracts/MyTokenMarket.sol\":1373:1412  IUniswapV2Router01(router).addLiquidity */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xe8e33700\n        /* \"DengLianHW/w5-2/contracts/MyTokenMarket.sol\":1413:1419  tokenA */\n      dup6\n        /* \"DengLianHW/w5-2/contracts/MyTokenMarket.sol\":1421:1427  tokenB */\n      dup5\n        /* \"DengLianHW/w5-2/contracts/MyTokenMarket.sol\":1429:1436  amountA */\n      dup7\n        /* \"DengLianHW/w5-2/contracts/MyTokenMarket.sol\":1438:1445  amountB */\n      dup6\n        /* \"DengLianHW/w5-2/contracts/MyTokenMarket.sol\":1447:1448  0 */\n      0x00\n        /* \"DengLianHW/w5-2/contracts/MyTokenMarket.sol\":1450:1451  0 */\n      dup1\n        /* \"DengLianHW/w5-2/contracts/MyTokenMarket.sol\":1453:1463  msg.sender */\n      caller\n        /* \"DengLianHW/w5-2/contracts/MyTokenMarket.sol\":1465:1480  block.timestamp */\n      timestamp\n        /* \"DengLianHW/w5-2/contracts/MyTokenMarket.sol\":1373:1481  IUniswapV2Router01(router).addLiquidity(tokenA, tokenB, amountA, amountB, 0, 0, msg.sender, block.timestamp) */\n      mload(0x40)\n      dup10\n      0xffffffff\n      and\n      0xe0\n      shl\n      dup2\n      mstore\n      0x04\n      add\n      tag_40\n      swap9\n      swap8\n      swap7\n      swap6\n      swap5\n      swap4\n      swap3\n      swap2\n      swap1\n      tag_41\n      jump\t// in\n    tag_40:\n      0x60\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      0x00\n      dup8\n      gas\n      call\n      iszero\n      dup1\n      iszero\n      tag_43\n      jumpi\n      returndatasize\n      0x00\n      dup1\n      returndatacopy\n      revert(0x00, returndatasize)\n    tag_43:\n      pop\n      pop\n      pop\n      pop\n      mload(0x40)\n      returndatasize\n      not(0x1f)\n      0x1f\n      dup3\n      add\n      and\n      dup3\n      add\n      dup1\n      0x40\n      mstore\n      pop\n      dup2\n      add\n      swap1\n      tag_44\n      swap2\n      swap1\n      tag_45\n      jump\t// in\n    tag_44:\n      pop\n      pop\n      pop\n        /* \"DengLianHW/w5-2/contracts/MyTokenMarket.sol\":1005:1517  function AddLiquidity(address tokenA, uint amountA, address tokenB, uint amountB) public payable{... */\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"DengLianHW/w5-2/contracts/MyTokenMarket.sol\":324:343  address public weth */\n    tag_14:\n      0x01\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      jump\t// out\n        /* \"DengLianHW/w5-2/contracts/MyTokenMarket.sol\":1898:2354  function buyToken(address tokenA, address tokenB, uint amountIn, uint minTokenAmount) public {... */\n    tag_21:\n        /* \"DengLianHW/w5-2/contracts/MyTokenMarket.sol\":2001:2022  address[] memory path */\n      0x00\n        /* \"DengLianHW/w5-2/contracts/MyTokenMarket.sol\":2039:2040  2 */\n      0x02\n        /* \"DengLianHW/w5-2/contracts/MyTokenMarket.sol\":2025:2041  new address[](2) */\n      0xffffffffffffffff\n      dup2\n      gt\n      iszero\n      tag_47\n      jumpi\n      tag_48\n      tag_49\n      jump\t// in\n    tag_48:\n    tag_47:\n      mload(0x40)\n      swap1\n      dup1\n      dup3\n      mstore\n      dup1\n      0x20\n      mul\n      0x20\n      add\n      dup3\n      add\n      0x40\n      mstore\n      dup1\n      iszero\n      tag_50\n      jumpi\n      dup2\n      0x20\n      add\n      0x20\n      dup3\n      mul\n      dup1\n      calldatasize\n      dup4\n      calldatacopy\n      dup1\n      dup3\n      add\n      swap2\n      pop\n      pop\n      swap1\n      pop\n    tag_50:\n      pop\n        /* \"DengLianHW/w5-2/contracts/MyTokenMarket.sol\":2001:2041  address[] memory path = new address[](2) */\n      swap1\n      pop\n        /* \"DengLianHW/w5-2/contracts/MyTokenMarket.sol\":2061:2067  tokenA */\n      dup5\n        /* \"DengLianHW/w5-2/contracts/MyTokenMarket.sol\":2051:2055  path */\n      dup2\n        /* \"DengLianHW/w5-2/contracts/MyTokenMarket.sol\":2056:2057  0 */\n      0x00\n        /* \"DengLianHW/w5-2/contracts/MyTokenMarket.sol\":2051:2058  path[0] */\n      dup2\n      mload\n      dup2\n      lt\n      tag_51\n      jumpi\n      tag_52\n      tag_53\n      jump\t// in\n    tag_52:\n    tag_51:\n      0x20\n      mul\n      0x20\n      add\n      add\n        /* \"DengLianHW/w5-2/contracts/MyTokenMarket.sol\":2051:2067  path[0] = tokenA */\n      swap1\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      swap1\n      dup2\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      pop\n      pop\n        /* \"DengLianHW/w5-2/contracts/MyTokenMarket.sol\":2087:2093  tokenB */\n      dup4\n        /* \"DengLianHW/w5-2/contracts/MyTokenMarket.sol\":2077:2081  path */\n      dup2\n        /* \"DengLianHW/w5-2/contracts/MyTokenMarket.sol\":2082:2083  1 */\n      0x01\n        /* \"DengLianHW/w5-2/contracts/MyTokenMarket.sol\":2077:2084  path[1] */\n      dup2\n      mload\n      dup2\n      lt\n      tag_54\n      jumpi\n      tag_55\n      tag_53\n      jump\t// in\n    tag_55:\n    tag_54:\n      0x20\n      mul\n      0x20\n      add\n      add\n        /* \"DengLianHW/w5-2/contracts/MyTokenMarket.sol\":2077:2093  path[1] = tokenB */\n      swap1\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      swap1\n      dup2\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      pop\n      pop\n        /* \"DengLianHW/w5-2/contracts/MyTokenMarket.sol\":2103:2171  IERC20(tokenA).safeTransferFrom(msg.sender, address(this), amountIn) */\n      tag_56\n        /* \"DengLianHW/w5-2/contracts/MyTokenMarket.sol\":2135:2145  msg.sender */\n      caller\n        /* \"DengLianHW/w5-2/contracts/MyTokenMarket.sol\":2155:2159  this */\n      address\n        /* \"DengLianHW/w5-2/contracts/MyTokenMarket.sol\":2162:2170  amountIn */\n      dup6\n        /* \"DengLianHW/w5-2/contracts/MyTokenMarket.sol\":2110:2116  tokenA */\n      dup9\n        /* \"DengLianHW/w5-2/contracts/MyTokenMarket.sol\":2103:2134  IERC20(tokenA).safeTransferFrom */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      tag_35\n      swap1\n        /* \"DengLianHW/w5-2/contracts/MyTokenMarket.sol\":2103:2171  IERC20(tokenA).safeTransferFrom(msg.sender, address(this), amountIn) */\n      swap4\n      swap3\n      swap2\n      swap1\n      0xffffffff\n      and\n      jump\t// in\n    tag_56:\n        /* \"DengLianHW/w5-2/contracts/MyTokenMarket.sol\":2181:2225  IERC20(tokenA).safeApprove(router, amountIn) */\n      tag_57\n        /* \"DengLianHW/w5-2/contracts/MyTokenMarket.sol\":2208:2214  router */\n      0x00\n      dup1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"DengLianHW/w5-2/contracts/MyTokenMarket.sol\":2216:2224  amountIn */\n      dup5\n        /* \"DengLianHW/w5-2/contracts/MyTokenMarket.sol\":2188:2194  tokenA */\n      dup8\n        /* \"DengLianHW/w5-2/contracts/MyTokenMarket.sol\":2181:2207  IERC20(tokenA).safeApprove */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      tag_37\n      swap1\n        /* \"DengLianHW/w5-2/contracts/MyTokenMarket.sol\":2181:2225  IERC20(tokenA).safeApprove(router, amountIn) */\n      swap3\n      swap2\n      swap1\n      0xffffffff\n      and\n      jump\t// in\n    tag_57:\n        /* \"DengLianHW/w5-2/contracts/MyTokenMarket.sol\":2254:2260  router */\n      0x00\n      dup1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"DengLianHW/w5-2/contracts/MyTokenMarket.sol\":2235:2286  IUniswapV2Router01(router).swapExactTokensForTokens */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0x38ed1739\n        /* \"DengLianHW/w5-2/contracts/MyTokenMarket.sol\":2287:2295  amountIn */\n      dup5\n        /* \"DengLianHW/w5-2/contracts/MyTokenMarket.sol\":2297:2311  minTokenAmount */\n      dup5\n        /* \"DengLianHW/w5-2/contracts/MyTokenMarket.sol\":2313:2317  path */\n      dup5\n        /* \"DengLianHW/w5-2/contracts/MyTokenMarket.sol\":2319:2329  msg.sender */\n      caller\n        /* \"DengLianHW/w5-2/contracts/MyTokenMarket.sol\":2331:2346  block.timestamp */\n      timestamp\n        /* \"DengLianHW/w5-2/contracts/MyTokenMarket.sol\":2235:2347  IUniswapV2Router01(router).swapExactTokensForTokens(amountIn, minTokenAmount, path, msg.sender, block.timestamp) */\n      mload(0x40)\n      dup7\n      0xffffffff\n      and\n      0xe0\n      shl\n      dup2\n      mstore\n      0x04\n      add\n      tag_58\n      swap6\n      swap5\n      swap4\n      swap3\n      swap2\n      swap1\n      tag_59\n      jump\t// in\n    tag_58:\n      0x00\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      0x00\n      dup8\n      gas\n      call\n      iszero\n      dup1\n      iszero\n      tag_61\n      jumpi\n      returndatasize\n      0x00\n      dup1\n      returndatacopy\n      revert(0x00, returndatasize)\n    tag_61:\n      pop\n      pop\n      pop\n      pop\n      mload(0x40)\n      returndatasize\n      0x00\n      dup3\n      returndatacopy\n      returndatasize\n      not(0x1f)\n      0x1f\n      dup3\n      add\n      and\n      dup3\n      add\n      dup1\n      0x40\n      mstore\n      pop\n      dup2\n      add\n      swap1\n      tag_62\n      swap2\n      swap1\n      tag_63\n      jump\t// in\n    tag_62:\n      pop\n        /* \"DengLianHW/w5-2/contracts/MyTokenMarket.sol\":1991:2354  {... */\n      pop\n        /* \"DengLianHW/w5-2/contracts/MyTokenMarket.sol\":1898:2354  function buyToken(address tokenA, address tokenB, uint amountIn, uint minTokenAmount) public {... */\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"DengLianHW/w5-2/contracts/MyTokenMarket.sol\":494:957  function AddLiquidityETH(address token, uint tokenAmount) public payable {... */\n    tag_25:\n        /* \"DengLianHW/w5-2/contracts/MyTokenMarket.sol\":577:646  IERC20(token).safeTransferFrom(msg.sender, address(this),tokenAmount) */\n      tag_65\n        /* \"DengLianHW/w5-2/contracts/MyTokenMarket.sol\":608:618  msg.sender */\n      caller\n        /* \"DengLianHW/w5-2/contracts/MyTokenMarket.sol\":628:632  this */\n      address\n        /* \"DengLianHW/w5-2/contracts/MyTokenMarket.sol\":634:645  tokenAmount */\n      dup4\n        /* \"DengLianHW/w5-2/contracts/MyTokenMarket.sol\":584:589  token */\n      dup6\n        /* \"DengLianHW/w5-2/contracts/MyTokenMarket.sol\":577:607  IERC20(token).safeTransferFrom */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      tag_35\n      swap1\n        /* \"DengLianHW/w5-2/contracts/MyTokenMarket.sol\":577:646  IERC20(token).safeTransferFrom(msg.sender, address(this),tokenAmount) */\n      swap4\n      swap3\n      swap2\n      swap1\n      0xffffffff\n      and\n      jump\t// in\n    tag_65:\n        /* \"DengLianHW/w5-2/contracts/MyTokenMarket.sol\":656:702  IERC20(token).safeApprove(router, tokenAmount) */\n      tag_66\n        /* \"DengLianHW/w5-2/contracts/MyTokenMarket.sol\":682:688  router */\n      0x00\n      dup1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"DengLianHW/w5-2/contracts/MyTokenMarket.sol\":690:701  tokenAmount */\n      dup3\n        /* \"DengLianHW/w5-2/contracts/MyTokenMarket.sol\":663:668  token */\n      dup5\n        /* \"DengLianHW/w5-2/contracts/MyTokenMarket.sol\":656:681  IERC20(token).safeApprove */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      tag_37\n      swap1\n        /* \"DengLianHW/w5-2/contracts/MyTokenMarket.sol\":656:702  IERC20(token).safeApprove(router, tokenAmount) */\n      swap3\n      swap2\n      swap1\n      0xffffffff\n      and\n      jump\t// in\n    tag_66:\n        /* \"DengLianHW/w5-2/contracts/MyTokenMarket.sol\":825:831  router */\n      0x00\n      dup1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"DengLianHW/w5-2/contracts/MyTokenMarket.sol\":806:848  IUniswapV2Router01(router).addLiquidityETH */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xf305d719\n        /* \"DengLianHW/w5-2/contracts/MyTokenMarket.sol\":856:865  msg.value */\n      callvalue\n        /* \"DengLianHW/w5-2/contracts/MyTokenMarket.sol\":867:872  token */\n      dup5\n        /* \"DengLianHW/w5-2/contracts/MyTokenMarket.sol\":874:885  tokenAmount */\n      dup5\n        /* \"DengLianHW/w5-2/contracts/MyTokenMarket.sol\":887:888  0 */\n      0x00\n        /* \"DengLianHW/w5-2/contracts/MyTokenMarket.sol\":890:891  0 */\n      dup1\n        /* \"DengLianHW/w5-2/contracts/MyTokenMarket.sol\":893:903  msg.sender */\n      caller\n        /* \"DengLianHW/w5-2/contracts/MyTokenMarket.sol\":905:920  block.timestamp */\n      timestamp\n        /* \"DengLianHW/w5-2/contracts/MyTokenMarket.sol\":806:921  IUniswapV2Router01(router).addLiquidityETH{value: msg.value}(token, tokenAmount, 0, 0, msg.sender, block.timestamp) */\n      mload(0x40)\n      dup9\n      0xffffffff\n      and\n      0xe0\n      shl\n      dup2\n      mstore\n      0x04\n      add\n      tag_67\n      swap7\n      swap6\n      swap5\n      swap4\n      swap3\n      swap2\n      swap1\n      tag_68\n      jump\t// in\n    tag_67:\n      0x60\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      dup6\n      dup9\n      gas\n      call\n      iszero\n      dup1\n      iszero\n      tag_70\n      jumpi\n      returndatasize\n      0x00\n      dup1\n      returndatacopy\n      revert(0x00, returndatasize)\n    tag_70:\n      pop\n      pop\n      pop\n      pop\n      pop\n      mload(0x40)\n      returndatasize\n      not(0x1f)\n      0x1f\n      dup3\n      add\n      and\n      dup3\n      add\n      dup1\n      0x40\n      mstore\n      pop\n      dup2\n      add\n      swap1\n      tag_71\n      swap2\n      swap1\n      tag_45\n      jump\t// in\n    tag_71:\n      pop\n      pop\n      pop\n        /* \"DengLianHW/w5-2/contracts/MyTokenMarket.sol\":494:957  function AddLiquidityETH(address token, uint tokenAmount) public payable {... */\n      pop\n      pop\n      jump\t// out\n        /* \"DengLianHW/w5-2/contracts/MyTokenMarket.sol\":1551:1861  function buyTokenWithETH(address token, uint minTokenAmount) public payable {... */\n    tag_28:\n        /* \"DengLianHW/w5-2/contracts/MyTokenMarket.sol\":1637:1658  address[] memory path */\n      0x00\n        /* \"DengLianHW/w5-2/contracts/MyTokenMarket.sol\":1675:1676  2 */\n      0x02\n        /* \"DengLianHW/w5-2/contracts/MyTokenMarket.sol\":1661:1677  new address[](2) */\n      0xffffffffffffffff\n      dup2\n      gt\n      iszero\n      tag_73\n      jumpi\n      tag_74\n      tag_49\n      jump\t// in\n    tag_74:\n    tag_73:\n      mload(0x40)\n      swap1\n      dup1\n      dup3\n      mstore\n      dup1\n      0x20\n      mul\n      0x20\n      add\n      dup3\n      add\n      0x40\n      mstore\n      dup1\n      iszero\n      tag_75\n      jumpi\n      dup2\n      0x20\n      add\n      0x20\n      dup3\n      mul\n      dup1\n      calldatasize\n      dup4\n      calldatacopy\n      dup1\n      dup3\n      add\n      swap2\n      pop\n      pop\n      swap1\n      pop\n    tag_75:\n      pop\n        /* \"DengLianHW/w5-2/contracts/MyTokenMarket.sol\":1637:1677  address[] memory path = new address[](2) */\n      swap1\n      pop\n        /* \"DengLianHW/w5-2/contracts/MyTokenMarket.sol\":1697:1701  weth */\n      0x01\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"DengLianHW/w5-2/contracts/MyTokenMarket.sol\":1687:1691  path */\n      dup2\n        /* \"DengLianHW/w5-2/contracts/MyTokenMarket.sol\":1692:1693  0 */\n      0x00\n        /* \"DengLianHW/w5-2/contracts/MyTokenMarket.sol\":1687:1694  path[0] */\n      dup2\n      mload\n      dup2\n      lt\n      tag_76\n      jumpi\n      tag_77\n      tag_53\n      jump\t// in\n    tag_77:\n    tag_76:\n      0x20\n      mul\n      0x20\n      add\n      add\n        /* \"DengLianHW/w5-2/contracts/MyTokenMarket.sol\":1687:1701  path[0] = weth */\n      swap1\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      swap1\n      dup2\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      pop\n      pop\n        /* \"DengLianHW/w5-2/contracts/MyTokenMarket.sol\":1721:1726  token */\n      dup3\n        /* \"DengLianHW/w5-2/contracts/MyTokenMarket.sol\":1711:1715  path */\n      dup2\n        /* \"DengLianHW/w5-2/contracts/MyTokenMarket.sol\":1716:1717  1 */\n      0x01\n        /* \"DengLianHW/w5-2/contracts/MyTokenMarket.sol\":1711:1718  path[1] */\n      dup2\n      mload\n      dup2\n      lt\n      tag_78\n      jumpi\n      tag_79\n      tag_53\n      jump\t// in\n    tag_79:\n    tag_78:\n      0x20\n      mul\n      0x20\n      add\n      add\n        /* \"DengLianHW/w5-2/contracts/MyTokenMarket.sol\":1711:1726  path[1] = token */\n      swap1\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      swap1\n      dup2\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      pop\n      pop\n        /* \"DengLianHW/w5-2/contracts/MyTokenMarket.sol\":1755:1761  router */\n      0x00\n      dup1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"DengLianHW/w5-2/contracts/MyTokenMarket.sol\":1736:1784  IUniswapV2Router01(router).swapExactETHForTokens */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0x7ff36ab5\n        /* \"DengLianHW/w5-2/contracts/MyTokenMarket.sol\":1793:1802  msg.value */\n      callvalue\n        /* \"DengLianHW/w5-2/contracts/MyTokenMarket.sol\":1804:1818  minTokenAmount */\n      dup5\n        /* \"DengLianHW/w5-2/contracts/MyTokenMarket.sol\":1820:1824  path */\n      dup5\n        /* \"DengLianHW/w5-2/contracts/MyTokenMarket.sol\":1826:1836  msg.sender */\n      caller\n        /* \"DengLianHW/w5-2/contracts/MyTokenMarket.sol\":1838:1853  block.timestamp */\n      timestamp\n        /* \"DengLianHW/w5-2/contracts/MyTokenMarket.sol\":1736:1854  IUniswapV2Router01(router).swapExactETHForTokens{value : msg.value}(minTokenAmount, path, msg.sender, block.timestamp) */\n      mload(0x40)\n      dup7\n      0xffffffff\n      and\n      0xe0\n      shl\n      dup2\n      mstore\n      0x04\n      add\n      tag_80\n      swap5\n      swap4\n      swap3\n      swap2\n      swap1\n      tag_81\n      jump\t// in\n    tag_80:\n      0x00\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      dup6\n      dup9\n      gas\n      call\n      iszero\n      dup1\n      iszero\n      tag_83\n      jumpi\n      returndatasize\n      0x00\n      dup1\n      returndatacopy\n      revert(0x00, returndatasize)\n    tag_83:\n      pop\n      pop\n      pop\n      pop\n      pop\n      mload(0x40)\n      returndatasize\n      0x00\n      dup3\n      returndatacopy\n      returndatasize\n      not(0x1f)\n      0x1f\n      dup3\n      add\n      and\n      dup3\n      add\n      dup1\n      0x40\n      mstore\n      pop\n      dup2\n      add\n      swap1\n      tag_84\n      swap2\n      swap1\n      tag_63\n      jump\t// in\n    tag_84:\n      pop\n        /* \"DengLianHW/w5-2/contracts/MyTokenMarket.sol\":1627:1861  {... */\n      pop\n        /* \"DengLianHW/w5-2/contracts/MyTokenMarket.sol\":1551:1861  function buyTokenWithETH(address token, uint minTokenAmount) public payable {... */\n      pop\n      pop\n      jump\t// out\n        /* \"DengLianHW/w5-2/contracts/MyTokenMarket.sol\":297:318  address public router */\n    tag_31:\n      0x00\n      dup1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      jump\t// out\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":974:1215  function safeTransferFrom(... */\n    tag_35:\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":1112:1208  _callOptionalReturn(token, abi.encodeWithSelector(token.transferFrom.selector, from, to, value)) */\n      tag_86\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":1132:1137  token */\n      dup5\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":1162:1189  token.transferFrom.selector */\n      shl(0xe0, 0x23b872dd)\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":1191:1195  from */\n      dup6\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":1197:1199  to */\n      dup6\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":1201:1206  value */\n      dup6\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":1139:1207  abi.encodeWithSelector(token.transferFrom.selector, from, to, value) */\n      add(0x24, mload(0x40))\n      tag_87\n      swap4\n      swap3\n      swap2\n      swap1\n      tag_88\n      jump\t// in\n    tag_87:\n      mload(0x40)\n      0x20\n      dup2\n      dup4\n      sub\n      sub\n      dup2\n      mstore\n      swap1\n      0x40\n      mstore\n      swap1\n      not(0xffffffffffffffffffffffffffffffffffffffffffffffffffffffff)\n      and\n      0x20\n      dup3\n      add\n      dup1\n      mload\n      0xffffffffffffffffffffffffffffffffffffffffffffffffffffffff\n      dup4\n      dup2\n      dup4\n      and\n      or\n      dup4\n      mstore\n      pop\n      pop\n      pop\n      pop\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":1112:1131  _callOptionalReturn */\n      tag_89\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":1112:1208  _callOptionalReturn(token, abi.encodeWithSelector(token.transferFrom.selector, from, to, value)) */\n      jump\t// in\n    tag_86:\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":974:1215  function safeTransferFrom(... */\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":1475:2078  function safeApprove(... */\n    tag_37:\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":1839:1840  0 */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":1830:1835  value */\n      dup2\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":1830:1840  value == 0 */\n      eq\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":1829:1891  (value == 0) || (token.allowance(address(this), spender) == 0) */\n      dup1\n      tag_91\n      jumpi\n      pop\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":1889:1890  0 */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":1846:1851  token */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":1846:1861  token.allowance */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xdd62ed3e\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":1870:1874  this */\n      address\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":1877:1884  spender */\n      dup6\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":1846:1885  token.allowance(address(this), spender) */\n      mload(0x40)\n      dup4\n      0xffffffff\n      and\n      0xe0\n      shl\n      dup2\n      mstore\n      0x04\n      add\n      tag_92\n      swap3\n      swap2\n      swap1\n      tag_93\n      jump\t// in\n    tag_92:\n      0x20\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      dup7\n      gas\n      staticcall\n      iszero\n      dup1\n      iszero\n      tag_95\n      jumpi\n      returndatasize\n      0x00\n      dup1\n      returndatacopy\n      revert(0x00, returndatasize)\n    tag_95:\n      pop\n      pop\n      pop\n      pop\n      mload(0x40)\n      returndatasize\n      not(0x1f)\n      0x1f\n      dup3\n      add\n      and\n      dup3\n      add\n      dup1\n      0x40\n      mstore\n      pop\n      dup2\n      add\n      swap1\n      tag_96\n      swap2\n      swap1\n      tag_97\n      jump\t// in\n    tag_96:\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":1846:1890  token.allowance(address(this), spender) == 0 */\n      eq\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":1829:1891  (value == 0) || (token.allowance(address(this), spender) == 0) */\n    tag_91:\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":1808:1971  require(... */\n      tag_98\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_99\n      swap1\n      tag_100\n      jump\t// in\n    tag_99:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_98:\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":1981:2071  _callOptionalReturn(token, abi.encodeWithSelector(token.approve.selector, spender, value)) */\n      tag_101\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":2001:2006  token */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":2031:2053  token.approve.selector */\n      shl(0xe0, 0x095ea7b3)\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":2055:2062  spender */\n      dup5\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":2064:2069  value */\n      dup5\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":2008:2070  abi.encodeWithSelector(token.approve.selector, spender, value) */\n      add(0x24, mload(0x40))\n      tag_102\n      swap3\n      swap2\n      swap1\n      tag_103\n      jump\t// in\n    tag_102:\n      mload(0x40)\n      0x20\n      dup2\n      dup4\n      sub\n      sub\n      dup2\n      mstore\n      swap1\n      0x40\n      mstore\n      swap1\n      not(0xffffffffffffffffffffffffffffffffffffffffffffffffffffffff)\n      and\n      0x20\n      dup3\n      add\n      dup1\n      mload\n      0xffffffffffffffffffffffffffffffffffffffffffffffffffffffff\n      dup4\n      dup2\n      dup4\n      and\n      or\n      dup4\n      mstore\n      pop\n      pop\n      pop\n      pop\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":1981:2000  _callOptionalReturn */\n      tag_89\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":1981:2071  _callOptionalReturn(token, abi.encodeWithSelector(token.approve.selector, spender, value)) */\n      jump\t// in\n    tag_101:\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":1475:2078  function safeApprove(... */\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":3747:4453  function _callOptionalReturn(IERC20 token, bytes memory data) private {... */\n    tag_89:\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":4166:4189  bytes memory returndata */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":4192:4261  address(token).functionCall(data, \"SafeERC20: low-level call failed\") */\n      tag_105\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":4220:4224  data */\n      dup3\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":4192:4261  address(token).functionCall(data, \"SafeERC20: low-level call failed\") */\n      mload(0x40)\n      dup1\n      0x40\n      add\n      0x40\n      mstore\n      dup1\n      0x20\n      dup2\n      mstore\n      0x20\n      add\n      0x5361666545524332303a206c6f772d6c6576656c2063616c6c206661696c6564\n      dup2\n      mstore\n      pop\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":4200:4205  token */\n      dup6\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":4192:4219  address(token).functionCall */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      tag_106\n      swap1\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":4192:4261  address(token).functionCall(data, \"SafeERC20: low-level call failed\") */\n      swap3\n      swap2\n      swap1\n      0xffffffff\n      and\n      jump\t// in\n    tag_105:\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":4166:4261  bytes memory returndata = address(token).functionCall(data, \"SafeERC20: low-level call failed\") */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":4295:4296  0 */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":4275:4285  returndata */\n      dup2\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":4275:4292  returndata.length */\n      mload\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":4275:4296  returndata.length > 0 */\n      gt\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":4271:4447  if (returndata.length > 0) {... */\n      iszero\n      tag_107\n      jumpi\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":4370:4380  returndata */\n      dup1\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":4359:4389  abi.decode(returndata, (bool)) */\n      dup1\n      0x20\n      add\n      swap1\n      mload\n      dup2\n      add\n      swap1\n      tag_108\n      swap2\n      swap1\n      tag_109\n      jump\t// in\n    tag_108:\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":4351:4436  require(abi.decode(returndata, (bool)), \"SafeERC20: ERC20 operation did not succeed\") */\n      tag_110\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_111\n      swap1\n      tag_112\n      jump\t// in\n    tag_111:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_110:\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":4271:4447  if (returndata.length > 0) {... */\n    tag_107:\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":3817:4453  {... */\n      pop\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":3747:4453  function _callOptionalReturn(IERC20 token, bytes memory data) private {... */\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/utils/Address.sol\":3873:4096  function functionCall(... */\n    tag_106:\n        /* \"@openzeppelin/contracts/utils/Address.sol\":4006:4018  bytes memory */\n      0x60\n        /* \"@openzeppelin/contracts/utils/Address.sol\":4037:4089  functionCallWithValue(target, data, 0, errorMessage) */\n      tag_114\n        /* \"@openzeppelin/contracts/utils/Address.sol\":4059:4065  target */\n      dup5\n        /* \"@openzeppelin/contracts/utils/Address.sol\":4067:4071  data */\n      dup5\n        /* \"@openzeppelin/contracts/utils/Address.sol\":4073:4074  0 */\n      0x00\n        /* \"@openzeppelin/contracts/utils/Address.sol\":4076:4088  errorMessage */\n      dup6\n        /* \"@openzeppelin/contracts/utils/Address.sol\":4037:4058  functionCallWithValue */\n      tag_115\n        /* \"@openzeppelin/contracts/utils/Address.sol\":4037:4089  functionCallWithValue(target, data, 0, errorMessage) */\n      jump\t// in\n    tag_114:\n        /* \"@openzeppelin/contracts/utils/Address.sol\":4030:4089  return functionCallWithValue(target, data, 0, errorMessage) */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/utils/Address.sol\":3873:4096  function functionCall(... */\n      swap4\n      swap3\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/utils/Address.sol\":4960:5406  function functionCallWithValue(... */\n    tag_115:\n        /* \"@openzeppelin/contracts/utils/Address.sol\":5125:5137  bytes memory */\n      0x60\n        /* \"@openzeppelin/contracts/utils/Address.sol\":5182:5187  value */\n      dup3\n        /* \"@openzeppelin/contracts/utils/Address.sol\":5157:5178  address(this).balance */\n      selfbalance\n        /* \"@openzeppelin/contracts/utils/Address.sol\":5157:5187  address(this).balance >= value */\n      lt\n      iszero\n        /* \"@openzeppelin/contracts/utils/Address.sol\":5149:5230  require(address(this).balance >= value, \"Address: insufficient balance for call\") */\n      tag_117\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_118\n      swap1\n      tag_119\n      jump\t// in\n    tag_118:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_117:\n        /* \"@openzeppelin/contracts/utils/Address.sol\":5241:5253  bool success */\n      0x00\n        /* \"@openzeppelin/contracts/utils/Address.sol\":5255:5278  bytes memory returndata */\n      dup1\n        /* \"@openzeppelin/contracts/utils/Address.sol\":5282:5288  target */\n      dup7\n        /* \"@openzeppelin/contracts/utils/Address.sol\":5282:5293  target.call */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts/utils/Address.sol\":5301:5306  value */\n      dup6\n        /* \"@openzeppelin/contracts/utils/Address.sol\":5308:5312  data */\n      dup8\n        /* \"@openzeppelin/contracts/utils/Address.sol\":5282:5313  target.call{value: value}(data) */\n      mload(0x40)\n      tag_120\n      swap2\n      swap1\n      tag_121\n      jump\t// in\n    tag_120:\n      0x00\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      dup6\n      dup8\n      gas\n      call\n      swap3\n      pop\n      pop\n      pop\n      returndatasize\n      dup1\n      0x00\n      dup2\n      eq\n      tag_124\n      jumpi\n      mload(0x40)\n      swap2\n      pop\n      and(add(returndatasize, 0x3f), not(0x1f))\n      dup3\n      add\n      0x40\n      mstore\n      returndatasize\n      dup3\n      mstore\n      returndatasize\n      0x00\n      0x20\n      dup5\n      add\n      returndatacopy\n      jump(tag_123)\n    tag_124:\n      0x60\n      swap2\n      pop\n    tag_123:\n      pop\n        /* \"@openzeppelin/contracts/utils/Address.sol\":5240:5313  (bool success, bytes memory returndata) = target.call{value: value}(data) */\n      swap2\n      pop\n      swap2\n      pop\n        /* \"@openzeppelin/contracts/utils/Address.sol\":5330:5399  verifyCallResultFromTarget(target, success, returndata, errorMessage) */\n      tag_125\n        /* \"@openzeppelin/contracts/utils/Address.sol\":5357:5363  target */\n      dup8\n        /* \"@openzeppelin/contracts/utils/Address.sol\":5365:5372  success */\n      dup4\n        /* \"@openzeppelin/contracts/utils/Address.sol\":5374:5384  returndata */\n      dup4\n        /* \"@openzeppelin/contracts/utils/Address.sol\":5386:5398  errorMessage */\n      dup8\n        /* \"@openzeppelin/contracts/utils/Address.sol\":5330:5356  verifyCallResultFromTarget */\n      tag_126\n        /* \"@openzeppelin/contracts/utils/Address.sol\":5330:5399  verifyCallResultFromTarget(target, success, returndata, errorMessage) */\n      jump\t// in\n    tag_125:\n        /* \"@openzeppelin/contracts/utils/Address.sol\":5323:5399  return verifyCallResultFromTarget(target, success, returndata, errorMessage) */\n      swap3\n      pop\n      pop\n      pop\n        /* \"@openzeppelin/contracts/utils/Address.sol\":4960:5406  function functionCallWithValue(... */\n      swap5\n      swap4\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/utils/Address.sol\":7466:8094  function verifyCallResultFromTarget(... */\n    tag_126:\n        /* \"@openzeppelin/contracts/utils/Address.sol\":7646:7658  bytes memory */\n      0x60\n        /* \"@openzeppelin/contracts/utils/Address.sol\":7674:7681  success */\n      dup4\n        /* \"@openzeppelin/contracts/utils/Address.sol\":7670:8088  if (success) {... */\n      iszero\n      tag_128\n      jumpi\n        /* \"@openzeppelin/contracts/utils/Address.sol\":7722:7723  0 */\n      0x00\n        /* \"@openzeppelin/contracts/utils/Address.sol\":7701:7711  returndata */\n      dup4\n        /* \"@openzeppelin/contracts/utils/Address.sol\":7701:7718  returndata.length */\n      mload\n        /* \"@openzeppelin/contracts/utils/Address.sol\":7701:7723  returndata.length == 0 */\n      sub\n        /* \"@openzeppelin/contracts/utils/Address.sol\":7697:7983  if (returndata.length == 0) {... */\n      tag_129\n      jumpi\n        /* \"@openzeppelin/contracts/utils/Address.sol\":7916:7934  isContract(target) */\n      tag_130\n        /* \"@openzeppelin/contracts/utils/Address.sol\":7927:7933  target */\n      dup6\n        /* \"@openzeppelin/contracts/utils/Address.sol\":7916:7926  isContract */\n      tag_131\n        /* \"@openzeppelin/contracts/utils/Address.sol\":7916:7934  isContract(target) */\n      jump\t// in\n    tag_130:\n        /* \"@openzeppelin/contracts/utils/Address.sol\":7908:7968  require(isContract(target), \"Address: call to non-contract\") */\n      tag_132\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_133\n      swap1\n      tag_134\n      jump\t// in\n    tag_133:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_132:\n        /* \"@openzeppelin/contracts/utils/Address.sol\":7697:7983  if (returndata.length == 0) {... */\n    tag_129:\n        /* \"@openzeppelin/contracts/utils/Address.sol\":8003:8013  returndata */\n      dup3\n        /* \"@openzeppelin/contracts/utils/Address.sol\":7996:8013  return returndata */\n      swap1\n      pop\n      jump(tag_127)\n        /* \"@openzeppelin/contracts/utils/Address.sol\":7670:8088  if (success) {... */\n    tag_128:\n        /* \"@openzeppelin/contracts/utils/Address.sol\":8044:8077  _revert(returndata, errorMessage) */\n      tag_136\n        /* \"@openzeppelin/contracts/utils/Address.sol\":8052:8062  returndata */\n      dup4\n        /* \"@openzeppelin/contracts/utils/Address.sol\":8064:8076  errorMessage */\n      dup4\n        /* \"@openzeppelin/contracts/utils/Address.sol\":8044:8051  _revert */\n      tag_137\n        /* \"@openzeppelin/contracts/utils/Address.sol\":8044:8077  _revert(returndata, errorMessage) */\n      jump\t// in\n    tag_136:\n        /* \"@openzeppelin/contracts/utils/Address.sol\":7466:8094  function verifyCallResultFromTarget(... */\n    tag_127:\n      swap5\n      swap4\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/utils/Address.sol\":1175:1495  function isContract(address account) internal view returns (bool) {... */\n    tag_131:\n        /* \"@openzeppelin/contracts/utils/Address.sol\":1235:1239  bool */\n      0x00\n        /* \"@openzeppelin/contracts/utils/Address.sol\":1487:1488  0 */\n      dup1\n        /* \"@openzeppelin/contracts/utils/Address.sol\":1465:1472  account */\n      dup3\n        /* \"@openzeppelin/contracts/utils/Address.sol\":1465:1484  account.code.length */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      extcodesize\n        /* \"@openzeppelin/contracts/utils/Address.sol\":1465:1488  account.code.length > 0 */\n      gt\n        /* \"@openzeppelin/contracts/utils/Address.sol\":1458:1488  return account.code.length > 0 */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/utils/Address.sol\":1175:1495  function isContract(address account) internal view returns (bool) {... */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/utils/Address.sol\":8616:9156  function _revert(bytes memory returndata, string memory errorMessage) private pure {... */\n    tag_137:\n        /* \"@openzeppelin/contracts/utils/Address.sol\":8795:8796  0 */\n      0x00\n        /* \"@openzeppelin/contracts/utils/Address.sol\":8775:8785  returndata */\n      dup3\n        /* \"@openzeppelin/contracts/utils/Address.sol\":8775:8792  returndata.length */\n      mload\n        /* \"@openzeppelin/contracts/utils/Address.sol\":8775:8796  returndata.length > 0 */\n      gt\n        /* \"@openzeppelin/contracts/utils/Address.sol\":8771:9150  if (returndata.length > 0) {... */\n      iszero\n      tag_140\n      jumpi\n        /* \"@openzeppelin/contracts/utils/Address.sol\":9003:9013  returndata */\n      dup2\n        /* \"@openzeppelin/contracts/utils/Address.sol\":8997:9014  mload(returndata) */\n      mload\n        /* \"@openzeppelin/contracts/utils/Address.sol\":9059:9074  returndata_size */\n      dup1\n        /* \"@openzeppelin/contracts/utils/Address.sol\":9046:9056  returndata */\n      dup4\n        /* \"@openzeppelin/contracts/utils/Address.sol\":9042:9044  32 */\n      0x20\n        /* \"@openzeppelin/contracts/utils/Address.sol\":9038:9057  add(32, returndata) */\n      add\n        /* \"@openzeppelin/contracts/utils/Address.sol\":9031:9075  revert(add(32, returndata), returndata_size) */\n      revert\n        /* \"@openzeppelin/contracts/utils/Address.sol\":8771:9150  if (returndata.length > 0) {... */\n    tag_140:\n        /* \"@openzeppelin/contracts/utils/Address.sol\":9126:9138  errorMessage */\n      dup1\n        /* \"@openzeppelin/contracts/utils/Address.sol\":9119:9139  revert(errorMessage) */\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_142\n      swap2\n      swap1\n      tag_143\n      jump\t// in\n    tag_142:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"#utility.yul\":7:82   */\n    tag_144:\n        /* \"#utility.yul\":40:46   */\n      0x00\n        /* \"#utility.yul\":73:75   */\n      0x40\n        /* \"#utility.yul\":67:76   */\n      mload\n        /* \"#utility.yul\":57:76   */\n      swap1\n      pop\n        /* \"#utility.yul\":7:82   */\n      swap1\n      jump\t// out\n        /* \"#utility.yul\":88:205   */\n    tag_145:\n        /* \"#utility.yul\":197:198   */\n      0x00\n        /* \"#utility.yul\":194:195   */\n      dup1\n        /* \"#utility.yul\":187:199   */\n      revert\n        /* \"#utility.yul\":211:328   */\n    tag_146:\n        /* \"#utility.yul\":320:321   */\n      0x00\n        /* \"#utility.yul\":317:318   */\n      dup1\n        /* \"#utility.yul\":310:322   */\n      revert\n        /* \"#utility.yul\":334:460   */\n    tag_147:\n        /* \"#utility.yul\":371:378   */\n      0x00\n        /* \"#utility.yul\":411:453   */\n      0xffffffffffffffffffffffffffffffffffffffff\n        /* \"#utility.yul\":404:409   */\n      dup3\n        /* \"#utility.yul\":400:454   */\n      and\n        /* \"#utility.yul\":389:454   */\n      swap1\n      pop\n        /* \"#utility.yul\":334:460   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":466:562   */\n    tag_148:\n        /* \"#utility.yul\":503:510   */\n      0x00\n        /* \"#utility.yul\":532:556   */\n      tag_200\n        /* \"#utility.yul\":550:555   */\n      dup3\n        /* \"#utility.yul\":532:556   */\n      tag_147\n      jump\t// in\n    tag_200:\n        /* \"#utility.yul\":521:556   */\n      swap1\n      pop\n        /* \"#utility.yul\":466:562   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":568:690   */\n    tag_149:\n        /* \"#utility.yul\":641:665   */\n      tag_202\n        /* \"#utility.yul\":659:664   */\n      dup2\n        /* \"#utility.yul\":641:665   */\n      tag_148\n      jump\t// in\n    tag_202:\n        /* \"#utility.yul\":634:639   */\n      dup2\n        /* \"#utility.yul\":631:666   */\n      eq\n        /* \"#utility.yul\":621:684   */\n      tag_203\n      jumpi\n        /* \"#utility.yul\":680:681   */\n      0x00\n        /* \"#utility.yul\":677:678   */\n      dup1\n        /* \"#utility.yul\":670:682   */\n      revert\n        /* \"#utility.yul\":621:684   */\n    tag_203:\n        /* \"#utility.yul\":568:690   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":696:835   */\n    tag_150:\n        /* \"#utility.yul\":742:747   */\n      0x00\n        /* \"#utility.yul\":780:786   */\n      dup2\n        /* \"#utility.yul\":767:787   */\n      calldataload\n        /* \"#utility.yul\":758:787   */\n      swap1\n      pop\n        /* \"#utility.yul\":796:829   */\n      tag_205\n        /* \"#utility.yul\":823:828   */\n      dup2\n        /* \"#utility.yul\":796:829   */\n      tag_149\n      jump\t// in\n    tag_205:\n        /* \"#utility.yul\":696:835   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":841:918   */\n    tag_151:\n        /* \"#utility.yul\":878:885   */\n      0x00\n        /* \"#utility.yul\":907:912   */\n      dup2\n        /* \"#utility.yul\":896:912   */\n      swap1\n      pop\n        /* \"#utility.yul\":841:918   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":924:1046   */\n    tag_152:\n        /* \"#utility.yul\":997:1021   */\n      tag_208\n        /* \"#utility.yul\":1015:1020   */\n      dup2\n        /* \"#utility.yul\":997:1021   */\n      tag_151\n      jump\t// in\n    tag_208:\n        /* \"#utility.yul\":990:995   */\n      dup2\n        /* \"#utility.yul\":987:1022   */\n      eq\n        /* \"#utility.yul\":977:1040   */\n      tag_209\n      jumpi\n        /* \"#utility.yul\":1036:1037   */\n      0x00\n        /* \"#utility.yul\":1033:1034   */\n      dup1\n        /* \"#utility.yul\":1026:1038   */\n      revert\n        /* \"#utility.yul\":977:1040   */\n    tag_209:\n        /* \"#utility.yul\":924:1046   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1052:1191   */\n    tag_153:\n        /* \"#utility.yul\":1098:1103   */\n      0x00\n        /* \"#utility.yul\":1136:1142   */\n      dup2\n        /* \"#utility.yul\":1123:1143   */\n      calldataload\n        /* \"#utility.yul\":1114:1143   */\n      swap1\n      pop\n        /* \"#utility.yul\":1152:1185   */\n      tag_211\n        /* \"#utility.yul\":1179:1184   */\n      dup2\n        /* \"#utility.yul\":1152:1185   */\n      tag_152\n      jump\t// in\n    tag_211:\n        /* \"#utility.yul\":1052:1191   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1197:1962   */\n    tag_10:\n        /* \"#utility.yul\":1283:1289   */\n      0x00\n        /* \"#utility.yul\":1291:1297   */\n      dup1\n        /* \"#utility.yul\":1299:1305   */\n      0x00\n        /* \"#utility.yul\":1307:1313   */\n      dup1\n        /* \"#utility.yul\":1356:1359   */\n      0x80\n        /* \"#utility.yul\":1344:1353   */\n      dup6\n        /* \"#utility.yul\":1335:1342   */\n      dup8\n        /* \"#utility.yul\":1331:1354   */\n      sub\n        /* \"#utility.yul\":1327:1360   */\n      slt\n        /* \"#utility.yul\":1324:1444   */\n      iszero\n      tag_213\n      jumpi\n        /* \"#utility.yul\":1363:1442   */\n      tag_214\n      tag_145\n      jump\t// in\n    tag_214:\n        /* \"#utility.yul\":1324:1444   */\n    tag_213:\n        /* \"#utility.yul\":1483:1484   */\n      0x00\n        /* \"#utility.yul\":1508:1561   */\n      tag_215\n        /* \"#utility.yul\":1553:1560   */\n      dup8\n        /* \"#utility.yul\":1544:1550   */\n      dup3\n        /* \"#utility.yul\":1533:1542   */\n      dup9\n        /* \"#utility.yul\":1529:1551   */\n      add\n        /* \"#utility.yul\":1508:1561   */\n      tag_150\n      jump\t// in\n    tag_215:\n        /* \"#utility.yul\":1498:1561   */\n      swap5\n      pop\n        /* \"#utility.yul\":1454:1571   */\n      pop\n        /* \"#utility.yul\":1610:1612   */\n      0x20\n        /* \"#utility.yul\":1636:1689   */\n      tag_216\n        /* \"#utility.yul\":1681:1688   */\n      dup8\n        /* \"#utility.yul\":1672:1678   */\n      dup3\n        /* \"#utility.yul\":1661:1670   */\n      dup9\n        /* \"#utility.yul\":1657:1679   */\n      add\n        /* \"#utility.yul\":1636:1689   */\n      tag_153\n      jump\t// in\n    tag_216:\n        /* \"#utility.yul\":1626:1689   */\n      swap4\n      pop\n        /* \"#utility.yul\":1581:1699   */\n      pop\n        /* \"#utility.yul\":1738:1740   */\n      0x40\n        /* \"#utility.yul\":1764:1817   */\n      tag_217\n        /* \"#utility.yul\":1809:1816   */\n      dup8\n        /* \"#utility.yul\":1800:1806   */\n      dup3\n        /* \"#utility.yul\":1789:1798   */\n      dup9\n        /* \"#utility.yul\":1785:1807   */\n      add\n        /* \"#utility.yul\":1764:1817   */\n      tag_150\n      jump\t// in\n    tag_217:\n        /* \"#utility.yul\":1754:1817   */\n      swap3\n      pop\n        /* \"#utility.yul\":1709:1827   */\n      pop\n        /* \"#utility.yul\":1866:1868   */\n      0x60\n        /* \"#utility.yul\":1892:1945   */\n      tag_218\n        /* \"#utility.yul\":1937:1944   */\n      dup8\n        /* \"#utility.yul\":1928:1934   */\n      dup3\n        /* \"#utility.yul\":1917:1926   */\n      dup9\n        /* \"#utility.yul\":1913:1935   */\n      add\n        /* \"#utility.yul\":1892:1945   */\n      tag_153\n      jump\t// in\n    tag_218:\n        /* \"#utility.yul\":1882:1945   */\n      swap2\n      pop\n        /* \"#utility.yul\":1837:1955   */\n      pop\n        /* \"#utility.yul\":1197:1962   */\n      swap3\n      swap6\n      swap2\n      swap5\n      pop\n      swap3\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1968:2086   */\n    tag_154:\n        /* \"#utility.yul\":2055:2079   */\n      tag_220\n        /* \"#utility.yul\":2073:2078   */\n      dup2\n        /* \"#utility.yul\":2055:2079   */\n      tag_148\n      jump\t// in\n    tag_220:\n        /* \"#utility.yul\":2050:2053   */\n      dup3\n        /* \"#utility.yul\":2043:2080   */\n      mstore\n        /* \"#utility.yul\":1968:2086   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2092:2314   */\n    tag_16:\n        /* \"#utility.yul\":2185:2189   */\n      0x00\n        /* \"#utility.yul\":2223:2225   */\n      0x20\n        /* \"#utility.yul\":2212:2221   */\n      dup3\n        /* \"#utility.yul\":2208:2226   */\n      add\n        /* \"#utility.yul\":2200:2226   */\n      swap1\n      pop\n        /* \"#utility.yul\":2236:2307   */\n      tag_222\n        /* \"#utility.yul\":2304:2305   */\n      0x00\n        /* \"#utility.yul\":2293:2302   */\n      dup4\n        /* \"#utility.yul\":2289:2306   */\n      add\n        /* \"#utility.yul\":2280:2286   */\n      dup5\n        /* \"#utility.yul\":2236:2307   */\n      tag_154\n      jump\t// in\n    tag_222:\n        /* \"#utility.yul\":2092:2314   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2320:3085   */\n    tag_20:\n        /* \"#utility.yul\":2406:2412   */\n      0x00\n        /* \"#utility.yul\":2414:2420   */\n      dup1\n        /* \"#utility.yul\":2422:2428   */\n      0x00\n        /* \"#utility.yul\":2430:2436   */\n      dup1\n        /* \"#utility.yul\":2479:2482   */\n      0x80\n        /* \"#utility.yul\":2467:2476   */\n      dup6\n        /* \"#utility.yul\":2458:2465   */\n      dup8\n        /* \"#utility.yul\":2454:2477   */\n      sub\n        /* \"#utility.yul\":2450:2483   */\n      slt\n        /* \"#utility.yul\":2447:2567   */\n      iszero\n      tag_224\n      jumpi\n        /* \"#utility.yul\":2486:2565   */\n      tag_225\n      tag_145\n      jump\t// in\n    tag_225:\n        /* \"#utility.yul\":2447:2567   */\n    tag_224:\n        /* \"#utility.yul\":2606:2607   */\n      0x00\n        /* \"#utility.yul\":2631:2684   */\n      tag_226\n        /* \"#utility.yul\":2676:2683   */\n      dup8\n        /* \"#utility.yul\":2667:2673   */\n      dup3\n        /* \"#utility.yul\":2656:2665   */\n      dup9\n        /* \"#utility.yul\":2652:2674   */\n      add\n        /* \"#utility.yul\":2631:2684   */\n      tag_150\n      jump\t// in\n    tag_226:\n        /* \"#utility.yul\":2621:2684   */\n      swap5\n      pop\n        /* \"#utility.yul\":2577:2694   */\n      pop\n        /* \"#utility.yul\":2733:2735   */\n      0x20\n        /* \"#utility.yul\":2759:2812   */\n      tag_227\n        /* \"#utility.yul\":2804:2811   */\n      dup8\n        /* \"#utility.yul\":2795:2801   */\n      dup3\n        /* \"#utility.yul\":2784:2793   */\n      dup9\n        /* \"#utility.yul\":2780:2802   */\n      add\n        /* \"#utility.yul\":2759:2812   */\n      tag_150\n      jump\t// in\n    tag_227:\n        /* \"#utility.yul\":2749:2812   */\n      swap4\n      pop\n        /* \"#utility.yul\":2704:2822   */\n      pop\n        /* \"#utility.yul\":2861:2863   */\n      0x40\n        /* \"#utility.yul\":2887:2940   */\n      tag_228\n        /* \"#utility.yul\":2932:2939   */\n      dup8\n        /* \"#utility.yul\":2923:2929   */\n      dup3\n        /* \"#utility.yul\":2912:2921   */\n      dup9\n        /* \"#utility.yul\":2908:2930   */\n      add\n        /* \"#utility.yul\":2887:2940   */\n      tag_153\n      jump\t// in\n    tag_228:\n        /* \"#utility.yul\":2877:2940   */\n      swap3\n      pop\n        /* \"#utility.yul\":2832:2950   */\n      pop\n        /* \"#utility.yul\":2989:2991   */\n      0x60\n        /* \"#utility.yul\":3015:3068   */\n      tag_229\n        /* \"#utility.yul\":3060:3067   */\n      dup8\n        /* \"#utility.yul\":3051:3057   */\n      dup3\n        /* \"#utility.yul\":3040:3049   */\n      dup9\n        /* \"#utility.yul\":3036:3058   */\n      add\n        /* \"#utility.yul\":3015:3068   */\n      tag_153\n      jump\t// in\n    tag_229:\n        /* \"#utility.yul\":3005:3068   */\n      swap2\n      pop\n        /* \"#utility.yul\":2960:3078   */\n      pop\n        /* \"#utility.yul\":2320:3085   */\n      swap3\n      swap6\n      swap2\n      swap5\n      pop\n      swap3\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3091:3565   */\n    tag_24:\n        /* \"#utility.yul\":3159:3165   */\n      0x00\n        /* \"#utility.yul\":3167:3173   */\n      dup1\n        /* \"#utility.yul\":3216:3218   */\n      0x40\n        /* \"#utility.yul\":3204:3213   */\n      dup4\n        /* \"#utility.yul\":3195:3202   */\n      dup6\n        /* \"#utility.yul\":3191:3214   */\n      sub\n        /* \"#utility.yul\":3187:3219   */\n      slt\n        /* \"#utility.yul\":3184:3303   */\n      iszero\n      tag_231\n      jumpi\n        /* \"#utility.yul\":3222:3301   */\n      tag_232\n      tag_145\n      jump\t// in\n    tag_232:\n        /* \"#utility.yul\":3184:3303   */\n    tag_231:\n        /* \"#utility.yul\":3342:3343   */\n      0x00\n        /* \"#utility.yul\":3367:3420   */\n      tag_233\n        /* \"#utility.yul\":3412:3419   */\n      dup6\n        /* \"#utility.yul\":3403:3409   */\n      dup3\n        /* \"#utility.yul\":3392:3401   */\n      dup7\n        /* \"#utility.yul\":3388:3410   */\n      add\n        /* \"#utility.yul\":3367:3420   */\n      tag_150\n      jump\t// in\n    tag_233:\n        /* \"#utility.yul\":3357:3420   */\n      swap3\n      pop\n        /* \"#utility.yul\":3313:3430   */\n      pop\n        /* \"#utility.yul\":3469:3471   */\n      0x20\n        /* \"#utility.yul\":3495:3548   */\n      tag_234\n        /* \"#utility.yul\":3540:3547   */\n      dup6\n        /* \"#utility.yul\":3531:3537   */\n      dup3\n        /* \"#utility.yul\":3520:3529   */\n      dup7\n        /* \"#utility.yul\":3516:3538   */\n      add\n        /* \"#utility.yul\":3495:3548   */\n      tag_153\n      jump\t// in\n    tag_234:\n        /* \"#utility.yul\":3485:3548   */\n      swap2\n      pop\n        /* \"#utility.yul\":3440:3558   */\n      pop\n        /* \"#utility.yul\":3091:3565   */\n      swap3\n      pop\n      swap3\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3571:3689   */\n    tag_155:\n        /* \"#utility.yul\":3658:3682   */\n      tag_236\n        /* \"#utility.yul\":3676:3681   */\n      dup2\n        /* \"#utility.yul\":3658:3682   */\n      tag_151\n      jump\t// in\n    tag_236:\n        /* \"#utility.yul\":3653:3656   */\n      dup3\n        /* \"#utility.yul\":3646:3683   */\n      mstore\n        /* \"#utility.yul\":3571:3689   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3695:3780   */\n    tag_156:\n        /* \"#utility.yul\":3740:3747   */\n      0x00\n        /* \"#utility.yul\":3769:3774   */\n      dup2\n        /* \"#utility.yul\":3758:3774   */\n      swap1\n      pop\n        /* \"#utility.yul\":3695:3780   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3786:3846   */\n    tag_157:\n        /* \"#utility.yul\":3814:3817   */\n      0x00\n        /* \"#utility.yul\":3835:3840   */\n      dup2\n        /* \"#utility.yul\":3828:3840   */\n      swap1\n      pop\n        /* \"#utility.yul\":3786:3846   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3852:4010   */\n    tag_158:\n        /* \"#utility.yul\":3910:3919   */\n      0x00\n        /* \"#utility.yul\":3943:4004   */\n      tag_240\n        /* \"#utility.yul\":3961:4003   */\n      tag_241\n        /* \"#utility.yul\":3970:4002   */\n      tag_242\n        /* \"#utility.yul\":3996:4001   */\n      dup5\n        /* \"#utility.yul\":3970:4002   */\n      tag_156\n      jump\t// in\n    tag_242:\n        /* \"#utility.yul\":3961:4003   */\n      tag_157\n      jump\t// in\n    tag_241:\n        /* \"#utility.yul\":3943:4004   */\n      tag_151\n      jump\t// in\n    tag_240:\n        /* \"#utility.yul\":3930:4004   */\n      swap1\n      pop\n        /* \"#utility.yul\":3852:4010   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":4016:4163   */\n    tag_159:\n        /* \"#utility.yul\":4111:4156   */\n      tag_244\n        /* \"#utility.yul\":4150:4155   */\n      dup2\n        /* \"#utility.yul\":4111:4156   */\n      tag_158\n      jump\t// in\n    tag_244:\n        /* \"#utility.yul\":4106:4109   */\n      dup3\n        /* \"#utility.yul\":4099:4157   */\n      mstore\n        /* \"#utility.yul\":4016:4163   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":4169:5198   */\n    tag_41:\n        /* \"#utility.yul\":4474:4478   */\n      0x00\n        /* \"#utility.yul\":4512:4515   */\n      0x0100\n        /* \"#utility.yul\":4501:4510   */\n      dup3\n        /* \"#utility.yul\":4497:4516   */\n      add\n        /* \"#utility.yul\":4489:4516   */\n      swap1\n      pop\n        /* \"#utility.yul\":4526:4597   */\n      tag_246\n        /* \"#utility.yul\":4594:4595   */\n      0x00\n        /* \"#utility.yul\":4583:4592   */\n      dup4\n        /* \"#utility.yul\":4579:4596   */\n      add\n        /* \"#utility.yul\":4570:4576   */\n      dup12\n        /* \"#utility.yul\":4526:4597   */\n      tag_154\n      jump\t// in\n    tag_246:\n        /* \"#utility.yul\":4607:4679   */\n      tag_247\n        /* \"#utility.yul\":4675:4677   */\n      0x20\n        /* \"#utility.yul\":4664:4673   */\n      dup4\n        /* \"#utility.yul\":4660:4678   */\n      add\n        /* \"#utility.yul\":4651:4657   */\n      dup11\n        /* \"#utility.yul\":4607:4679   */\n      tag_154\n      jump\t// in\n    tag_247:\n        /* \"#utility.yul\":4689:4761   */\n      tag_248\n        /* \"#utility.yul\":4757:4759   */\n      0x40\n        /* \"#utility.yul\":4746:4755   */\n      dup4\n        /* \"#utility.yul\":4742:4760   */\n      add\n        /* \"#utility.yul\":4733:4739   */\n      dup10\n        /* \"#utility.yul\":4689:4761   */\n      tag_155\n      jump\t// in\n    tag_248:\n        /* \"#utility.yul\":4771:4843   */\n      tag_249\n        /* \"#utility.yul\":4839:4841   */\n      0x60\n        /* \"#utility.yul\":4828:4837   */\n      dup4\n        /* \"#utility.yul\":4824:4842   */\n      add\n        /* \"#utility.yul\":4815:4821   */\n      dup9\n        /* \"#utility.yul\":4771:4843   */\n      tag_155\n      jump\t// in\n    tag_249:\n        /* \"#utility.yul\":4853:4934   */\n      tag_250\n        /* \"#utility.yul\":4929:4932   */\n      0x80\n        /* \"#utility.yul\":4918:4927   */\n      dup4\n        /* \"#utility.yul\":4914:4933   */\n      add\n        /* \"#utility.yul\":4905:4911   */\n      dup8\n        /* \"#utility.yul\":4853:4934   */\n      tag_159\n      jump\t// in\n    tag_250:\n        /* \"#utility.yul\":4944:5025   */\n      tag_251\n        /* \"#utility.yul\":5020:5023   */\n      0xa0\n        /* \"#utility.yul\":5009:5018   */\n      dup4\n        /* \"#utility.yul\":5005:5024   */\n      add\n        /* \"#utility.yul\":4996:5002   */\n      dup7\n        /* \"#utility.yul\":4944:5025   */\n      tag_159\n      jump\t// in\n    tag_251:\n        /* \"#utility.yul\":5035:5108   */\n      tag_252\n        /* \"#utility.yul\":5103:5106   */\n      0xc0\n        /* \"#utility.yul\":5092:5101   */\n      dup4\n        /* \"#utility.yul\":5088:5107   */\n      add\n        /* \"#utility.yul\":5079:5085   */\n      dup6\n        /* \"#utility.yul\":5035:5108   */\n      tag_154\n      jump\t// in\n    tag_252:\n        /* \"#utility.yul\":5118:5191   */\n      tag_253\n        /* \"#utility.yul\":5186:5189   */\n      0xe0\n        /* \"#utility.yul\":5175:5184   */\n      dup4\n        /* \"#utility.yul\":5171:5190   */\n      add\n        /* \"#utility.yul\":5162:5168   */\n      dup5\n        /* \"#utility.yul\":5118:5191   */\n      tag_155\n      jump\t// in\n    tag_253:\n        /* \"#utility.yul\":4169:5198   */\n      swap10\n      swap9\n      pop\n      pop\n      pop\n      pop\n      pop\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":5204:5347   */\n    tag_160:\n        /* \"#utility.yul\":5261:5266   */\n      0x00\n        /* \"#utility.yul\":5292:5298   */\n      dup2\n        /* \"#utility.yul\":5286:5299   */\n      mload\n        /* \"#utility.yul\":5277:5299   */\n      swap1\n      pop\n        /* \"#utility.yul\":5308:5341   */\n      tag_255\n        /* \"#utility.yul\":5335:5340   */\n      dup2\n        /* \"#utility.yul\":5308:5341   */\n      tag_152\n      jump\t// in\n    tag_255:\n        /* \"#utility.yul\":5204:5347   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":5353:6016   */\n    tag_45:\n        /* \"#utility.yul\":5441:5447   */\n      0x00\n        /* \"#utility.yul\":5449:5455   */\n      dup1\n        /* \"#utility.yul\":5457:5463   */\n      0x00\n        /* \"#utility.yul\":5506:5508   */\n      0x60\n        /* \"#utility.yul\":5494:5503   */\n      dup5\n        /* \"#utility.yul\":5485:5492   */\n      dup7\n        /* \"#utility.yul\":5481:5504   */\n      sub\n        /* \"#utility.yul\":5477:5509   */\n      slt\n        /* \"#utility.yul\":5474:5593   */\n      iszero\n      tag_257\n      jumpi\n        /* \"#utility.yul\":5512:5591   */\n      tag_258\n      tag_145\n      jump\t// in\n    tag_258:\n        /* \"#utility.yul\":5474:5593   */\n    tag_257:\n        /* \"#utility.yul\":5632:5633   */\n      0x00\n        /* \"#utility.yul\":5657:5721   */\n      tag_259\n        /* \"#utility.yul\":5713:5720   */\n      dup7\n        /* \"#utility.yul\":5704:5710   */\n      dup3\n        /* \"#utility.yul\":5693:5702   */\n      dup8\n        /* \"#utility.yul\":5689:5711   */\n      add\n        /* \"#utility.yul\":5657:5721   */\n      tag_160\n      jump\t// in\n    tag_259:\n        /* \"#utility.yul\":5647:5721   */\n      swap4\n      pop\n        /* \"#utility.yul\":5603:5731   */\n      pop\n        /* \"#utility.yul\":5770:5772   */\n      0x20\n        /* \"#utility.yul\":5796:5860   */\n      tag_260\n        /* \"#utility.yul\":5852:5859   */\n      dup7\n        /* \"#utility.yul\":5843:5849   */\n      dup3\n        /* \"#utility.yul\":5832:5841   */\n      dup8\n        /* \"#utility.yul\":5828:5850   */\n      add\n        /* \"#utility.yul\":5796:5860   */\n      tag_160\n      jump\t// in\n    tag_260:\n        /* \"#utility.yul\":5786:5860   */\n      swap3\n      pop\n        /* \"#utility.yul\":5741:5870   */\n      pop\n        /* \"#utility.yul\":5909:5911   */\n      0x40\n        /* \"#utility.yul\":5935:5999   */\n      tag_261\n        /* \"#utility.yul\":5991:5998   */\n      dup7\n        /* \"#utility.yul\":5982:5988   */\n      dup3\n        /* \"#utility.yul\":5971:5980   */\n      dup8\n        /* \"#utility.yul\":5967:5989   */\n      add\n        /* \"#utility.yul\":5935:5999   */\n      tag_160\n      jump\t// in\n    tag_261:\n        /* \"#utility.yul\":5925:5999   */\n      swap2\n      pop\n        /* \"#utility.yul\":5880:6009   */\n      pop\n        /* \"#utility.yul\":5353:6016   */\n      swap3\n      pop\n      swap3\n      pop\n      swap3\n      jump\t// out\n        /* \"#utility.yul\":6022:6202   */\n    tag_49:\n        /* \"#utility.yul\":6070:6147   */\n      0x4e487b7100000000000000000000000000000000000000000000000000000000\n        /* \"#utility.yul\":6067:6068   */\n      0x00\n        /* \"#utility.yul\":6060:6148   */\n      mstore\n        /* \"#utility.yul\":6167:6171   */\n      0x41\n        /* \"#utility.yul\":6164:6165   */\n      0x04\n        /* \"#utility.yul\":6157:6172   */\n      mstore\n        /* \"#utility.yul\":6191:6195   */\n      0x24\n        /* \"#utility.yul\":6188:6189   */\n      0x00\n        /* \"#utility.yul\":6181:6196   */\n      revert\n        /* \"#utility.yul\":6208:6388   */\n    tag_53:\n        /* \"#utility.yul\":6256:6333   */\n      0x4e487b7100000000000000000000000000000000000000000000000000000000\n        /* \"#utility.yul\":6253:6254   */\n      0x00\n        /* \"#utility.yul\":6246:6334   */\n      mstore\n        /* \"#utility.yul\":6353:6357   */\n      0x32\n        /* \"#utility.yul\":6350:6351   */\n      0x04\n        /* \"#utility.yul\":6343:6358   */\n      mstore\n        /* \"#utility.yul\":6377:6381   */\n      0x24\n        /* \"#utility.yul\":6374:6375   */\n      0x00\n        /* \"#utility.yul\":6367:6382   */\n      revert\n        /* \"#utility.yul\":6394:6508   */\n    tag_161:\n        /* \"#utility.yul\":6461:6467   */\n      0x00\n        /* \"#utility.yul\":6495:6500   */\n      dup2\n        /* \"#utility.yul\":6489:6501   */\n      mload\n        /* \"#utility.yul\":6479:6501   */\n      swap1\n      pop\n        /* \"#utility.yul\":6394:6508   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":6514:6698   */\n    tag_162:\n        /* \"#utility.yul\":6613:6624   */\n      0x00\n        /* \"#utility.yul\":6647:6653   */\n      dup3\n        /* \"#utility.yul\":6642:6645   */\n      dup3\n        /* \"#utility.yul\":6635:6654   */\n      mstore\n        /* \"#utility.yul\":6687:6691   */\n      0x20\n        /* \"#utility.yul\":6682:6685   */\n      dup3\n        /* \"#utility.yul\":6678:6692   */\n      add\n        /* \"#utility.yul\":6663:6692   */\n      swap1\n      pop\n        /* \"#utility.yul\":6514:6698   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":6704:6836   */\n    tag_163:\n        /* \"#utility.yul\":6771:6775   */\n      0x00\n        /* \"#utility.yul\":6794:6797   */\n      dup2\n        /* \"#utility.yul\":6786:6797   */\n      swap1\n      pop\n        /* \"#utility.yul\":6824:6828   */\n      0x20\n        /* \"#utility.yul\":6819:6822   */\n      dup3\n        /* \"#utility.yul\":6815:6829   */\n      add\n        /* \"#utility.yul\":6807:6829   */\n      swap1\n      pop\n        /* \"#utility.yul\":6704:6836   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":6842:6950   */\n    tag_164:\n        /* \"#utility.yul\":6919:6943   */\n      tag_268\n        /* \"#utility.yul\":6937:6942   */\n      dup2\n        /* \"#utility.yul\":6919:6943   */\n      tag_148\n      jump\t// in\n    tag_268:\n        /* \"#utility.yul\":6914:6917   */\n      dup3\n        /* \"#utility.yul\":6907:6944   */\n      mstore\n        /* \"#utility.yul\":6842:6950   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":6956:7135   */\n    tag_165:\n        /* \"#utility.yul\":7025:7035   */\n      0x00\n        /* \"#utility.yul\":7046:7092   */\n      tag_270\n        /* \"#utility.yul\":7088:7091   */\n      dup4\n        /* \"#utility.yul\":7080:7086   */\n      dup4\n        /* \"#utility.yul\":7046:7092   */\n      tag_164\n      jump\t// in\n    tag_270:\n        /* \"#utility.yul\":7124:7128   */\n      0x20\n        /* \"#utility.yul\":7119:7122   */\n      dup4\n        /* \"#utility.yul\":7115:7129   */\n      add\n        /* \"#utility.yul\":7101:7129   */\n      swap1\n      pop\n        /* \"#utility.yul\":6956:7135   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":7141:7254   */\n    tag_166:\n        /* \"#utility.yul\":7211:7215   */\n      0x00\n        /* \"#utility.yul\":7243:7247   */\n      0x20\n        /* \"#utility.yul\":7238:7241   */\n      dup3\n        /* \"#utility.yul\":7234:7248   */\n      add\n        /* \"#utility.yul\":7226:7248   */\n      swap1\n      pop\n        /* \"#utility.yul\":7141:7254   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":7290:8022   */\n    tag_167:\n        /* \"#utility.yul\":7409:7412   */\n      0x00\n        /* \"#utility.yul\":7438:7492   */\n      tag_273\n        /* \"#utility.yul\":7486:7491   */\n      dup3\n        /* \"#utility.yul\":7438:7492   */\n      tag_161\n      jump\t// in\n    tag_273:\n        /* \"#utility.yul\":7508:7594   */\n      tag_274\n        /* \"#utility.yul\":7587:7593   */\n      dup2\n        /* \"#utility.yul\":7582:7585   */\n      dup6\n        /* \"#utility.yul\":7508:7594   */\n      tag_162\n      jump\t// in\n    tag_274:\n        /* \"#utility.yul\":7501:7594   */\n      swap4\n      pop\n        /* \"#utility.yul\":7618:7674   */\n      tag_275\n        /* \"#utility.yul\":7668:7673   */\n      dup4\n        /* \"#utility.yul\":7618:7674   */\n      tag_163\n      jump\t// in\n    tag_275:\n        /* \"#utility.yul\":7697:7704   */\n      dup1\n        /* \"#utility.yul\":7728:7729   */\n      0x00\n        /* \"#utility.yul\":7713:7997   */\n    tag_276:\n        /* \"#utility.yul\":7738:7744   */\n      dup4\n        /* \"#utility.yul\":7735:7736   */\n      dup2\n        /* \"#utility.yul\":7732:7745   */\n      lt\n        /* \"#utility.yul\":7713:7997   */\n      iszero\n      tag_278\n      jumpi\n        /* \"#utility.yul\":7814:7820   */\n      dup2\n        /* \"#utility.yul\":7808:7821   */\n      mload\n        /* \"#utility.yul\":7841:7904   */\n      tag_279\n        /* \"#utility.yul\":7900:7903   */\n      dup9\n        /* \"#utility.yul\":7885:7898   */\n      dup3\n        /* \"#utility.yul\":7841:7904   */\n      tag_165\n      jump\t// in\n    tag_279:\n        /* \"#utility.yul\":7834:7904   */\n      swap8\n      pop\n        /* \"#utility.yul\":7927:7987   */\n      tag_280\n        /* \"#utility.yul\":7980:7986   */\n      dup4\n        /* \"#utility.yul\":7927:7987   */\n      tag_166\n      jump\t// in\n    tag_280:\n        /* \"#utility.yul\":7917:7987   */\n      swap3\n      pop\n        /* \"#utility.yul\":7773:7997   */\n      pop\n        /* \"#utility.yul\":7760:7761   */\n      0x01\n        /* \"#utility.yul\":7757:7758   */\n      dup2\n        /* \"#utility.yul\":7753:7762   */\n      add\n        /* \"#utility.yul\":7748:7762   */\n      swap1\n      pop\n        /* \"#utility.yul\":7713:7997   */\n      jump(tag_276)\n    tag_278:\n        /* \"#utility.yul\":7717:7731   */\n      pop\n        /* \"#utility.yul\":8013:8016   */\n      dup6\n        /* \"#utility.yul\":8006:8016   */\n      swap4\n      pop\n        /* \"#utility.yul\":7414:8022   */\n      pop\n      pop\n      pop\n        /* \"#utility.yul\":7290:8022   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":8028:8843   */\n    tag_59:\n        /* \"#utility.yul\":8283:8287   */\n      0x00\n        /* \"#utility.yul\":8321:8324   */\n      0xa0\n        /* \"#utility.yul\":8310:8319   */\n      dup3\n        /* \"#utility.yul\":8306:8325   */\n      add\n        /* \"#utility.yul\":8298:8325   */\n      swap1\n      pop\n        /* \"#utility.yul\":8335:8406   */\n      tag_282\n        /* \"#utility.yul\":8403:8404   */\n      0x00\n        /* \"#utility.yul\":8392:8401   */\n      dup4\n        /* \"#utility.yul\":8388:8405   */\n      add\n        /* \"#utility.yul\":8379:8385   */\n      dup9\n        /* \"#utility.yul\":8335:8406   */\n      tag_155\n      jump\t// in\n    tag_282:\n        /* \"#utility.yul\":8416:8488   */\n      tag_283\n        /* \"#utility.yul\":8484:8486   */\n      0x20\n        /* \"#utility.yul\":8473:8482   */\n      dup4\n        /* \"#utility.yul\":8469:8487   */\n      add\n        /* \"#utility.yul\":8460:8466   */\n      dup8\n        /* \"#utility.yul\":8416:8488   */\n      tag_155\n      jump\t// in\n    tag_283:\n        /* \"#utility.yul\":8535:8544   */\n      dup2\n        /* \"#utility.yul\":8529:8533   */\n      dup2\n        /* \"#utility.yul\":8525:8545   */\n      sub\n        /* \"#utility.yul\":8520:8522   */\n      0x40\n        /* \"#utility.yul\":8509:8518   */\n      dup4\n        /* \"#utility.yul\":8505:8523   */\n      add\n        /* \"#utility.yul\":8498:8546   */\n      mstore\n        /* \"#utility.yul\":8563:8671   */\n      tag_284\n        /* \"#utility.yul\":8666:8670   */\n      dup2\n        /* \"#utility.yul\":8657:8663   */\n      dup7\n        /* \"#utility.yul\":8563:8671   */\n      tag_167\n      jump\t// in\n    tag_284:\n        /* \"#utility.yul\":8555:8671   */\n      swap1\n      pop\n        /* \"#utility.yul\":8681:8753   */\n      tag_285\n        /* \"#utility.yul\":8749:8751   */\n      0x60\n        /* \"#utility.yul\":8738:8747   */\n      dup4\n        /* \"#utility.yul\":8734:8752   */\n      add\n        /* \"#utility.yul\":8725:8731   */\n      dup6\n        /* \"#utility.yul\":8681:8753   */\n      tag_154\n      jump\t// in\n    tag_285:\n        /* \"#utility.yul\":8763:8836   */\n      tag_286\n        /* \"#utility.yul\":8831:8834   */\n      0x80\n        /* \"#utility.yul\":8820:8829   */\n      dup4\n        /* \"#utility.yul\":8816:8835   */\n      add\n        /* \"#utility.yul\":8807:8813   */\n      dup5\n        /* \"#utility.yul\":8763:8836   */\n      tag_155\n      jump\t// in\n    tag_286:\n        /* \"#utility.yul\":8028:8843   */\n      swap7\n      swap6\n      pop\n      pop\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":8849:8966   */\n    tag_168:\n        /* \"#utility.yul\":8958:8959   */\n      0x00\n        /* \"#utility.yul\":8955:8956   */\n      dup1\n        /* \"#utility.yul\":8948:8960   */\n      revert\n        /* \"#utility.yul\":8972:9074   */\n    tag_169:\n        /* \"#utility.yul\":9013:9019   */\n      0x00\n        /* \"#utility.yul\":9064:9066   */\n      0x1f\n        /* \"#utility.yul\":9060:9067   */\n      not\n        /* \"#utility.yul\":9055:9057   */\n      0x1f\n        /* \"#utility.yul\":9048:9053   */\n      dup4\n        /* \"#utility.yul\":9044:9058   */\n      add\n        /* \"#utility.yul\":9040:9068   */\n      and\n        /* \"#utility.yul\":9030:9068   */\n      swap1\n      pop\n        /* \"#utility.yul\":8972:9074   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":9080:9361   */\n    tag_170:\n        /* \"#utility.yul\":9163:9190   */\n      tag_290\n        /* \"#utility.yul\":9185:9189   */\n      dup3\n        /* \"#utility.yul\":9163:9190   */\n      tag_169\n      jump\t// in\n    tag_290:\n        /* \"#utility.yul\":9155:9161   */\n      dup2\n        /* \"#utility.yul\":9151:9191   */\n      add\n        /* \"#utility.yul\":9293:9299   */\n      dup2\n        /* \"#utility.yul\":9281:9291   */\n      dup2\n        /* \"#utility.yul\":9278:9300   */\n      lt\n        /* \"#utility.yul\":9257:9275   */\n      0xffffffffffffffff\n        /* \"#utility.yul\":9245:9255   */\n      dup3\n        /* \"#utility.yul\":9242:9276   */\n      gt\n        /* \"#utility.yul\":9239:9301   */\n      or\n        /* \"#utility.yul\":9236:9324   */\n      iszero\n      tag_291\n      jumpi\n        /* \"#utility.yul\":9304:9322   */\n      tag_292\n      tag_49\n      jump\t// in\n    tag_292:\n        /* \"#utility.yul\":9236:9324   */\n    tag_291:\n        /* \"#utility.yul\":9344:9354   */\n      dup1\n        /* \"#utility.yul\":9340:9342   */\n      0x40\n        /* \"#utility.yul\":9333:9355   */\n      mstore\n        /* \"#utility.yul\":9123:9361   */\n      pop\n        /* \"#utility.yul\":9080:9361   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":9367:9496   */\n    tag_171:\n        /* \"#utility.yul\":9401:9407   */\n      0x00\n        /* \"#utility.yul\":9428:9448   */\n      tag_294\n      tag_144\n      jump\t// in\n    tag_294:\n        /* \"#utility.yul\":9418:9448   */\n      swap1\n      pop\n        /* \"#utility.yul\":9457:9490   */\n      tag_295\n        /* \"#utility.yul\":9485:9489   */\n      dup3\n        /* \"#utility.yul\":9477:9483   */\n      dup3\n        /* \"#utility.yul\":9457:9490   */\n      tag_170\n      jump\t// in\n    tag_295:\n        /* \"#utility.yul\":9367:9496   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":9502:9813   */\n    tag_172:\n        /* \"#utility.yul\":9579:9583   */\n      0x00\n        /* \"#utility.yul\":9669:9687   */\n      0xffffffffffffffff\n        /* \"#utility.yul\":9661:9667   */\n      dup3\n        /* \"#utility.yul\":9658:9688   */\n      gt\n        /* \"#utility.yul\":9655:9711   */\n      iszero\n      tag_297\n      jumpi\n        /* \"#utility.yul\":9691:9709   */\n      tag_298\n      tag_49\n      jump\t// in\n    tag_298:\n        /* \"#utility.yul\":9655:9711   */\n    tag_297:\n        /* \"#utility.yul\":9741:9745   */\n      0x20\n        /* \"#utility.yul\":9733:9739   */\n      dup3\n        /* \"#utility.yul\":9729:9746   */\n      mul\n        /* \"#utility.yul\":9721:9746   */\n      swap1\n      pop\n        /* \"#utility.yul\":9801:9805   */\n      0x20\n        /* \"#utility.yul\":9795:9799   */\n      dup2\n        /* \"#utility.yul\":9791:9806   */\n      add\n        /* \"#utility.yul\":9783:9806   */\n      swap1\n      pop\n        /* \"#utility.yul\":9502:9813   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":9819:9936   */\n    tag_173:\n        /* \"#utility.yul\":9928:9929   */\n      0x00\n        /* \"#utility.yul\":9925:9926   */\n      dup1\n        /* \"#utility.yul\":9918:9930   */\n      revert\n        /* \"#utility.yul\":9959:10691   */\n    tag_174:\n        /* \"#utility.yul\":10066:10071   */\n      0x00\n        /* \"#utility.yul\":10091:10172   */\n      tag_301\n        /* \"#utility.yul\":10107:10171   */\n      tag_302\n        /* \"#utility.yul\":10164:10170   */\n      dup5\n        /* \"#utility.yul\":10107:10171   */\n      tag_172\n      jump\t// in\n    tag_302:\n        /* \"#utility.yul\":10091:10172   */\n      tag_171\n      jump\t// in\n    tag_301:\n        /* \"#utility.yul\":10082:10172   */\n      swap1\n      pop\n        /* \"#utility.yul\":10192:10197   */\n      dup1\n        /* \"#utility.yul\":10221:10227   */\n      dup4\n        /* \"#utility.yul\":10214:10219   */\n      dup3\n        /* \"#utility.yul\":10207:10228   */\n      mstore\n        /* \"#utility.yul\":10255:10259   */\n      0x20\n        /* \"#utility.yul\":10248:10253   */\n      dup3\n        /* \"#utility.yul\":10244:10260   */\n      add\n        /* \"#utility.yul\":10237:10260   */\n      swap1\n      pop\n        /* \"#utility.yul\":10308:10312   */\n      0x20\n        /* \"#utility.yul\":10300:10306   */\n      dup5\n        /* \"#utility.yul\":10296:10313   */\n      mul\n        /* \"#utility.yul\":10288:10294   */\n      dup4\n        /* \"#utility.yul\":10284:10314   */\n      add\n        /* \"#utility.yul\":10337:10340   */\n      dup6\n        /* \"#utility.yul\":10329:10335   */\n      dup2\n        /* \"#utility.yul\":10326:10341   */\n      gt\n        /* \"#utility.yul\":10323:10445   */\n      iszero\n      tag_303\n      jumpi\n        /* \"#utility.yul\":10356:10435   */\n      tag_304\n      tag_173\n      jump\t// in\n    tag_304:\n        /* \"#utility.yul\":10323:10445   */\n    tag_303:\n        /* \"#utility.yul\":10471:10477   */\n      dup4\n        /* \"#utility.yul\":10454:10685   */\n    tag_305:\n        /* \"#utility.yul\":10488:10494   */\n      dup2\n        /* \"#utility.yul\":10483:10486   */\n      dup2\n        /* \"#utility.yul\":10480:10495   */\n      lt\n        /* \"#utility.yul\":10454:10685   */\n      iszero\n      tag_307\n      jumpi\n        /* \"#utility.yul\":10563:10566   */\n      dup1\n        /* \"#utility.yul\":10592:10640   */\n      tag_308\n        /* \"#utility.yul\":10636:10639   */\n      dup9\n        /* \"#utility.yul\":10624:10634   */\n      dup3\n        /* \"#utility.yul\":10592:10640   */\n      tag_160\n      jump\t// in\n    tag_308:\n        /* \"#utility.yul\":10587:10590   */\n      dup5\n        /* \"#utility.yul\":10580:10641   */\n      mstore\n        /* \"#utility.yul\":10670:10674   */\n      0x20\n        /* \"#utility.yul\":10665:10668   */\n      dup5\n        /* \"#utility.yul\":10661:10675   */\n      add\n        /* \"#utility.yul\":10654:10675   */\n      swap4\n      pop\n        /* \"#utility.yul\":10530:10685   */\n      pop\n        /* \"#utility.yul\":10514:10518   */\n      0x20\n        /* \"#utility.yul\":10509:10512   */\n      dup2\n        /* \"#utility.yul\":10505:10519   */\n      add\n        /* \"#utility.yul\":10498:10519   */\n      swap1\n      pop\n        /* \"#utility.yul\":10454:10685   */\n      jump(tag_305)\n    tag_307:\n        /* \"#utility.yul\":10458:10479   */\n      pop\n        /* \"#utility.yul\":10072:10691   */\n      pop\n      pop\n        /* \"#utility.yul\":9959:10691   */\n      swap4\n      swap3\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":10714:11099   */\n    tag_175:\n        /* \"#utility.yul\":10796:10801   */\n      0x00\n        /* \"#utility.yul\":10845:10848   */\n      dup3\n        /* \"#utility.yul\":10838:10842   */\n      0x1f\n        /* \"#utility.yul\":10830:10836   */\n      dup4\n        /* \"#utility.yul\":10826:10843   */\n      add\n        /* \"#utility.yul\":10822:10849   */\n      slt\n        /* \"#utility.yul\":10812:10934   */\n      tag_310\n      jumpi\n        /* \"#utility.yul\":10853:10932   */\n      tag_311\n      tag_168\n      jump\t// in\n    tag_311:\n        /* \"#utility.yul\":10812:10934   */\n    tag_310:\n        /* \"#utility.yul\":10963:10969   */\n      dup2\n        /* \"#utility.yul\":10957:10970   */\n      mload\n        /* \"#utility.yul\":10988:11093   */\n      tag_312\n        /* \"#utility.yul\":11089:11092   */\n      dup5\n        /* \"#utility.yul\":11081:11087   */\n      dup3\n        /* \"#utility.yul\":11074:11078   */\n      0x20\n        /* \"#utility.yul\":11066:11072   */\n      dup7\n        /* \"#utility.yul\":11062:11079   */\n      add\n        /* \"#utility.yul\":10988:11093   */\n      tag_174\n      jump\t// in\n    tag_312:\n        /* \"#utility.yul\":10979:11093   */\n      swap2\n      pop\n        /* \"#utility.yul\":10802:11099   */\n      pop\n        /* \"#utility.yul\":10714:11099   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":11105:11659   */\n    tag_63:\n        /* \"#utility.yul\":11200:11206   */\n      0x00\n        /* \"#utility.yul\":11249:11251   */\n      0x20\n        /* \"#utility.yul\":11237:11246   */\n      dup3\n        /* \"#utility.yul\":11228:11235   */\n      dup5\n        /* \"#utility.yul\":11224:11247   */\n      sub\n        /* \"#utility.yul\":11220:11252   */\n      slt\n        /* \"#utility.yul\":11217:11336   */\n      iszero\n      tag_314\n      jumpi\n        /* \"#utility.yul\":11255:11334   */\n      tag_315\n      tag_145\n      jump\t// in\n    tag_315:\n        /* \"#utility.yul\":11217:11336   */\n    tag_314:\n        /* \"#utility.yul\":11396:11397   */\n      0x00\n        /* \"#utility.yul\":11385:11394   */\n      dup3\n        /* \"#utility.yul\":11381:11398   */\n      add\n        /* \"#utility.yul\":11375:11399   */\n      mload\n        /* \"#utility.yul\":11426:11444   */\n      0xffffffffffffffff\n        /* \"#utility.yul\":11418:11424   */\n      dup2\n        /* \"#utility.yul\":11415:11445   */\n      gt\n        /* \"#utility.yul\":11412:11529   */\n      iszero\n      tag_316\n      jumpi\n        /* \"#utility.yul\":11448:11527   */\n      tag_317\n      tag_146\n      jump\t// in\n    tag_317:\n        /* \"#utility.yul\":11412:11529   */\n    tag_316:\n        /* \"#utility.yul\":11553:11642   */\n      tag_318\n        /* \"#utility.yul\":11634:11641   */\n      dup5\n        /* \"#utility.yul\":11625:11631   */\n      dup3\n        /* \"#utility.yul\":11614:11623   */\n      dup6\n        /* \"#utility.yul\":11610:11632   */\n      add\n        /* \"#utility.yul\":11553:11642   */\n      tag_175\n      jump\t// in\n    tag_318:\n        /* \"#utility.yul\":11543:11642   */\n      swap2\n      pop\n        /* \"#utility.yul\":11346:11652   */\n      pop\n        /* \"#utility.yul\":11105:11659   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":11665:12472   */\n    tag_68:\n        /* \"#utility.yul\":11914:11918   */\n      0x00\n        /* \"#utility.yul\":11952:11955   */\n      0xc0\n        /* \"#utility.yul\":11941:11950   */\n      dup3\n        /* \"#utility.yul\":11937:11956   */\n      add\n        /* \"#utility.yul\":11929:11956   */\n      swap1\n      pop\n        /* \"#utility.yul\":11966:12037   */\n      tag_320\n        /* \"#utility.yul\":12034:12035   */\n      0x00\n        /* \"#utility.yul\":12023:12032   */\n      dup4\n        /* \"#utility.yul\":12019:12036   */\n      add\n        /* \"#utility.yul\":12010:12016   */\n      dup10\n        /* \"#utility.yul\":11966:12037   */\n      tag_154\n      jump\t// in\n    tag_320:\n        /* \"#utility.yul\":12047:12119   */\n      tag_321\n        /* \"#utility.yul\":12115:12117   */\n      0x20\n        /* \"#utility.yul\":12104:12113   */\n      dup4\n        /* \"#utility.yul\":12100:12118   */\n      add\n        /* \"#utility.yul\":12091:12097   */\n      dup9\n        /* \"#utility.yul\":12047:12119   */\n      tag_155\n      jump\t// in\n    tag_321:\n        /* \"#utility.yul\":12129:12209   */\n      tag_322\n        /* \"#utility.yul\":12205:12207   */\n      0x40\n        /* \"#utility.yul\":12194:12203   */\n      dup4\n        /* \"#utility.yul\":12190:12208   */\n      add\n        /* \"#utility.yul\":12181:12187   */\n      dup8\n        /* \"#utility.yul\":12129:12209   */\n      tag_159\n      jump\t// in\n    tag_322:\n        /* \"#utility.yul\":12219:12299   */\n      tag_323\n        /* \"#utility.yul\":12295:12297   */\n      0x60\n        /* \"#utility.yul\":12284:12293   */\n      dup4\n        /* \"#utility.yul\":12280:12298   */\n      add\n        /* \"#utility.yul\":12271:12277   */\n      dup7\n        /* \"#utility.yul\":12219:12299   */\n      tag_159\n      jump\t// in\n    tag_323:\n        /* \"#utility.yul\":12309:12382   */\n      tag_324\n        /* \"#utility.yul\":12377:12380   */\n      0x80\n        /* \"#utility.yul\":12366:12375   */\n      dup4\n        /* \"#utility.yul\":12362:12381   */\n      add\n        /* \"#utility.yul\":12353:12359   */\n      dup6\n        /* \"#utility.yul\":12309:12382   */\n      tag_154\n      jump\t// in\n    tag_324:\n        /* \"#utility.yul\":12392:12465   */\n      tag_325\n        /* \"#utility.yul\":12460:12463   */\n      0xa0\n        /* \"#utility.yul\":12449:12458   */\n      dup4\n        /* \"#utility.yul\":12445:12464   */\n      add\n        /* \"#utility.yul\":12436:12442   */\n      dup5\n        /* \"#utility.yul\":12392:12465   */\n      tag_155\n      jump\t// in\n    tag_325:\n        /* \"#utility.yul\":11665:12472   */\n      swap8\n      swap7\n      pop\n      pop\n      pop\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":12478:13182   */\n    tag_81:\n        /* \"#utility.yul\":12705:12709   */\n      0x00\n        /* \"#utility.yul\":12743:12746   */\n      0x80\n        /* \"#utility.yul\":12732:12741   */\n      dup3\n        /* \"#utility.yul\":12728:12747   */\n      add\n        /* \"#utility.yul\":12720:12747   */\n      swap1\n      pop\n        /* \"#utility.yul\":12757:12828   */\n      tag_327\n        /* \"#utility.yul\":12825:12826   */\n      0x00\n        /* \"#utility.yul\":12814:12823   */\n      dup4\n        /* \"#utility.yul\":12810:12827   */\n      add\n        /* \"#utility.yul\":12801:12807   */\n      dup8\n        /* \"#utility.yul\":12757:12828   */\n      tag_155\n      jump\t// in\n    tag_327:\n        /* \"#utility.yul\":12875:12884   */\n      dup2\n        /* \"#utility.yul\":12869:12873   */\n      dup2\n        /* \"#utility.yul\":12865:12885   */\n      sub\n        /* \"#utility.yul\":12860:12862   */\n      0x20\n        /* \"#utility.yul\":12849:12858   */\n      dup4\n        /* \"#utility.yul\":12845:12863   */\n      add\n        /* \"#utility.yul\":12838:12886   */\n      mstore\n        /* \"#utility.yul\":12903:13011   */\n      tag_328\n        /* \"#utility.yul\":13006:13010   */\n      dup2\n        /* \"#utility.yul\":12997:13003   */\n      dup7\n        /* \"#utility.yul\":12903:13011   */\n      tag_167\n      jump\t// in\n    tag_328:\n        /* \"#utility.yul\":12895:13011   */\n      swap1\n      pop\n        /* \"#utility.yul\":13021:13093   */\n      tag_329\n        /* \"#utility.yul\":13089:13091   */\n      0x40\n        /* \"#utility.yul\":13078:13087   */\n      dup4\n        /* \"#utility.yul\":13074:13092   */\n      add\n        /* \"#utility.yul\":13065:13071   */\n      dup6\n        /* \"#utility.yul\":13021:13093   */\n      tag_154\n      jump\t// in\n    tag_329:\n        /* \"#utility.yul\":13103:13175   */\n      tag_330\n        /* \"#utility.yul\":13171:13173   */\n      0x60\n        /* \"#utility.yul\":13160:13169   */\n      dup4\n        /* \"#utility.yul\":13156:13174   */\n      add\n        /* \"#utility.yul\":13147:13153   */\n      dup5\n        /* \"#utility.yul\":13103:13175   */\n      tag_155\n      jump\t// in\n    tag_330:\n        /* \"#utility.yul\":12478:13182   */\n      swap6\n      swap5\n      pop\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":13188:13630   */\n    tag_88:\n        /* \"#utility.yul\":13337:13341   */\n      0x00\n        /* \"#utility.yul\":13375:13377   */\n      0x60\n        /* \"#utility.yul\":13364:13373   */\n      dup3\n        /* \"#utility.yul\":13360:13378   */\n      add\n        /* \"#utility.yul\":13352:13378   */\n      swap1\n      pop\n        /* \"#utility.yul\":13388:13459   */\n      tag_332\n        /* \"#utility.yul\":13456:13457   */\n      0x00\n        /* \"#utility.yul\":13445:13454   */\n      dup4\n        /* \"#utility.yul\":13441:13458   */\n      add\n        /* \"#utility.yul\":13432:13438   */\n      dup7\n        /* \"#utility.yul\":13388:13459   */\n      tag_154\n      jump\t// in\n    tag_332:\n        /* \"#utility.yul\":13469:13541   */\n      tag_333\n        /* \"#utility.yul\":13537:13539   */\n      0x20\n        /* \"#utility.yul\":13526:13535   */\n      dup4\n        /* \"#utility.yul\":13522:13540   */\n      add\n        /* \"#utility.yul\":13513:13519   */\n      dup6\n        /* \"#utility.yul\":13469:13541   */\n      tag_154\n      jump\t// in\n    tag_333:\n        /* \"#utility.yul\":13551:13623   */\n      tag_334\n        /* \"#utility.yul\":13619:13621   */\n      0x40\n        /* \"#utility.yul\":13608:13617   */\n      dup4\n        /* \"#utility.yul\":13604:13622   */\n      add\n        /* \"#utility.yul\":13595:13601   */\n      dup5\n        /* \"#utility.yul\":13551:13623   */\n      tag_155\n      jump\t// in\n    tag_334:\n        /* \"#utility.yul\":13188:13630   */\n      swap5\n      swap4\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":13636:13968   */\n    tag_93:\n        /* \"#utility.yul\":13757:13761   */\n      0x00\n        /* \"#utility.yul\":13795:13797   */\n      0x40\n        /* \"#utility.yul\":13784:13793   */\n      dup3\n        /* \"#utility.yul\":13780:13798   */\n      add\n        /* \"#utility.yul\":13772:13798   */\n      swap1\n      pop\n        /* \"#utility.yul\":13808:13879   */\n      tag_336\n        /* \"#utility.yul\":13876:13877   */\n      0x00\n        /* \"#utility.yul\":13865:13874   */\n      dup4\n        /* \"#utility.yul\":13861:13878   */\n      add\n        /* \"#utility.yul\":13852:13858   */\n      dup6\n        /* \"#utility.yul\":13808:13879   */\n      tag_154\n      jump\t// in\n    tag_336:\n        /* \"#utility.yul\":13889:13961   */\n      tag_337\n        /* \"#utility.yul\":13957:13959   */\n      0x20\n        /* \"#utility.yul\":13946:13955   */\n      dup4\n        /* \"#utility.yul\":13942:13960   */\n      add\n        /* \"#utility.yul\":13933:13939   */\n      dup5\n        /* \"#utility.yul\":13889:13961   */\n      tag_154\n      jump\t// in\n    tag_337:\n        /* \"#utility.yul\":13636:13968   */\n      swap4\n      swap3\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":13974:14325   */\n    tag_97:\n        /* \"#utility.yul\":14044:14050   */\n      0x00\n        /* \"#utility.yul\":14093:14095   */\n      0x20\n        /* \"#utility.yul\":14081:14090   */\n      dup3\n        /* \"#utility.yul\":14072:14079   */\n      dup5\n        /* \"#utility.yul\":14068:14091   */\n      sub\n        /* \"#utility.yul\":14064:14096   */\n      slt\n        /* \"#utility.yul\":14061:14180   */\n      iszero\n      tag_339\n      jumpi\n        /* \"#utility.yul\":14099:14178   */\n      tag_340\n      tag_145\n      jump\t// in\n    tag_340:\n        /* \"#utility.yul\":14061:14180   */\n    tag_339:\n        /* \"#utility.yul\":14219:14220   */\n      0x00\n        /* \"#utility.yul\":14244:14308   */\n      tag_341\n        /* \"#utility.yul\":14300:14307   */\n      dup5\n        /* \"#utility.yul\":14291:14297   */\n      dup3\n        /* \"#utility.yul\":14280:14289   */\n      dup6\n        /* \"#utility.yul\":14276:14298   */\n      add\n        /* \"#utility.yul\":14244:14308   */\n      tag_160\n      jump\t// in\n    tag_341:\n        /* \"#utility.yul\":14234:14308   */\n      swap2\n      pop\n        /* \"#utility.yul\":14190:14318   */\n      pop\n        /* \"#utility.yul\":13974:14325   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":14331:14500   */\n    tag_176:\n        /* \"#utility.yul\":14415:14426   */\n      0x00\n        /* \"#utility.yul\":14449:14455   */\n      dup3\n        /* \"#utility.yul\":14444:14447   */\n      dup3\n        /* \"#utility.yul\":14437:14456   */\n      mstore\n        /* \"#utility.yul\":14489:14493   */\n      0x20\n        /* \"#utility.yul\":14484:14487   */\n      dup3\n        /* \"#utility.yul\":14480:14494   */\n      add\n        /* \"#utility.yul\":14465:14494   */\n      swap1\n      pop\n        /* \"#utility.yul\":14331:14500   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":14506:14747   */\n    tag_177:\n        /* \"#utility.yul\":14646:14680   */\n      0x5361666545524332303a20617070726f76652066726f6d206e6f6e2d7a65726f\n        /* \"#utility.yul\":14642:14643   */\n      0x00\n        /* \"#utility.yul\":14634:14640   */\n      dup3\n        /* \"#utility.yul\":14630:14644   */\n      add\n        /* \"#utility.yul\":14623:14681   */\n      mstore\n        /* \"#utility.yul\":14715:14739   */\n      0x20746f206e6f6e2d7a65726f20616c6c6f77616e636500000000000000000000\n        /* \"#utility.yul\":14710:14712   */\n      0x20\n        /* \"#utility.yul\":14702:14708   */\n      dup3\n        /* \"#utility.yul\":14698:14713   */\n      add\n        /* \"#utility.yul\":14691:14740   */\n      mstore\n        /* \"#utility.yul\":14506:14747   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":14753:15119   */\n    tag_178:\n        /* \"#utility.yul\":14895:14898   */\n      0x00\n        /* \"#utility.yul\":14916:14983   */\n      tag_345\n        /* \"#utility.yul\":14980:14982   */\n      0x36\n        /* \"#utility.yul\":14975:14978   */\n      dup4\n        /* \"#utility.yul\":14916:14983   */\n      tag_176\n      jump\t// in\n    tag_345:\n        /* \"#utility.yul\":14909:14983   */\n      swap2\n      pop\n        /* \"#utility.yul\":14992:15085   */\n      tag_346\n        /* \"#utility.yul\":15081:15084   */\n      dup3\n        /* \"#utility.yul\":14992:15085   */\n      tag_177\n      jump\t// in\n    tag_346:\n        /* \"#utility.yul\":15110:15112   */\n      0x40\n        /* \"#utility.yul\":15105:15108   */\n      dup3\n        /* \"#utility.yul\":15101:15113   */\n      add\n        /* \"#utility.yul\":15094:15113   */\n      swap1\n      pop\n        /* \"#utility.yul\":14753:15119   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":15125:15544   */\n    tag_100:\n        /* \"#utility.yul\":15291:15295   */\n      0x00\n        /* \"#utility.yul\":15329:15331   */\n      0x20\n        /* \"#utility.yul\":15318:15327   */\n      dup3\n        /* \"#utility.yul\":15314:15332   */\n      add\n        /* \"#utility.yul\":15306:15332   */\n      swap1\n      pop\n        /* \"#utility.yul\":15378:15387   */\n      dup2\n        /* \"#utility.yul\":15372:15376   */\n      dup2\n        /* \"#utility.yul\":15368:15388   */\n      sub\n        /* \"#utility.yul\":15364:15365   */\n      0x00\n        /* \"#utility.yul\":15353:15362   */\n      dup4\n        /* \"#utility.yul\":15349:15366   */\n      add\n        /* \"#utility.yul\":15342:15389   */\n      mstore\n        /* \"#utility.yul\":15406:15537   */\n      tag_348\n        /* \"#utility.yul\":15532:15536   */\n      dup2\n        /* \"#utility.yul\":15406:15537   */\n      tag_178\n      jump\t// in\n    tag_348:\n        /* \"#utility.yul\":15398:15537   */\n      swap1\n      pop\n        /* \"#utility.yul\":15125:15544   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":15550:15882   */\n    tag_103:\n        /* \"#utility.yul\":15671:15675   */\n      0x00\n        /* \"#utility.yul\":15709:15711   */\n      0x40\n        /* \"#utility.yul\":15698:15707   */\n      dup3\n        /* \"#utility.yul\":15694:15712   */\n      add\n        /* \"#utility.yul\":15686:15712   */\n      swap1\n      pop\n        /* \"#utility.yul\":15722:15793   */\n      tag_350\n        /* \"#utility.yul\":15790:15791   */\n      0x00\n        /* \"#utility.yul\":15779:15788   */\n      dup4\n        /* \"#utility.yul\":15775:15792   */\n      add\n        /* \"#utility.yul\":15766:15772   */\n      dup6\n        /* \"#utility.yul\":15722:15793   */\n      tag_154\n      jump\t// in\n    tag_350:\n        /* \"#utility.yul\":15803:15875   */\n      tag_351\n        /* \"#utility.yul\":15871:15873   */\n      0x20\n        /* \"#utility.yul\":15860:15869   */\n      dup4\n        /* \"#utility.yul\":15856:15874   */\n      add\n        /* \"#utility.yul\":15847:15853   */\n      dup5\n        /* \"#utility.yul\":15803:15875   */\n      tag_155\n      jump\t// in\n    tag_351:\n        /* \"#utility.yul\":15550:15882   */\n      swap4\n      swap3\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":15888:15978   */\n    tag_179:\n        /* \"#utility.yul\":15922:15929   */\n      0x00\n        /* \"#utility.yul\":15965:15970   */\n      dup2\n        /* \"#utility.yul\":15958:15971   */\n      iszero\n        /* \"#utility.yul\":15951:15972   */\n      iszero\n        /* \"#utility.yul\":15940:15972   */\n      swap1\n      pop\n        /* \"#utility.yul\":15888:15978   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":15984:16100   */\n    tag_180:\n        /* \"#utility.yul\":16054:16075   */\n      tag_354\n        /* \"#utility.yul\":16069:16074   */\n      dup2\n        /* \"#utility.yul\":16054:16075   */\n      tag_179\n      jump\t// in\n    tag_354:\n        /* \"#utility.yul\":16047:16052   */\n      dup2\n        /* \"#utility.yul\":16044:16076   */\n      eq\n        /* \"#utility.yul\":16034:16094   */\n      tag_355\n      jumpi\n        /* \"#utility.yul\":16090:16091   */\n      0x00\n        /* \"#utility.yul\":16087:16088   */\n      dup1\n        /* \"#utility.yul\":16080:16092   */\n      revert\n        /* \"#utility.yul\":16034:16094   */\n    tag_355:\n        /* \"#utility.yul\":15984:16100   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":16106:16243   */\n    tag_181:\n        /* \"#utility.yul\":16160:16165   */\n      0x00\n        /* \"#utility.yul\":16191:16197   */\n      dup2\n        /* \"#utility.yul\":16185:16198   */\n      mload\n        /* \"#utility.yul\":16176:16198   */\n      swap1\n      pop\n        /* \"#utility.yul\":16207:16237   */\n      tag_357\n        /* \"#utility.yul\":16231:16236   */\n      dup2\n        /* \"#utility.yul\":16207:16237   */\n      tag_180\n      jump\t// in\n    tag_357:\n        /* \"#utility.yul\":16106:16243   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":16249:16594   */\n    tag_109:\n        /* \"#utility.yul\":16316:16322   */\n      0x00\n        /* \"#utility.yul\":16365:16367   */\n      0x20\n        /* \"#utility.yul\":16353:16362   */\n      dup3\n        /* \"#utility.yul\":16344:16351   */\n      dup5\n        /* \"#utility.yul\":16340:16363   */\n      sub\n        /* \"#utility.yul\":16336:16368   */\n      slt\n        /* \"#utility.yul\":16333:16452   */\n      iszero\n      tag_359\n      jumpi\n        /* \"#utility.yul\":16371:16450   */\n      tag_360\n      tag_145\n      jump\t// in\n    tag_360:\n        /* \"#utility.yul\":16333:16452   */\n    tag_359:\n        /* \"#utility.yul\":16491:16492   */\n      0x00\n        /* \"#utility.yul\":16516:16577   */\n      tag_361\n        /* \"#utility.yul\":16569:16576   */\n      dup5\n        /* \"#utility.yul\":16560:16566   */\n      dup3\n        /* \"#utility.yul\":16549:16558   */\n      dup6\n        /* \"#utility.yul\":16545:16567   */\n      add\n        /* \"#utility.yul\":16516:16577   */\n      tag_181\n      jump\t// in\n    tag_361:\n        /* \"#utility.yul\":16506:16577   */\n      swap2\n      pop\n        /* \"#utility.yul\":16462:16587   */\n      pop\n        /* \"#utility.yul\":16249:16594   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":16600:16829   */\n    tag_182:\n        /* \"#utility.yul\":16740:16774   */\n      0x5361666545524332303a204552433230206f7065726174696f6e20646964206e\n        /* \"#utility.yul\":16736:16737   */\n      0x00\n        /* \"#utility.yul\":16728:16734   */\n      dup3\n        /* \"#utility.yul\":16724:16738   */\n      add\n        /* \"#utility.yul\":16717:16775   */\n      mstore\n        /* \"#utility.yul\":16809:16821   */\n      0x6f74207375636365656400000000000000000000000000000000000000000000\n        /* \"#utility.yul\":16804:16806   */\n      0x20\n        /* \"#utility.yul\":16796:16802   */\n      dup3\n        /* \"#utility.yul\":16792:16807   */\n      add\n        /* \"#utility.yul\":16785:16822   */\n      mstore\n        /* \"#utility.yul\":16600:16829   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":16835:17201   */\n    tag_183:\n        /* \"#utility.yul\":16977:16980   */\n      0x00\n        /* \"#utility.yul\":16998:17065   */\n      tag_364\n        /* \"#utility.yul\":17062:17064   */\n      0x2a\n        /* \"#utility.yul\":17057:17060   */\n      dup4\n        /* \"#utility.yul\":16998:17065   */\n      tag_176\n      jump\t// in\n    tag_364:\n        /* \"#utility.yul\":16991:17065   */\n      swap2\n      pop\n        /* \"#utility.yul\":17074:17167   */\n      tag_365\n        /* \"#utility.yul\":17163:17166   */\n      dup3\n        /* \"#utility.yul\":17074:17167   */\n      tag_182\n      jump\t// in\n    tag_365:\n        /* \"#utility.yul\":17192:17194   */\n      0x40\n        /* \"#utility.yul\":17187:17190   */\n      dup3\n        /* \"#utility.yul\":17183:17195   */\n      add\n        /* \"#utility.yul\":17176:17195   */\n      swap1\n      pop\n        /* \"#utility.yul\":16835:17201   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":17207:17626   */\n    tag_112:\n        /* \"#utility.yul\":17373:17377   */\n      0x00\n        /* \"#utility.yul\":17411:17413   */\n      0x20\n        /* \"#utility.yul\":17400:17409   */\n      dup3\n        /* \"#utility.yul\":17396:17414   */\n      add\n        /* \"#utility.yul\":17388:17414   */\n      swap1\n      pop\n        /* \"#utility.yul\":17460:17469   */\n      dup2\n        /* \"#utility.yul\":17454:17458   */\n      dup2\n        /* \"#utility.yul\":17450:17470   */\n      sub\n        /* \"#utility.yul\":17446:17447   */\n      0x00\n        /* \"#utility.yul\":17435:17444   */\n      dup4\n        /* \"#utility.yul\":17431:17448   */\n      add\n        /* \"#utility.yul\":17424:17471   */\n      mstore\n        /* \"#utility.yul\":17488:17619   */\n      tag_367\n        /* \"#utility.yul\":17614:17618   */\n      dup2\n        /* \"#utility.yul\":17488:17619   */\n      tag_183\n      jump\t// in\n    tag_367:\n        /* \"#utility.yul\":17480:17619   */\n      swap1\n      pop\n        /* \"#utility.yul\":17207:17626   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":17632:17857   */\n    tag_184:\n        /* \"#utility.yul\":17772:17806   */\n      0x416464726573733a20696e73756666696369656e742062616c616e636520666f\n        /* \"#utility.yul\":17768:17769   */\n      0x00\n        /* \"#utility.yul\":17760:17766   */\n      dup3\n        /* \"#utility.yul\":17756:17770   */\n      add\n        /* \"#utility.yul\":17749:17807   */\n      mstore\n        /* \"#utility.yul\":17841:17849   */\n      0x722063616c6c0000000000000000000000000000000000000000000000000000\n        /* \"#utility.yul\":17836:17838   */\n      0x20\n        /* \"#utility.yul\":17828:17834   */\n      dup3\n        /* \"#utility.yul\":17824:17839   */\n      add\n        /* \"#utility.yul\":17817:17850   */\n      mstore\n        /* \"#utility.yul\":17632:17857   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":17863:18229   */\n    tag_185:\n        /* \"#utility.yul\":18005:18008   */\n      0x00\n        /* \"#utility.yul\":18026:18093   */\n      tag_370\n        /* \"#utility.yul\":18090:18092   */\n      0x26\n        /* \"#utility.yul\":18085:18088   */\n      dup4\n        /* \"#utility.yul\":18026:18093   */\n      tag_176\n      jump\t// in\n    tag_370:\n        /* \"#utility.yul\":18019:18093   */\n      swap2\n      pop\n        /* \"#utility.yul\":18102:18195   */\n      tag_371\n        /* \"#utility.yul\":18191:18194   */\n      dup3\n        /* \"#utility.yul\":18102:18195   */\n      tag_184\n      jump\t// in\n    tag_371:\n        /* \"#utility.yul\":18220:18222   */\n      0x40\n        /* \"#utility.yul\":18215:18218   */\n      dup3\n        /* \"#utility.yul\":18211:18223   */\n      add\n        /* \"#utility.yul\":18204:18223   */\n      swap1\n      pop\n        /* \"#utility.yul\":17863:18229   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":18235:18654   */\n    tag_119:\n        /* \"#utility.yul\":18401:18405   */\n      0x00\n        /* \"#utility.yul\":18439:18441   */\n      0x20\n        /* \"#utility.yul\":18428:18437   */\n      dup3\n        /* \"#utility.yul\":18424:18442   */\n      add\n        /* \"#utility.yul\":18416:18442   */\n      swap1\n      pop\n        /* \"#utility.yul\":18488:18497   */\n      dup2\n        /* \"#utility.yul\":18482:18486   */\n      dup2\n        /* \"#utility.yul\":18478:18498   */\n      sub\n        /* \"#utility.yul\":18474:18475   */\n      0x00\n        /* \"#utility.yul\":18463:18472   */\n      dup4\n        /* \"#utility.yul\":18459:18476   */\n      add\n        /* \"#utility.yul\":18452:18499   */\n      mstore\n        /* \"#utility.yul\":18516:18647   */\n      tag_373\n        /* \"#utility.yul\":18642:18646   */\n      dup2\n        /* \"#utility.yul\":18516:18647   */\n      tag_185\n      jump\t// in\n    tag_373:\n        /* \"#utility.yul\":18508:18647   */\n      swap1\n      pop\n        /* \"#utility.yul\":18235:18654   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":18660:18758   */\n    tag_186:\n        /* \"#utility.yul\":18711:18717   */\n      0x00\n        /* \"#utility.yul\":18745:18750   */\n      dup2\n        /* \"#utility.yul\":18739:18751   */\n      mload\n        /* \"#utility.yul\":18729:18751   */\n      swap1\n      pop\n        /* \"#utility.yul\":18660:18758   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":18764:18911   */\n    tag_187:\n        /* \"#utility.yul\":18865:18876   */\n      0x00\n        /* \"#utility.yul\":18902:18905   */\n      dup2\n        /* \"#utility.yul\":18887:18905   */\n      swap1\n      pop\n        /* \"#utility.yul\":18764:18911   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":18917:19163   */\n    tag_188:\n        /* \"#utility.yul\":18998:18999   */\n      0x00\n        /* \"#utility.yul\":19008:19121   */\n    tag_377:\n        /* \"#utility.yul\":19022:19028   */\n      dup4\n        /* \"#utility.yul\":19019:19020   */\n      dup2\n        /* \"#utility.yul\":19016:19029   */\n      lt\n        /* \"#utility.yul\":19008:19121   */\n      iszero\n      tag_379\n      jumpi\n        /* \"#utility.yul\":19107:19108   */\n      dup1\n        /* \"#utility.yul\":19102:19105   */\n      dup3\n        /* \"#utility.yul\":19098:19109   */\n      add\n        /* \"#utility.yul\":19092:19110   */\n      mload\n        /* \"#utility.yul\":19088:19089   */\n      dup2\n        /* \"#utility.yul\":19083:19086   */\n      dup5\n        /* \"#utility.yul\":19079:19090   */\n      add\n        /* \"#utility.yul\":19072:19111   */\n      mstore\n        /* \"#utility.yul\":19044:19046   */\n      0x20\n        /* \"#utility.yul\":19041:19042   */\n      dup2\n        /* \"#utility.yul\":19037:19047   */\n      add\n        /* \"#utility.yul\":19032:19047   */\n      swap1\n      pop\n        /* \"#utility.yul\":19008:19121   */\n      jump(tag_377)\n    tag_379:\n        /* \"#utility.yul\":19155:19156   */\n      0x00\n        /* \"#utility.yul\":19146:19152   */\n      dup5\n        /* \"#utility.yul\":19141:19144   */\n      dup5\n        /* \"#utility.yul\":19137:19153   */\n      add\n        /* \"#utility.yul\":19130:19157   */\n      mstore\n        /* \"#utility.yul\":18979:19163   */\n      pop\n        /* \"#utility.yul\":18917:19163   */\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":19169:19555   */\n    tag_189:\n        /* \"#utility.yul\":19273:19276   */\n      0x00\n        /* \"#utility.yul\":19301:19339   */\n      tag_381\n        /* \"#utility.yul\":19333:19338   */\n      dup3\n        /* \"#utility.yul\":19301:19339   */\n      tag_186\n      jump\t// in\n    tag_381:\n        /* \"#utility.yul\":19355:19443   */\n      tag_382\n        /* \"#utility.yul\":19436:19442   */\n      dup2\n        /* \"#utility.yul\":19431:19434   */\n      dup6\n        /* \"#utility.yul\":19355:19443   */\n      tag_187\n      jump\t// in\n    tag_382:\n        /* \"#utility.yul\":19348:19443   */\n      swap4\n      pop\n        /* \"#utility.yul\":19452:19517   */\n      tag_383\n        /* \"#utility.yul\":19510:19516   */\n      dup2\n        /* \"#utility.yul\":19505:19508   */\n      dup6\n        /* \"#utility.yul\":19498:19502   */\n      0x20\n        /* \"#utility.yul\":19491:19496   */\n      dup7\n        /* \"#utility.yul\":19487:19503   */\n      add\n        /* \"#utility.yul\":19452:19517   */\n      tag_188\n      jump\t// in\n    tag_383:\n        /* \"#utility.yul\":19542:19548   */\n      dup1\n        /* \"#utility.yul\":19537:19540   */\n      dup5\n        /* \"#utility.yul\":19533:19549   */\n      add\n        /* \"#utility.yul\":19526:19549   */\n      swap2\n      pop\n        /* \"#utility.yul\":19277:19555   */\n      pop\n        /* \"#utility.yul\":19169:19555   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":19561:19832   */\n    tag_121:\n        /* \"#utility.yul\":19691:19694   */\n      0x00\n        /* \"#utility.yul\":19713:19806   */\n      tag_385\n        /* \"#utility.yul\":19802:19805   */\n      dup3\n        /* \"#utility.yul\":19793:19799   */\n      dup5\n        /* \"#utility.yul\":19713:19806   */\n      tag_189\n      jump\t// in\n    tag_385:\n        /* \"#utility.yul\":19706:19806   */\n      swap2\n      pop\n        /* \"#utility.yul\":19823:19826   */\n      dup2\n        /* \"#utility.yul\":19816:19826   */\n      swap1\n      pop\n        /* \"#utility.yul\":19561:19832   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":19838:20017   */\n    tag_190:\n        /* \"#utility.yul\":19978:20009   */\n      0x416464726573733a2063616c6c20746f206e6f6e2d636f6e7472616374000000\n        /* \"#utility.yul\":19974:19975   */\n      0x00\n        /* \"#utility.yul\":19966:19972   */\n      dup3\n        /* \"#utility.yul\":19962:19976   */\n      add\n        /* \"#utility.yul\":19955:20010   */\n      mstore\n        /* \"#utility.yul\":19838:20017   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":20023:20389   */\n    tag_191:\n        /* \"#utility.yul\":20165:20168   */\n      0x00\n        /* \"#utility.yul\":20186:20253   */\n      tag_388\n        /* \"#utility.yul\":20250:20252   */\n      0x1d\n        /* \"#utility.yul\":20245:20248   */\n      dup4\n        /* \"#utility.yul\":20186:20253   */\n      tag_176\n      jump\t// in\n    tag_388:\n        /* \"#utility.yul\":20179:20253   */\n      swap2\n      pop\n        /* \"#utility.yul\":20262:20355   */\n      tag_389\n        /* \"#utility.yul\":20351:20354   */\n      dup3\n        /* \"#utility.yul\":20262:20355   */\n      tag_190\n      jump\t// in\n    tag_389:\n        /* \"#utility.yul\":20380:20382   */\n      0x20\n        /* \"#utility.yul\":20375:20378   */\n      dup3\n        /* \"#utility.yul\":20371:20383   */\n      add\n        /* \"#utility.yul\":20364:20383   */\n      swap1\n      pop\n        /* \"#utility.yul\":20023:20389   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":20395:20814   */\n    tag_134:\n        /* \"#utility.yul\":20561:20565   */\n      0x00\n        /* \"#utility.yul\":20599:20601   */\n      0x20\n        /* \"#utility.yul\":20588:20597   */\n      dup3\n        /* \"#utility.yul\":20584:20602   */\n      add\n        /* \"#utility.yul\":20576:20602   */\n      swap1\n      pop\n        /* \"#utility.yul\":20648:20657   */\n      dup2\n        /* \"#utility.yul\":20642:20646   */\n      dup2\n        /* \"#utility.yul\":20638:20658   */\n      sub\n        /* \"#utility.yul\":20634:20635   */\n      0x00\n        /* \"#utility.yul\":20623:20632   */\n      dup4\n        /* \"#utility.yul\":20619:20636   */\n      add\n        /* \"#utility.yul\":20612:20659   */\n      mstore\n        /* \"#utility.yul\":20676:20807   */\n      tag_391\n        /* \"#utility.yul\":20802:20806   */\n      dup2\n        /* \"#utility.yul\":20676:20807   */\n      tag_191\n      jump\t// in\n    tag_391:\n        /* \"#utility.yul\":20668:20807   */\n      swap1\n      pop\n        /* \"#utility.yul\":20395:20814   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":20820:20919   */\n    tag_192:\n        /* \"#utility.yul\":20872:20878   */\n      0x00\n        /* \"#utility.yul\":20906:20911   */\n      dup2\n        /* \"#utility.yul\":20900:20912   */\n      mload\n        /* \"#utility.yul\":20890:20912   */\n      swap1\n      pop\n        /* \"#utility.yul\":20820:20919   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":20925:21302   */\n    tag_193:\n        /* \"#utility.yul\":21013:21016   */\n      0x00\n        /* \"#utility.yul\":21041:21080   */\n      tag_394\n        /* \"#utility.yul\":21074:21079   */\n      dup3\n        /* \"#utility.yul\":21041:21080   */\n      tag_192\n      jump\t// in\n    tag_394:\n        /* \"#utility.yul\":21096:21167   */\n      tag_395\n        /* \"#utility.yul\":21160:21166   */\n      dup2\n        /* \"#utility.yul\":21155:21158   */\n      dup6\n        /* \"#utility.yul\":21096:21167   */\n      tag_176\n      jump\t// in\n    tag_395:\n        /* \"#utility.yul\":21089:21167   */\n      swap4\n      pop\n        /* \"#utility.yul\":21176:21241   */\n      tag_396\n        /* \"#utility.yul\":21234:21240   */\n      dup2\n        /* \"#utility.yul\":21229:21232   */\n      dup6\n        /* \"#utility.yul\":21222:21226   */\n      0x20\n        /* \"#utility.yul\":21215:21220   */\n      dup7\n        /* \"#utility.yul\":21211:21227   */\n      add\n        /* \"#utility.yul\":21176:21241   */\n      tag_188\n      jump\t// in\n    tag_396:\n        /* \"#utility.yul\":21266:21295   */\n      tag_397\n        /* \"#utility.yul\":21288:21294   */\n      dup2\n        /* \"#utility.yul\":21266:21295   */\n      tag_169\n      jump\t// in\n    tag_397:\n        /* \"#utility.yul\":21261:21264   */\n      dup5\n        /* \"#utility.yul\":21257:21296   */\n      add\n        /* \"#utility.yul\":21250:21296   */\n      swap2\n      pop\n        /* \"#utility.yul\":21017:21302   */\n      pop\n        /* \"#utility.yul\":20925:21302   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":21308:21621   */\n    tag_143:\n        /* \"#utility.yul\":21421:21425   */\n      0x00\n        /* \"#utility.yul\":21459:21461   */\n      0x20\n        /* \"#utility.yul\":21448:21457   */\n      dup3\n        /* \"#utility.yul\":21444:21462   */\n      add\n        /* \"#utility.yul\":21436:21462   */\n      swap1\n      pop\n        /* \"#utility.yul\":21508:21517   */\n      dup2\n        /* \"#utility.yul\":21502:21506   */\n      dup2\n        /* \"#utility.yul\":21498:21518   */\n      sub\n        /* \"#utility.yul\":21494:21495   */\n      0x00\n        /* \"#utility.yul\":21483:21492   */\n      dup4\n        /* \"#utility.yul\":21479:21496   */\n      add\n        /* \"#utility.yul\":21472:21519   */\n      mstore\n        /* \"#utility.yul\":21536:21614   */\n      tag_399\n        /* \"#utility.yul\":21609:21613   */\n      dup2\n        /* \"#utility.yul\":21600:21606   */\n      dup5\n        /* \"#utility.yul\":21536:21614   */\n      tag_193\n      jump\t// in\n    tag_399:\n        /* \"#utility.yul\":21528:21614   */\n      swap1\n      pop\n        /* \"#utility.yul\":21308:21621   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n\n    auxdata: 0xa264697066735822122058d0f50dc30d4707425dac32d3c3e1ca64397edfa86b19614d73b705a1a8c53f64736f6c63430008110033\n}\n",
						"bytecode": {
							"functionDebugData": {
								"@_753": {
									"entryPoint": null,
									"id": 753,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_decode_t_address_fromMemory": {
									"entryPoint": 275,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_addresst_address_fromMemory": {
									"entryPoint": 298,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 2
								},
								"allocate_unbounded": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"cleanup_t_address": {
									"entryPoint": 229,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_uint160": {
									"entryPoint": 197,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b": {
									"entryPoint": 192,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"validator_revert_t_address": {
									"entryPoint": 249,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								}
							},
							"generatedSources": [
								{
									"ast": {
										"nodeType": "YulBlock",
										"src": "0:1355:6",
										"statements": [
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "47:35:6",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "57:19:6",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "73:2:6",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "67:5:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "67:9:6"
															},
															"variableNames": [
																{
																	"name": "memPtr",
																	"nodeType": "YulIdentifier",
																	"src": "57:6:6"
																}
															]
														}
													]
												},
												"name": "allocate_unbounded",
												"nodeType": "YulFunctionDefinition",
												"returnVariables": [
													{
														"name": "memPtr",
														"nodeType": "YulTypedName",
														"src": "40:6:6",
														"type": ""
													}
												],
												"src": "7:75:6"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "177:28:6",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "194:1:6",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "197:1:6",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "187:6:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "187:12:6"
															},
															"nodeType": "YulExpressionStatement",
															"src": "187:12:6"
														}
													]
												},
												"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
												"nodeType": "YulFunctionDefinition",
												"src": "88:117:6"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "300:28:6",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "317:1:6",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "320:1:6",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "310:6:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "310:12:6"
															},
															"nodeType": "YulExpressionStatement",
															"src": "310:12:6"
														}
													]
												},
												"name": "revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db",
												"nodeType": "YulFunctionDefinition",
												"src": "211:117:6"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "379:81:6",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "389:65:6",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "404:5:6"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "411:42:6",
																		"type": "",
																		"value": "0xffffffffffffffffffffffffffffffffffffffff"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nodeType": "YulIdentifier",
																	"src": "400:3:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "400:54:6"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nodeType": "YulIdentifier",
																	"src": "389:7:6"
																}
															]
														}
													]
												},
												"name": "cleanup_t_uint160",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "361:5:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nodeType": "YulTypedName",
														"src": "371:7:6",
														"type": ""
													}
												],
												"src": "334:126:6"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "511:51:6",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "521:35:6",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "550:5:6"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint160",
																	"nodeType": "YulIdentifier",
																	"src": "532:17:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "532:24:6"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nodeType": "YulIdentifier",
																	"src": "521:7:6"
																}
															]
														}
													]
												},
												"name": "cleanup_t_address",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "493:5:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nodeType": "YulTypedName",
														"src": "503:7:6",
														"type": ""
													}
												],
												"src": "466:96:6"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "611:79:6",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "668:16:6",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "677:1:6",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "680:1:6",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "670:6:6"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "670:12:6"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "670:12:6"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "634:5:6"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nodeType": "YulIdentifier",
																						"src": "659:5:6"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_address",
																					"nodeType": "YulIdentifier",
																					"src": "641:17:6"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "641:24:6"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nodeType": "YulIdentifier",
																			"src": "631:2:6"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "631:35:6"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "624:6:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "624:43:6"
															},
															"nodeType": "YulIf",
															"src": "621:63:6"
														}
													]
												},
												"name": "validator_revert_t_address",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "604:5:6",
														"type": ""
													}
												],
												"src": "568:122:6"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "759:80:6",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "769:22:6",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nodeType": "YulIdentifier",
																		"src": "784:6:6"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "778:5:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "778:13:6"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nodeType": "YulIdentifier",
																	"src": "769:5:6"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "827:5:6"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_address",
																	"nodeType": "YulIdentifier",
																	"src": "800:26:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "800:33:6"
															},
															"nodeType": "YulExpressionStatement",
															"src": "800:33:6"
														}
													]
												},
												"name": "abi_decode_t_address_fromMemory",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nodeType": "YulTypedName",
														"src": "737:6:6",
														"type": ""
													},
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "745:3:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "753:5:6",
														"type": ""
													}
												],
												"src": "696:143:6"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "939:413:6",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "985:83:6",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nodeType": "YulIdentifier",
																				"src": "987:77:6"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "987:79:6"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "987:79:6"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "960:7:6"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "969:9:6"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "956:3:6"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "956:23:6"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "981:2:6",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "952:3:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "952:32:6"
															},
															"nodeType": "YulIf",
															"src": "949:119:6"
														},
														{
															"nodeType": "YulBlock",
															"src": "1078:128:6",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "1093:15:6",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1107:1:6",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "1097:6:6",
																			"type": ""
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "1122:74:6",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "1168:9:6"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "1179:6:6"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "1164:3:6"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "1164:22:6"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "1188:7:6"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address_fromMemory",
																			"nodeType": "YulIdentifier",
																			"src": "1132:31:6"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1132:64:6"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nodeType": "YulIdentifier",
																			"src": "1122:6:6"
																		}
																	]
																}
															]
														},
														{
															"nodeType": "YulBlock",
															"src": "1216:129:6",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "1231:16:6",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1245:2:6",
																		"type": "",
																		"value": "32"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "1235:6:6",
																			"type": ""
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "1261:74:6",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "1307:9:6"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "1318:6:6"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "1303:3:6"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "1303:22:6"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "1327:7:6"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address_fromMemory",
																			"nodeType": "YulIdentifier",
																			"src": "1271:31:6"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1271:64:6"
																	},
																	"variableNames": [
																		{
																			"name": "value1",
																			"nodeType": "YulIdentifier",
																			"src": "1261:6:6"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_addresst_address_fromMemory",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "901:9:6",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "912:7:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "924:6:6",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "932:6:6",
														"type": ""
													}
												],
												"src": "845:507:6"
											}
										]
									},
									"contents": "{\n\n    function allocate_unbounded() -> memPtr {\n        memPtr := mload(64)\n    }\n\n    function revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() {\n        revert(0, 0)\n    }\n\n    function revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() {\n        revert(0, 0)\n    }\n\n    function cleanup_t_uint160(value) -> cleaned {\n        cleaned := and(value, 0xffffffffffffffffffffffffffffffffffffffff)\n    }\n\n    function cleanup_t_address(value) -> cleaned {\n        cleaned := cleanup_t_uint160(value)\n    }\n\n    function validator_revert_t_address(value) {\n        if iszero(eq(value, cleanup_t_address(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_address_fromMemory(offset, end) -> value {\n        value := mload(offset)\n        validator_revert_t_address(value)\n    }\n\n    function abi_decode_tuple_t_addresst_address_fromMemory(headStart, dataEnd) -> value0, value1 {\n        if slt(sub(dataEnd, headStart), 64) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address_fromMemory(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 32\n\n            value1 := abi_decode_t_address_fromMemory(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n}\n",
									"id": 6,
									"language": "Yul",
									"name": "#utility.yul"
								}
							],
							"linkReferences": {},
							"object": "60806040523480156200001157600080fd5b50604051620019223803806200192283398181016040528101906200003791906200012a565b816000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555080600160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550505062000171565b600080fd5b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000620000f282620000c5565b9050919050565b6200010481620000e5565b81146200011057600080fd5b50565b6000815190506200012481620000f9565b92915050565b60008060408385031215620001445762000143620000c0565b5b6000620001548582860162000113565b9250506020620001678582860162000113565b9150509250929050565b6117a180620001816000396000f3fe6080604052600436106100555760003560e01c806307ee83a11461005a5780633fc8cef3146100765780637d17ff3d146100a1578063839da792146100ca578063b4688dc8146100e6578063f887ea4014610102575b600080fd5b610074600480360381019061006f9190610d27565b61012d565b005b34801561008257600080fd5b5061008b6102d1565b6040516100989190610d9d565b60405180910390f35b3480156100ad57600080fd5b506100c860048036038101906100c39190610db8565b6102f7565b005b6100e460048036038101906100df9190610e1f565b61050c565b005b61010060048036038101906100fb9190610e1f565b610633565b005b34801561010e57600080fd5b506101176107ef565b6040516101249190610d9d565b60405180910390f35b61015a3330858773ffffffffffffffffffffffffffffffffffffffff16610813909392919063ffffffff16565b6101a560008054906101000a900473ffffffffffffffffffffffffffffffffffffffff16848673ffffffffffffffffffffffffffffffffffffffff1661089c9092919063ffffffff16565b6101d23330838573ffffffffffffffffffffffffffffffffffffffff16610813909392919063ffffffff16565b61021d60008054906101000a900473ffffffffffffffffffffffffffffffffffffffff16828473ffffffffffffffffffffffffffffffffffffffff1661089c9092919063ffffffff16565b60008054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663e8e337008584868560008033426040518963ffffffff1660e01b8152600401610285989796959493929190610eb3565b6060604051808303816000875af11580156102a4573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906102c89190610f46565b50505050505050565b600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b6000600267ffffffffffffffff81111561031457610313610f99565b5b6040519080825280602002602001820160405280156103425781602001602082028036833780820191505090505b509050848160008151811061035a57610359610fc8565b5b602002602001019073ffffffffffffffffffffffffffffffffffffffff16908173ffffffffffffffffffffffffffffffffffffffff168152505083816001815181106103a9576103a8610fc8565b5b602002602001019073ffffffffffffffffffffffffffffffffffffffff16908173ffffffffffffffffffffffffffffffffffffffff16815250506104103330858873ffffffffffffffffffffffffffffffffffffffff16610813909392919063ffffffff16565b61045b60008054906101000a900473ffffffffffffffffffffffffffffffffffffffff16848773ffffffffffffffffffffffffffffffffffffffff1661089c9092919063ffffffff16565b60008054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166338ed173984848433426040518663ffffffff1660e01b81526004016104bc9594939291906110b5565b6000604051808303816000875af11580156104db573d6000803e3d6000fd5b505050506040513d6000823e3d601f19601f820116820180604052508101906105049190611239565b505050505050565b6105393330838573ffffffffffffffffffffffffffffffffffffffff16610813909392919063ffffffff16565b61058460008054906101000a900473ffffffffffffffffffffffffffffffffffffffff16828473ffffffffffffffffffffffffffffffffffffffff1661089c9092919063ffffffff16565b60008054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663f305d71934848460008033426040518863ffffffff1660e01b81526004016105e996959493929190611282565b60606040518083038185885af1158015610607573d6000803e3d6000fd5b50505050506040513d601f19601f8201168201806040525081019061062c9190610f46565b5050505050565b6000600267ffffffffffffffff8111156106505761064f610f99565b5b60405190808252806020026020018201604052801561067e5781602001602082028036833780820191505090505b509050600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16816000815181106106b8576106b7610fc8565b5b602002602001019073ffffffffffffffffffffffffffffffffffffffff16908173ffffffffffffffffffffffffffffffffffffffff1681525050828160018151811061070757610706610fc8565b5b602002602001019073ffffffffffffffffffffffffffffffffffffffff16908173ffffffffffffffffffffffffffffffffffffffff168152505060008054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16637ff36ab534848433426040518663ffffffff1660e01b81526004016107a194939291906112e3565b60006040518083038185885af11580156107bf573d6000803e3d6000fd5b50505050506040513d6000823e3d601f19601f820116820180604052508101906107e99190611239565b50505050565b60008054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b610896846323b872dd60e01b8585856040516024016108349392919061132f565b604051602081830303815290604052907bffffffffffffffffffffffffffffffffffffffffffffffffffffffff19166020820180517bffffffffffffffffffffffffffffffffffffffffffffffffffffffff83818316178352505050506109eb565b50505050565b6000811480610926575060008373ffffffffffffffffffffffffffffffffffffffff1663dd62ed3e30856040518363ffffffff1660e01b81526004016108e3929190611366565b602060405180830381865afa158015610900573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610924919061138f565b145b610965576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161095c9061143f565b60405180910390fd5b6109e68363095ea7b360e01b848460405160240161098492919061145f565b604051602081830303815290604052907bffffffffffffffffffffffffffffffffffffffffffffffffffffffff19166020820180517bffffffffffffffffffffffffffffffffffffffffffffffffffffffff83818316178352505050506109eb565b505050565b6000610a4d826040518060400160405280602081526020017f5361666545524332303a206c6f772d6c6576656c2063616c6c206661696c65648152508573ffffffffffffffffffffffffffffffffffffffff16610ab29092919063ffffffff16565b9050600081511115610aad5780806020019051810190610a6d91906114c0565b610aac576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610aa39061155f565b60405180910390fd5b5b505050565b6060610ac18484600085610aca565b90509392505050565b606082471015610b0f576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610b06906115f1565b60405180910390fd5b6000808673ffffffffffffffffffffffffffffffffffffffff168587604051610b389190611682565b60006040518083038185875af1925050503d8060008114610b75576040519150601f19603f3d011682016040523d82523d6000602084013e610b7a565b606091505b5091509150610b8b87838387610b97565b92505050949350505050565b60608315610bf9576000835103610bf157610bb185610c0c565b610bf0576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610be7906116e5565b60405180910390fd5b5b829050610c04565b610c038383610c2f565b5b949350505050565b6000808273ffffffffffffffffffffffffffffffffffffffff163b119050919050565b600082511115610c425781518083602001fd5b806040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610c769190611749565b60405180910390fd5b6000604051905090565b600080fd5b600080fd5b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000610cbe82610c93565b9050919050565b610cce81610cb3565b8114610cd957600080fd5b50565b600081359050610ceb81610cc5565b92915050565b6000819050919050565b610d0481610cf1565b8114610d0f57600080fd5b50565b600081359050610d2181610cfb565b92915050565b60008060008060808587031215610d4157610d40610c89565b5b6000610d4f87828801610cdc565b9450506020610d6087828801610d12565b9350506040610d7187828801610cdc565b9250506060610d8287828801610d12565b91505092959194509250565b610d9781610cb3565b82525050565b6000602082019050610db26000830184610d8e565b92915050565b60008060008060808587031215610dd257610dd1610c89565b5b6000610de087828801610cdc565b9450506020610df187828801610cdc565b9350506040610e0287828801610d12565b9250506060610e1387828801610d12565b91505092959194509250565b60008060408385031215610e3657610e35610c89565b5b6000610e4485828601610cdc565b9250506020610e5585828601610d12565b9150509250929050565b610e6881610cf1565b82525050565b6000819050919050565b6000819050919050565b6000610e9d610e98610e9384610e6e565b610e78565b610cf1565b9050919050565b610ead81610e82565b82525050565b600061010082019050610ec9600083018b610d8e565b610ed6602083018a610d8e565b610ee36040830189610e5f565b610ef06060830188610e5f565b610efd6080830187610ea4565b610f0a60a0830186610ea4565b610f1760c0830185610d8e565b610f2460e0830184610e5f565b9998505050505050505050565b600081519050610f4081610cfb565b92915050565b600080600060608486031215610f5f57610f5e610c89565b5b6000610f6d86828701610f31565b9350506020610f7e86828701610f31565b9250506040610f8f86828701610f31565b9150509250925092565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b600081519050919050565b600082825260208201905092915050565b6000819050602082019050919050565b61102c81610cb3565b82525050565b600061103e8383611023565b60208301905092915050565b6000602082019050919050565b600061106282610ff7565b61106c8185611002565b935061107783611013565b8060005b838110156110a857815161108f8882611032565b975061109a8361104a565b92505060018101905061107b565b5085935050505092915050565b600060a0820190506110ca6000830188610e5f565b6110d76020830187610e5f565b81810360408301526110e98186611057565b90506110f86060830185610d8e565b6111056080830184610e5f565b9695505050505050565b600080fd5b6000601f19601f8301169050919050565b61112e82611114565b810181811067ffffffffffffffff8211171561114d5761114c610f99565b5b80604052505050565b6000611160610c7f565b905061116c8282611125565b919050565b600067ffffffffffffffff82111561118c5761118b610f99565b5b602082029050602081019050919050565b600080fd5b60006111b56111b084611171565b611156565b905080838252602082019050602084028301858111156111d8576111d761119d565b5b835b8181101561120157806111ed8882610f31565b8452602084019350506020810190506111da565b5050509392505050565b600082601f8301126112205761121f61110f565b5b81516112308482602086016111a2565b91505092915050565b60006020828403121561124f5761124e610c89565b5b600082015167ffffffffffffffff81111561126d5761126c610c8e565b5b6112798482850161120b565b91505092915050565b600060c0820190506112976000830189610d8e565b6112a46020830188610e5f565b6112b16040830187610ea4565b6112be6060830186610ea4565b6112cb6080830185610d8e565b6112d860a0830184610e5f565b979650505050505050565b60006080820190506112f86000830187610e5f565b818103602083015261130a8186611057565b90506113196040830185610d8e565b6113266060830184610e5f565b95945050505050565b60006060820190506113446000830186610d8e565b6113516020830185610d8e565b61135e6040830184610e5f565b949350505050565b600060408201905061137b6000830185610d8e565b6113886020830184610d8e565b9392505050565b6000602082840312156113a5576113a4610c89565b5b60006113b384828501610f31565b91505092915050565b600082825260208201905092915050565b7f5361666545524332303a20617070726f76652066726f6d206e6f6e2d7a65726f60008201527f20746f206e6f6e2d7a65726f20616c6c6f77616e636500000000000000000000602082015250565b60006114296036836113bc565b9150611434826113cd565b604082019050919050565b600060208201905081810360008301526114588161141c565b9050919050565b60006040820190506114746000830185610d8e565b6114816020830184610e5f565b9392505050565b60008115159050919050565b61149d81611488565b81146114a857600080fd5b50565b6000815190506114ba81611494565b92915050565b6000602082840312156114d6576114d5610c89565b5b60006114e4848285016114ab565b91505092915050565b7f5361666545524332303a204552433230206f7065726174696f6e20646964206e60008201527f6f74207375636365656400000000000000000000000000000000000000000000602082015250565b6000611549602a836113bc565b9150611554826114ed565b604082019050919050565b600060208201905081810360008301526115788161153c565b9050919050565b7f416464726573733a20696e73756666696369656e742062616c616e636520666f60008201527f722063616c6c0000000000000000000000000000000000000000000000000000602082015250565b60006115db6026836113bc565b91506115e68261157f565b604082019050919050565b6000602082019050818103600083015261160a816115ce565b9050919050565b600081519050919050565b600081905092915050565b60005b8381101561164557808201518184015260208101905061162a565b60008484015250505050565b600061165c82611611565b611666818561161c565b9350611676818560208601611627565b80840191505092915050565b600061168e8284611651565b915081905092915050565b7f416464726573733a2063616c6c20746f206e6f6e2d636f6e7472616374000000600082015250565b60006116cf601d836113bc565b91506116da82611699565b602082019050919050565b600060208201905081810360008301526116fe816116c2565b9050919050565b600081519050919050565b600061171b82611705565b61172581856113bc565b9350611735818560208601611627565b61173e81611114565b840191505092915050565b600060208201905081810360008301526117638184611710565b90509291505056fea264697066735822122058d0f50dc30d4707425dac32d3c3e1ca64397edfa86b19614d73b705a1a8c53f64736f6c63430008110033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH3 0x11 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x40 MLOAD PUSH3 0x1922 CODESIZE SUB DUP1 PUSH3 0x1922 DUP4 CODECOPY DUP2 DUP2 ADD PUSH1 0x40 MSTORE DUP2 ADD SWAP1 PUSH3 0x37 SWAP2 SWAP1 PUSH3 0x12A JUMP JUMPDEST DUP2 PUSH1 0x0 DUP1 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP DUP1 PUSH1 0x1 PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP POP POP PUSH3 0x171 JUMP JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH3 0xF2 DUP3 PUSH3 0xC5 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH3 0x104 DUP2 PUSH3 0xE5 JUMP JUMPDEST DUP2 EQ PUSH3 0x110 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP PUSH3 0x124 DUP2 PUSH3 0xF9 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH3 0x144 JUMPI PUSH3 0x143 PUSH3 0xC0 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH3 0x154 DUP6 DUP3 DUP7 ADD PUSH3 0x113 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH3 0x167 DUP6 DUP3 DUP7 ADD PUSH3 0x113 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH2 0x17A1 DUP1 PUSH3 0x181 PUSH1 0x0 CODECOPY PUSH1 0x0 RETURN INVALID PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x4 CALLDATASIZE LT PUSH2 0x55 JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x7EE83A1 EQ PUSH2 0x5A JUMPI DUP1 PUSH4 0x3FC8CEF3 EQ PUSH2 0x76 JUMPI DUP1 PUSH4 0x7D17FF3D EQ PUSH2 0xA1 JUMPI DUP1 PUSH4 0x839DA792 EQ PUSH2 0xCA JUMPI DUP1 PUSH4 0xB4688DC8 EQ PUSH2 0xE6 JUMPI DUP1 PUSH4 0xF887EA40 EQ PUSH2 0x102 JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x74 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x6F SWAP2 SWAP1 PUSH2 0xD27 JUMP JUMPDEST PUSH2 0x12D JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x82 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x8B PUSH2 0x2D1 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x98 SWAP2 SWAP1 PUSH2 0xD9D JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0xAD JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0xC8 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0xC3 SWAP2 SWAP1 PUSH2 0xDB8 JUMP JUMPDEST PUSH2 0x2F7 JUMP JUMPDEST STOP JUMPDEST PUSH2 0xE4 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0xDF SWAP2 SWAP1 PUSH2 0xE1F JUMP JUMPDEST PUSH2 0x50C JUMP JUMPDEST STOP JUMPDEST PUSH2 0x100 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0xFB SWAP2 SWAP1 PUSH2 0xE1F JUMP JUMPDEST PUSH2 0x633 JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x10E JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x117 PUSH2 0x7EF JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x124 SWAP2 SWAP1 PUSH2 0xD9D JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x15A CALLER ADDRESS DUP6 DUP8 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x813 SWAP1 SWAP4 SWAP3 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH2 0x1A5 PUSH1 0x0 DUP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP5 DUP7 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x89C SWAP1 SWAP3 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH2 0x1D2 CALLER ADDRESS DUP4 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x813 SWAP1 SWAP4 SWAP3 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH2 0x21D PUSH1 0x0 DUP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x89C SWAP1 SWAP3 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH1 0x0 DUP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0xE8E33700 DUP6 DUP5 DUP7 DUP6 PUSH1 0x0 DUP1 CALLER TIMESTAMP PUSH1 0x40 MLOAD DUP10 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x285 SWAP9 SWAP8 SWAP7 SWAP6 SWAP5 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0xEB3 JUMP JUMPDEST PUSH1 0x60 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 GAS CALL ISZERO DUP1 ISZERO PUSH2 0x2A4 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x2C8 SWAP2 SWAP1 PUSH2 0xF46 JUMP JUMPDEST POP POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x2 PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x314 JUMPI PUSH2 0x313 PUSH2 0xF99 JUMP JUMPDEST JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP1 DUP3 MSTORE DUP1 PUSH1 0x20 MUL PUSH1 0x20 ADD DUP3 ADD PUSH1 0x40 MSTORE DUP1 ISZERO PUSH2 0x342 JUMPI DUP2 PUSH1 0x20 ADD PUSH1 0x20 DUP3 MUL DUP1 CALLDATASIZE DUP4 CALLDATACOPY DUP1 DUP3 ADD SWAP2 POP POP SWAP1 POP JUMPDEST POP SWAP1 POP DUP5 DUP2 PUSH1 0x0 DUP2 MLOAD DUP2 LT PUSH2 0x35A JUMPI PUSH2 0x359 PUSH2 0xFC8 JUMP JUMPDEST JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD SWAP1 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE POP POP DUP4 DUP2 PUSH1 0x1 DUP2 MLOAD DUP2 LT PUSH2 0x3A9 JUMPI PUSH2 0x3A8 PUSH2 0xFC8 JUMP JUMPDEST JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD SWAP1 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE POP POP PUSH2 0x410 CALLER ADDRESS DUP6 DUP9 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x813 SWAP1 SWAP4 SWAP3 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH2 0x45B PUSH1 0x0 DUP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP5 DUP8 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x89C SWAP1 SWAP3 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH1 0x0 DUP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x38ED1739 DUP5 DUP5 DUP5 CALLER TIMESTAMP PUSH1 0x40 MLOAD DUP7 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x4BC SWAP6 SWAP5 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x10B5 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 GAS CALL ISZERO DUP1 ISZERO PUSH2 0x4DB JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x0 DUP3 RETURNDATACOPY RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x504 SWAP2 SWAP1 PUSH2 0x1239 JUMP JUMPDEST POP POP POP POP POP POP JUMP JUMPDEST PUSH2 0x539 CALLER ADDRESS DUP4 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x813 SWAP1 SWAP4 SWAP3 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH2 0x584 PUSH1 0x0 DUP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x89C SWAP1 SWAP3 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH1 0x0 DUP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0xF305D719 CALLVALUE DUP5 DUP5 PUSH1 0x0 DUP1 CALLER TIMESTAMP PUSH1 0x40 MLOAD DUP9 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x5E9 SWAP7 SWAP6 SWAP5 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x1282 JUMP JUMPDEST PUSH1 0x60 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP6 DUP9 GAS CALL ISZERO DUP1 ISZERO PUSH2 0x607 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x62C SWAP2 SWAP1 PUSH2 0xF46 JUMP JUMPDEST POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x2 PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x650 JUMPI PUSH2 0x64F PUSH2 0xF99 JUMP JUMPDEST JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP1 DUP3 MSTORE DUP1 PUSH1 0x20 MUL PUSH1 0x20 ADD DUP3 ADD PUSH1 0x40 MSTORE DUP1 ISZERO PUSH2 0x67E JUMPI DUP2 PUSH1 0x20 ADD PUSH1 0x20 DUP3 MUL DUP1 CALLDATASIZE DUP4 CALLDATACOPY DUP1 DUP3 ADD SWAP2 POP POP SWAP1 POP JUMPDEST POP SWAP1 POP PUSH1 0x1 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH1 0x0 DUP2 MLOAD DUP2 LT PUSH2 0x6B8 JUMPI PUSH2 0x6B7 PUSH2 0xFC8 JUMP JUMPDEST JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD SWAP1 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE POP POP DUP3 DUP2 PUSH1 0x1 DUP2 MLOAD DUP2 LT PUSH2 0x707 JUMPI PUSH2 0x706 PUSH2 0xFC8 JUMP JUMPDEST JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD SWAP1 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE POP POP PUSH1 0x0 DUP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x7FF36AB5 CALLVALUE DUP5 DUP5 CALLER TIMESTAMP PUSH1 0x40 MLOAD DUP7 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x7A1 SWAP5 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x12E3 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP6 DUP9 GAS CALL ISZERO DUP1 ISZERO PUSH2 0x7BF JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x0 DUP3 RETURNDATACOPY RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x7E9 SWAP2 SWAP1 PUSH2 0x1239 JUMP JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 JUMP JUMPDEST PUSH2 0x896 DUP5 PUSH4 0x23B872DD PUSH1 0xE0 SHL DUP6 DUP6 DUP6 PUSH1 0x40 MLOAD PUSH1 0x24 ADD PUSH2 0x834 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x132F JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE SWAP1 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND PUSH1 0x20 DUP3 ADD DUP1 MLOAD PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP4 DUP2 DUP4 AND OR DUP4 MSTORE POP POP POP POP PUSH2 0x9EB JUMP JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 EQ DUP1 PUSH2 0x926 JUMPI POP PUSH1 0x0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0xDD62ED3E ADDRESS DUP6 PUSH1 0x40 MLOAD DUP4 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x8E3 SWAP3 SWAP2 SWAP1 PUSH2 0x1366 JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x900 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x924 SWAP2 SWAP1 PUSH2 0x138F JUMP JUMPDEST EQ JUMPDEST PUSH2 0x965 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x95C SWAP1 PUSH2 0x143F JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x9E6 DUP4 PUSH4 0x95EA7B3 PUSH1 0xE0 SHL DUP5 DUP5 PUSH1 0x40 MLOAD PUSH1 0x24 ADD PUSH2 0x984 SWAP3 SWAP2 SWAP1 PUSH2 0x145F JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE SWAP1 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND PUSH1 0x20 DUP3 ADD DUP1 MLOAD PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP4 DUP2 DUP4 AND OR DUP4 MSTORE POP POP POP POP PUSH2 0x9EB JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0xA4D DUP3 PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x20 DUP2 MSTORE PUSH1 0x20 ADD PUSH32 0x5361666545524332303A206C6F772D6C6576656C2063616C6C206661696C6564 DUP2 MSTORE POP DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0xAB2 SWAP1 SWAP3 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST SWAP1 POP PUSH1 0x0 DUP2 MLOAD GT ISZERO PUSH2 0xAAD JUMPI DUP1 DUP1 PUSH1 0x20 ADD SWAP1 MLOAD DUP2 ADD SWAP1 PUSH2 0xA6D SWAP2 SWAP1 PUSH2 0x14C0 JUMP JUMPDEST PUSH2 0xAAC JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xAA3 SWAP1 PUSH2 0x155F JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST JUMPDEST POP POP POP JUMP JUMPDEST PUSH1 0x60 PUSH2 0xAC1 DUP5 DUP5 PUSH1 0x0 DUP6 PUSH2 0xACA JUMP JUMPDEST SWAP1 POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x60 DUP3 SELFBALANCE LT ISZERO PUSH2 0xB0F JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xB06 SWAP1 PUSH2 0x15F1 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 DUP1 DUP7 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP6 DUP8 PUSH1 0x40 MLOAD PUSH2 0xB38 SWAP2 SWAP1 PUSH2 0x1682 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP6 DUP8 GAS CALL SWAP3 POP POP POP RETURNDATASIZE DUP1 PUSH1 0x0 DUP2 EQ PUSH2 0xB75 JUMPI PUSH1 0x40 MLOAD SWAP2 POP PUSH1 0x1F NOT PUSH1 0x3F RETURNDATASIZE ADD AND DUP3 ADD PUSH1 0x40 MSTORE RETURNDATASIZE DUP3 MSTORE RETURNDATASIZE PUSH1 0x0 PUSH1 0x20 DUP5 ADD RETURNDATACOPY PUSH2 0xB7A JUMP JUMPDEST PUSH1 0x60 SWAP2 POP JUMPDEST POP SWAP2 POP SWAP2 POP PUSH2 0xB8B DUP8 DUP4 DUP4 DUP8 PUSH2 0xB97 JUMP JUMPDEST SWAP3 POP POP POP SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH1 0x60 DUP4 ISZERO PUSH2 0xBF9 JUMPI PUSH1 0x0 DUP4 MLOAD SUB PUSH2 0xBF1 JUMPI PUSH2 0xBB1 DUP6 PUSH2 0xC0C JUMP JUMPDEST PUSH2 0xBF0 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xBE7 SWAP1 PUSH2 0x16E5 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST JUMPDEST DUP3 SWAP1 POP PUSH2 0xC04 JUMP JUMPDEST PUSH2 0xC03 DUP4 DUP4 PUSH2 0xC2F JUMP JUMPDEST JUMPDEST SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EXTCODESIZE GT SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP3 MLOAD GT ISZERO PUSH2 0xC42 JUMPI DUP2 MLOAD DUP1 DUP4 PUSH1 0x20 ADD REVERT JUMPDEST DUP1 PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xC76 SWAP2 SWAP1 PUSH2 0x1749 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 PUSH1 0x40 MLOAD SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0xCBE DUP3 PUSH2 0xC93 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0xCCE DUP2 PUSH2 0xCB3 JUMP JUMPDEST DUP2 EQ PUSH2 0xCD9 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0xCEB DUP2 PUSH2 0xCC5 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0xD04 DUP2 PUSH2 0xCF1 JUMP JUMPDEST DUP2 EQ PUSH2 0xD0F JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0xD21 DUP2 PUSH2 0xCFB JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x80 DUP6 DUP8 SUB SLT ISZERO PUSH2 0xD41 JUMPI PUSH2 0xD40 PUSH2 0xC89 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0xD4F DUP8 DUP3 DUP9 ADD PUSH2 0xCDC JUMP JUMPDEST SWAP5 POP POP PUSH1 0x20 PUSH2 0xD60 DUP8 DUP3 DUP9 ADD PUSH2 0xD12 JUMP JUMPDEST SWAP4 POP POP PUSH1 0x40 PUSH2 0xD71 DUP8 DUP3 DUP9 ADD PUSH2 0xCDC JUMP JUMPDEST SWAP3 POP POP PUSH1 0x60 PUSH2 0xD82 DUP8 DUP3 DUP9 ADD PUSH2 0xD12 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP6 SWAP2 SWAP5 POP SWAP3 POP JUMP JUMPDEST PUSH2 0xD97 DUP2 PUSH2 0xCB3 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0xDB2 PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0xD8E JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x80 DUP6 DUP8 SUB SLT ISZERO PUSH2 0xDD2 JUMPI PUSH2 0xDD1 PUSH2 0xC89 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0xDE0 DUP8 DUP3 DUP9 ADD PUSH2 0xCDC JUMP JUMPDEST SWAP5 POP POP PUSH1 0x20 PUSH2 0xDF1 DUP8 DUP3 DUP9 ADD PUSH2 0xCDC JUMP JUMPDEST SWAP4 POP POP PUSH1 0x40 PUSH2 0xE02 DUP8 DUP3 DUP9 ADD PUSH2 0xD12 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x60 PUSH2 0xE13 DUP8 DUP3 DUP9 ADD PUSH2 0xD12 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP6 SWAP2 SWAP5 POP SWAP3 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0xE36 JUMPI PUSH2 0xE35 PUSH2 0xC89 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0xE44 DUP6 DUP3 DUP7 ADD PUSH2 0xCDC JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0xE55 DUP6 DUP3 DUP7 ADD PUSH2 0xD12 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH2 0xE68 DUP2 PUSH2 0xCF1 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0xE9D PUSH2 0xE98 PUSH2 0xE93 DUP5 PUSH2 0xE6E JUMP JUMPDEST PUSH2 0xE78 JUMP JUMPDEST PUSH2 0xCF1 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0xEAD DUP2 PUSH2 0xE82 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x100 DUP3 ADD SWAP1 POP PUSH2 0xEC9 PUSH1 0x0 DUP4 ADD DUP12 PUSH2 0xD8E JUMP JUMPDEST PUSH2 0xED6 PUSH1 0x20 DUP4 ADD DUP11 PUSH2 0xD8E JUMP JUMPDEST PUSH2 0xEE3 PUSH1 0x40 DUP4 ADD DUP10 PUSH2 0xE5F JUMP JUMPDEST PUSH2 0xEF0 PUSH1 0x60 DUP4 ADD DUP9 PUSH2 0xE5F JUMP JUMPDEST PUSH2 0xEFD PUSH1 0x80 DUP4 ADD DUP8 PUSH2 0xEA4 JUMP JUMPDEST PUSH2 0xF0A PUSH1 0xA0 DUP4 ADD DUP7 PUSH2 0xEA4 JUMP JUMPDEST PUSH2 0xF17 PUSH1 0xC0 DUP4 ADD DUP6 PUSH2 0xD8E JUMP JUMPDEST PUSH2 0xF24 PUSH1 0xE0 DUP4 ADD DUP5 PUSH2 0xE5F JUMP JUMPDEST SWAP10 SWAP9 POP POP POP POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP PUSH2 0xF40 DUP2 PUSH2 0xCFB JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0x60 DUP5 DUP7 SUB SLT ISZERO PUSH2 0xF5F JUMPI PUSH2 0xF5E PUSH2 0xC89 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0xF6D DUP7 DUP3 DUP8 ADD PUSH2 0xF31 JUMP JUMPDEST SWAP4 POP POP PUSH1 0x20 PUSH2 0xF7E DUP7 DUP3 DUP8 ADD PUSH2 0xF31 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x40 PUSH2 0xF8F DUP7 DUP3 DUP8 ADD PUSH2 0xF31 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 POP SWAP3 JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x32 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x102C DUP2 PUSH2 0xCB3 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x103E DUP4 DUP4 PUSH2 0x1023 JUMP JUMPDEST PUSH1 0x20 DUP4 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1062 DUP3 PUSH2 0xFF7 JUMP JUMPDEST PUSH2 0x106C DUP2 DUP6 PUSH2 0x1002 JUMP JUMPDEST SWAP4 POP PUSH2 0x1077 DUP4 PUSH2 0x1013 JUMP JUMPDEST DUP1 PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x10A8 JUMPI DUP2 MLOAD PUSH2 0x108F DUP9 DUP3 PUSH2 0x1032 JUMP JUMPDEST SWAP8 POP PUSH2 0x109A DUP4 PUSH2 0x104A JUMP JUMPDEST SWAP3 POP POP PUSH1 0x1 DUP2 ADD SWAP1 POP PUSH2 0x107B JUMP JUMPDEST POP DUP6 SWAP4 POP POP POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0xA0 DUP3 ADD SWAP1 POP PUSH2 0x10CA PUSH1 0x0 DUP4 ADD DUP9 PUSH2 0xE5F JUMP JUMPDEST PUSH2 0x10D7 PUSH1 0x20 DUP4 ADD DUP8 PUSH2 0xE5F JUMP JUMPDEST DUP2 DUP2 SUB PUSH1 0x40 DUP4 ADD MSTORE PUSH2 0x10E9 DUP2 DUP7 PUSH2 0x1057 JUMP JUMPDEST SWAP1 POP PUSH2 0x10F8 PUSH1 0x60 DUP4 ADD DUP6 PUSH2 0xD8E JUMP JUMPDEST PUSH2 0x1105 PUSH1 0x80 DUP4 ADD DUP5 PUSH2 0xE5F JUMP JUMPDEST SWAP7 SWAP6 POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH1 0x1F NOT PUSH1 0x1F DUP4 ADD AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x112E DUP3 PUSH2 0x1114 JUMP JUMPDEST DUP2 ADD DUP2 DUP2 LT PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT OR ISZERO PUSH2 0x114D JUMPI PUSH2 0x114C PUSH2 0xF99 JUMP JUMPDEST JUMPDEST DUP1 PUSH1 0x40 MSTORE POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1160 PUSH2 0xC7F JUMP JUMPDEST SWAP1 POP PUSH2 0x116C DUP3 DUP3 PUSH2 0x1125 JUMP JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT ISZERO PUSH2 0x118C JUMPI PUSH2 0x118B PUSH2 0xF99 JUMP JUMPDEST JUMPDEST PUSH1 0x20 DUP3 MUL SWAP1 POP PUSH1 0x20 DUP2 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH2 0x11B5 PUSH2 0x11B0 DUP5 PUSH2 0x1171 JUMP JUMPDEST PUSH2 0x1156 JUMP JUMPDEST SWAP1 POP DUP1 DUP4 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH1 0x20 DUP5 MUL DUP4 ADD DUP6 DUP2 GT ISZERO PUSH2 0x11D8 JUMPI PUSH2 0x11D7 PUSH2 0x119D JUMP JUMPDEST JUMPDEST DUP4 JUMPDEST DUP2 DUP2 LT ISZERO PUSH2 0x1201 JUMPI DUP1 PUSH2 0x11ED DUP9 DUP3 PUSH2 0xF31 JUMP JUMPDEST DUP5 MSTORE PUSH1 0x20 DUP5 ADD SWAP4 POP POP PUSH1 0x20 DUP2 ADD SWAP1 POP PUSH2 0x11DA JUMP JUMPDEST POP POP POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 PUSH1 0x1F DUP4 ADD SLT PUSH2 0x1220 JUMPI PUSH2 0x121F PUSH2 0x110F JUMP JUMPDEST JUMPDEST DUP2 MLOAD PUSH2 0x1230 DUP5 DUP3 PUSH1 0x20 DUP7 ADD PUSH2 0x11A2 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x124F JUMPI PUSH2 0x124E PUSH2 0xC89 JUMP JUMPDEST JUMPDEST PUSH1 0x0 DUP3 ADD MLOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x126D JUMPI PUSH2 0x126C PUSH2 0xC8E JUMP JUMPDEST JUMPDEST PUSH2 0x1279 DUP5 DUP3 DUP6 ADD PUSH2 0x120B JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0xC0 DUP3 ADD SWAP1 POP PUSH2 0x1297 PUSH1 0x0 DUP4 ADD DUP10 PUSH2 0xD8E JUMP JUMPDEST PUSH2 0x12A4 PUSH1 0x20 DUP4 ADD DUP9 PUSH2 0xE5F JUMP JUMPDEST PUSH2 0x12B1 PUSH1 0x40 DUP4 ADD DUP8 PUSH2 0xEA4 JUMP JUMPDEST PUSH2 0x12BE PUSH1 0x60 DUP4 ADD DUP7 PUSH2 0xEA4 JUMP JUMPDEST PUSH2 0x12CB PUSH1 0x80 DUP4 ADD DUP6 PUSH2 0xD8E JUMP JUMPDEST PUSH2 0x12D8 PUSH1 0xA0 DUP4 ADD DUP5 PUSH2 0xE5F JUMP JUMPDEST SWAP8 SWAP7 POP POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x80 DUP3 ADD SWAP1 POP PUSH2 0x12F8 PUSH1 0x0 DUP4 ADD DUP8 PUSH2 0xE5F JUMP JUMPDEST DUP2 DUP2 SUB PUSH1 0x20 DUP4 ADD MSTORE PUSH2 0x130A DUP2 DUP7 PUSH2 0x1057 JUMP JUMPDEST SWAP1 POP PUSH2 0x1319 PUSH1 0x40 DUP4 ADD DUP6 PUSH2 0xD8E JUMP JUMPDEST PUSH2 0x1326 PUSH1 0x60 DUP4 ADD DUP5 PUSH2 0xE5F JUMP JUMPDEST SWAP6 SWAP5 POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x60 DUP3 ADD SWAP1 POP PUSH2 0x1344 PUSH1 0x0 DUP4 ADD DUP7 PUSH2 0xD8E JUMP JUMPDEST PUSH2 0x1351 PUSH1 0x20 DUP4 ADD DUP6 PUSH2 0xD8E JUMP JUMPDEST PUSH2 0x135E PUSH1 0x40 DUP4 ADD DUP5 PUSH2 0xE5F JUMP JUMPDEST SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 DUP3 ADD SWAP1 POP PUSH2 0x137B PUSH1 0x0 DUP4 ADD DUP6 PUSH2 0xD8E JUMP JUMPDEST PUSH2 0x1388 PUSH1 0x20 DUP4 ADD DUP5 PUSH2 0xD8E JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x13A5 JUMPI PUSH2 0x13A4 PUSH2 0xC89 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x13B3 DUP5 DUP3 DUP6 ADD PUSH2 0xF31 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x5361666545524332303A20617070726F76652066726F6D206E6F6E2D7A65726F PUSH1 0x0 DUP3 ADD MSTORE PUSH32 0x20746F206E6F6E2D7A65726F20616C6C6F77616E636500000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1429 PUSH1 0x36 DUP4 PUSH2 0x13BC JUMP JUMPDEST SWAP2 POP PUSH2 0x1434 DUP3 PUSH2 0x13CD JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x1458 DUP2 PUSH2 0x141C JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 DUP3 ADD SWAP1 POP PUSH2 0x1474 PUSH1 0x0 DUP4 ADD DUP6 PUSH2 0xD8E JUMP JUMPDEST PUSH2 0x1481 PUSH1 0x20 DUP4 ADD DUP5 PUSH2 0xE5F JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 ISZERO ISZERO SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x149D DUP2 PUSH2 0x1488 JUMP JUMPDEST DUP2 EQ PUSH2 0x14A8 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP PUSH2 0x14BA DUP2 PUSH2 0x1494 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x14D6 JUMPI PUSH2 0x14D5 PUSH2 0xC89 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x14E4 DUP5 DUP3 DUP6 ADD PUSH2 0x14AB JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x5361666545524332303A204552433230206F7065726174696F6E20646964206E PUSH1 0x0 DUP3 ADD MSTORE PUSH32 0x6F74207375636365656400000000000000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1549 PUSH1 0x2A DUP4 PUSH2 0x13BC JUMP JUMPDEST SWAP2 POP PUSH2 0x1554 DUP3 PUSH2 0x14ED JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x1578 DUP2 PUSH2 0x153C JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x416464726573733A20696E73756666696369656E742062616C616E636520666F PUSH1 0x0 DUP3 ADD MSTORE PUSH32 0x722063616C6C0000000000000000000000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x15DB PUSH1 0x26 DUP4 PUSH2 0x13BC JUMP JUMPDEST SWAP2 POP PUSH2 0x15E6 DUP3 PUSH2 0x157F JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x160A DUP2 PUSH2 0x15CE JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x1645 JUMPI DUP1 DUP3 ADD MLOAD DUP2 DUP5 ADD MSTORE PUSH1 0x20 DUP2 ADD SWAP1 POP PUSH2 0x162A JUMP JUMPDEST PUSH1 0x0 DUP5 DUP5 ADD MSTORE POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x165C DUP3 PUSH2 0x1611 JUMP JUMPDEST PUSH2 0x1666 DUP2 DUP6 PUSH2 0x161C JUMP JUMPDEST SWAP4 POP PUSH2 0x1676 DUP2 DUP6 PUSH1 0x20 DUP7 ADD PUSH2 0x1627 JUMP JUMPDEST DUP1 DUP5 ADD SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x168E DUP3 DUP5 PUSH2 0x1651 JUMP JUMPDEST SWAP2 POP DUP2 SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x416464726573733A2063616C6C20746F206E6F6E2D636F6E7472616374000000 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x16CF PUSH1 0x1D DUP4 PUSH2 0x13BC JUMP JUMPDEST SWAP2 POP PUSH2 0x16DA DUP3 PUSH2 0x1699 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x16FE DUP2 PUSH2 0x16C2 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x171B DUP3 PUSH2 0x1705 JUMP JUMPDEST PUSH2 0x1725 DUP2 DUP6 PUSH2 0x13BC JUMP JUMPDEST SWAP4 POP PUSH2 0x1735 DUP2 DUP6 PUSH1 0x20 DUP7 ADD PUSH2 0x1627 JUMP JUMPDEST PUSH2 0x173E DUP2 PUSH2 0x1114 JUMP JUMPDEST DUP5 ADD SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x1763 DUP2 DUP5 PUSH2 0x1710 JUMP JUMPDEST SWAP1 POP SWAP3 SWAP2 POP POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 PC 0xD0 CREATE2 0xD 0xC3 0xD SELFBALANCE SMOD TIMESTAMP 0x5D 0xAC ORIGIN 0xD3 0xC3 0xE1 0xCA PUSH5 0x397EDFA86B NOT PUSH2 0x4D73 0xB7 SDIV LOG1 0xA8 0xC5 EXTCODEHASH PUSH5 0x736F6C6343 STOP ADDMOD GT STOP CALLER ",
							"sourceMap": "235:2122:4:-:0;;;350:99;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;413:7;404:6;;:16;;;;;;;;;;;;;;;;;;437:5;430:4;;:12;;;;;;;;;;;;;;;;;;350:99;;235:2122;;88:117:6;197:1;194;187:12;334:126;371:7;411:42;404:5;400:54;389:65;;334:126;;;:::o;466:96::-;503:7;532:24;550:5;532:24;:::i;:::-;521:35;;466:96;;;:::o;568:122::-;641:24;659:5;641:24;:::i;:::-;634:5;631:35;621:63;;680:1;677;670:12;621:63;568:122;:::o;696:143::-;753:5;784:6;778:13;769:22;;800:33;827:5;800:33;:::i;:::-;696:143;;;;:::o;845:507::-;924:6;932;981:2;969:9;960:7;956:23;952:32;949:119;;;987:79;;:::i;:::-;949:119;1107:1;1132:64;1188:7;1179:6;1168:9;1164:22;1132:64;:::i;:::-;1122:74;;1078:128;1245:2;1271:64;1327:7;1318:6;1307:9;1303:22;1271:64;:::i;:::-;1261:74;;1216:129;845:507;;;;;:::o;235:2122:4:-;;;;;;;"
						},
						"deployedBytecode": {
							"functionDebugData": {
								"@AddLiquidityETH_799": {
									"entryPoint": 1292,
									"id": 799,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"@AddLiquidity_869": {
									"entryPoint": 301,
									"id": 869,
									"parameterSlots": 4,
									"returnSlots": 0
								},
								"@_callOptionalReturn_393": {
									"entryPoint": 2539,
									"id": 393,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"@_revert_723": {
									"entryPoint": 3119,
									"id": 723,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"@buyTokenWithETH_915": {
									"entryPoint": 1587,
									"id": 915,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"@buyToken_984": {
									"entryPoint": 759,
									"id": 984,
									"parameterSlots": 4,
									"returnSlots": 0
								},
								"@functionCallWithValue_548": {
									"entryPoint": 2762,
									"id": 548,
									"parameterSlots": 4,
									"returnSlots": 1
								},
								"@functionCall_484": {
									"entryPoint": 2738,
									"id": 484,
									"parameterSlots": 3,
									"returnSlots": 1
								},
								"@isContract_412": {
									"entryPoint": 3084,
									"id": 412,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"@router_735": {
									"entryPoint": 2031,
									"id": 735,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@safeApprove_215": {
									"entryPoint": 2204,
									"id": 215,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"@safeTransferFrom_171": {
									"entryPoint": 2067,
									"id": 171,
									"parameterSlots": 4,
									"returnSlots": 0
								},
								"@verifyCallResultFromTarget_679": {
									"entryPoint": 2967,
									"id": 679,
									"parameterSlots": 4,
									"returnSlots": 1
								},
								"@weth_737": {
									"entryPoint": 721,
									"id": 737,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"abi_decode_available_length_t_array$_t_uint256_$dyn_memory_ptr_fromMemory": {
									"entryPoint": 4514,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 1
								},
								"abi_decode_t_address": {
									"entryPoint": 3292,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_t_array$_t_uint256_$dyn_memory_ptr_fromMemory": {
									"entryPoint": 4619,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_t_bool_fromMemory": {
									"entryPoint": 5291,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_t_uint256": {
									"entryPoint": 3346,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_t_uint256_fromMemory": {
									"entryPoint": 3889,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_addresst_addresst_uint256t_uint256": {
									"entryPoint": 3512,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 4
								},
								"abi_decode_tuple_t_addresst_uint256": {
									"entryPoint": 3615,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 2
								},
								"abi_decode_tuple_t_addresst_uint256t_addresst_uint256": {
									"entryPoint": 3367,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 4
								},
								"abi_decode_tuple_t_array$_t_uint256_$dyn_memory_ptr_fromMemory": {
									"entryPoint": 4665,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_bool_fromMemory": {
									"entryPoint": 5312,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_uint256_fromMemory": {
									"entryPoint": 5007,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_uint256t_uint256t_uint256_fromMemory": {
									"entryPoint": 3910,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 3
								},
								"abi_encodeUpdatedPos_t_address_to_t_address": {
									"entryPoint": 4146,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_t_address_to_t_address": {
									"entryPoint": 4131,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_t_address_to_t_address_fromStack": {
									"entryPoint": 3470,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_t_array$_t_address_$dyn_memory_ptr_to_t_array$_t_address_$dyn_memory_ptr_fromStack": {
									"entryPoint": 4183,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_t_bytes_memory_ptr_to_t_bytes_memory_ptr_nonPadded_inplace_fromStack": {
									"entryPoint": 5713,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_t_rational_0_by_1_to_t_uint256_fromStack": {
									"entryPoint": 3748,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 5904,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_t_stringliteral_565f1a77334fc4792800921178c71e4521acffab18ff9e7885b49377ee80ab4c_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 5582,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_t_stringliteral_cc2e4e38850b7c0a3e942cfed89b71c77302df25bcb2ec297a0c4ff9ff6b90ad_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 5826,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_t_stringliteral_e11ad79d1e4a7f2e5f376964cb99e8e8f7904e3fc16a109f7a7ecb9aa7956dcd_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 5436,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_t_stringliteral_ef945ddb1bfdc0da870feb4560d868b047642b4ac7f2fb7f8b7c51cb4a411e25_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 5148,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_t_uint256_to_t_uint256_fromStack": {
									"entryPoint": 3679,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_tuple_packed_t_bytes_memory_ptr__to_t_bytes_memory_ptr__nonPadded_inplace_fromStack_reversed": {
									"entryPoint": 5762,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_address__to_t_address__fromStack_reversed": {
									"entryPoint": 3485,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_address_t_address__to_t_address_t_address__fromStack_reversed": {
									"entryPoint": 4966,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_address_t_address_t_uint256__to_t_address_t_address_t_uint256__fromStack_reversed": {
									"entryPoint": 4911,
									"id": null,
									"parameterSlots": 4,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_address_t_address_t_uint256_t_uint256_t_rational_0_by_1_t_rational_0_by_1_t_address_t_uint256__to_t_address_t_address_t_uint256_t_uint256_t_uint256_t_uint256_t_address_t_uint256__fromStack_reversed": {
									"entryPoint": 3763,
									"id": null,
									"parameterSlots": 9,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_address_t_uint256__to_t_address_t_uint256__fromStack_reversed": {
									"entryPoint": 5215,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_address_t_uint256_t_rational_0_by_1_t_rational_0_by_1_t_address_t_uint256__to_t_address_t_uint256_t_uint256_t_uint256_t_address_t_uint256__fromStack_reversed": {
									"entryPoint": 4738,
									"id": null,
									"parameterSlots": 7,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 5961,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_565f1a77334fc4792800921178c71e4521acffab18ff9e7885b49377ee80ab4c__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 5617,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_cc2e4e38850b7c0a3e942cfed89b71c77302df25bcb2ec297a0c4ff9ff6b90ad__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 5861,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_e11ad79d1e4a7f2e5f376964cb99e8e8f7904e3fc16a109f7a7ecb9aa7956dcd__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 5471,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_ef945ddb1bfdc0da870feb4560d868b047642b4ac7f2fb7f8b7c51cb4a411e25__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 5183,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_uint256_t_array$_t_address_$dyn_memory_ptr_t_address_t_uint256__to_t_uint256_t_array$_t_address_$dyn_memory_ptr_t_address_t_uint256__fromStack_reversed": {
									"entryPoint": 4835,
									"id": null,
									"parameterSlots": 5,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_uint256_t_uint256_t_array$_t_address_$dyn_memory_ptr_t_address_t_uint256__to_t_uint256_t_uint256_t_array$_t_address_$dyn_memory_ptr_t_address_t_uint256__fromStack_reversed": {
									"entryPoint": 4277,
									"id": null,
									"parameterSlots": 6,
									"returnSlots": 1
								},
								"allocate_memory": {
									"entryPoint": 4438,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"allocate_unbounded": {
									"entryPoint": 3199,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"array_allocation_size_t_array$_t_uint256_$dyn_memory_ptr": {
									"entryPoint": 4465,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"array_dataslot_t_array$_t_address_$dyn_memory_ptr": {
									"entryPoint": 4115,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"array_length_t_array$_t_address_$dyn_memory_ptr": {
									"entryPoint": 4087,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"array_length_t_bytes_memory_ptr": {
									"entryPoint": 5649,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"array_length_t_string_memory_ptr": {
									"entryPoint": 5893,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"array_nextElement_t_array$_t_address_$dyn_memory_ptr": {
									"entryPoint": 4170,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"array_storeLengthForEncoding_t_array$_t_address_$dyn_memory_ptr_fromStack": {
									"entryPoint": 4098,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"array_storeLengthForEncoding_t_bytes_memory_ptr_nonPadded_inplace_fromStack": {
									"entryPoint": 5660,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"array_storeLengthForEncoding_t_string_memory_ptr_fromStack": {
									"entryPoint": 5052,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"cleanup_t_address": {
									"entryPoint": 3251,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_bool": {
									"entryPoint": 5256,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_rational_0_by_1": {
									"entryPoint": 3694,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_uint160": {
									"entryPoint": 3219,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_uint256": {
									"entryPoint": 3313,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"convert_t_rational_0_by_1_to_t_uint256": {
									"entryPoint": 3714,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"copy_memory_to_memory_with_cleanup": {
									"entryPoint": 5671,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"finalize_allocation": {
									"entryPoint": 4389,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"identity": {
									"entryPoint": 3704,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"panic_error_0x32": {
									"entryPoint": 4040,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"panic_error_0x41": {
									"entryPoint": 3993,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d": {
									"entryPoint": 4367,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"revert_error_81385d8c0b31fffe14be1da910c8bd3a80be4cfa248e04f42ec0faea3132a8ef": {
									"entryPoint": 4509,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db": {
									"entryPoint": 3214,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b": {
									"entryPoint": 3209,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"round_up_to_mul_of_32": {
									"entryPoint": 4372,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"store_literal_in_memory_565f1a77334fc4792800921178c71e4521acffab18ff9e7885b49377ee80ab4c": {
									"entryPoint": 5503,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"store_literal_in_memory_cc2e4e38850b7c0a3e942cfed89b71c77302df25bcb2ec297a0c4ff9ff6b90ad": {
									"entryPoint": 5785,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"store_literal_in_memory_e11ad79d1e4a7f2e5f376964cb99e8e8f7904e3fc16a109f7a7ecb9aa7956dcd": {
									"entryPoint": 5357,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"store_literal_in_memory_ef945ddb1bfdc0da870feb4560d868b047642b4ac7f2fb7f8b7c51cb4a411e25": {
									"entryPoint": 5069,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"validator_revert_t_address": {
									"entryPoint": 3269,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"validator_revert_t_bool": {
									"entryPoint": 5268,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"validator_revert_t_uint256": {
									"entryPoint": 3323,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								}
							},
							"generatedSources": [
								{
									"ast": {
										"nodeType": "YulBlock",
										"src": "0:21624:6",
										"statements": [
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "47:35:6",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "57:19:6",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "73:2:6",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "67:5:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "67:9:6"
															},
															"variableNames": [
																{
																	"name": "memPtr",
																	"nodeType": "YulIdentifier",
																	"src": "57:6:6"
																}
															]
														}
													]
												},
												"name": "allocate_unbounded",
												"nodeType": "YulFunctionDefinition",
												"returnVariables": [
													{
														"name": "memPtr",
														"nodeType": "YulTypedName",
														"src": "40:6:6",
														"type": ""
													}
												],
												"src": "7:75:6"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "177:28:6",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "194:1:6",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "197:1:6",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "187:6:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "187:12:6"
															},
															"nodeType": "YulExpressionStatement",
															"src": "187:12:6"
														}
													]
												},
												"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
												"nodeType": "YulFunctionDefinition",
												"src": "88:117:6"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "300:28:6",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "317:1:6",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "320:1:6",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "310:6:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "310:12:6"
															},
															"nodeType": "YulExpressionStatement",
															"src": "310:12:6"
														}
													]
												},
												"name": "revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db",
												"nodeType": "YulFunctionDefinition",
												"src": "211:117:6"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "379:81:6",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "389:65:6",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "404:5:6"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "411:42:6",
																		"type": "",
																		"value": "0xffffffffffffffffffffffffffffffffffffffff"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nodeType": "YulIdentifier",
																	"src": "400:3:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "400:54:6"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nodeType": "YulIdentifier",
																	"src": "389:7:6"
																}
															]
														}
													]
												},
												"name": "cleanup_t_uint160",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "361:5:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nodeType": "YulTypedName",
														"src": "371:7:6",
														"type": ""
													}
												],
												"src": "334:126:6"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "511:51:6",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "521:35:6",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "550:5:6"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint160",
																	"nodeType": "YulIdentifier",
																	"src": "532:17:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "532:24:6"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nodeType": "YulIdentifier",
																	"src": "521:7:6"
																}
															]
														}
													]
												},
												"name": "cleanup_t_address",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "493:5:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nodeType": "YulTypedName",
														"src": "503:7:6",
														"type": ""
													}
												],
												"src": "466:96:6"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "611:79:6",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "668:16:6",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "677:1:6",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "680:1:6",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "670:6:6"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "670:12:6"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "670:12:6"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "634:5:6"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nodeType": "YulIdentifier",
																						"src": "659:5:6"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_address",
																					"nodeType": "YulIdentifier",
																					"src": "641:17:6"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "641:24:6"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nodeType": "YulIdentifier",
																			"src": "631:2:6"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "631:35:6"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "624:6:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "624:43:6"
															},
															"nodeType": "YulIf",
															"src": "621:63:6"
														}
													]
												},
												"name": "validator_revert_t_address",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "604:5:6",
														"type": ""
													}
												],
												"src": "568:122:6"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "748:87:6",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "758:29:6",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nodeType": "YulIdentifier",
																		"src": "780:6:6"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "767:12:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "767:20:6"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nodeType": "YulIdentifier",
																	"src": "758:5:6"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "823:5:6"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_address",
																	"nodeType": "YulIdentifier",
																	"src": "796:26:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "796:33:6"
															},
															"nodeType": "YulExpressionStatement",
															"src": "796:33:6"
														}
													]
												},
												"name": "abi_decode_t_address",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nodeType": "YulTypedName",
														"src": "726:6:6",
														"type": ""
													},
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "734:3:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "742:5:6",
														"type": ""
													}
												],
												"src": "696:139:6"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "886:32:6",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "896:16:6",
															"value": {
																"name": "value",
																"nodeType": "YulIdentifier",
																"src": "907:5:6"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nodeType": "YulIdentifier",
																	"src": "896:7:6"
																}
															]
														}
													]
												},
												"name": "cleanup_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "868:5:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nodeType": "YulTypedName",
														"src": "878:7:6",
														"type": ""
													}
												],
												"src": "841:77:6"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "967:79:6",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "1024:16:6",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "1033:1:6",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "1036:1:6",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "1026:6:6"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "1026:12:6"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "1026:12:6"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "990:5:6"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nodeType": "YulIdentifier",
																						"src": "1015:5:6"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_uint256",
																					"nodeType": "YulIdentifier",
																					"src": "997:17:6"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "997:24:6"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nodeType": "YulIdentifier",
																			"src": "987:2:6"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "987:35:6"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "980:6:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "980:43:6"
															},
															"nodeType": "YulIf",
															"src": "977:63:6"
														}
													]
												},
												"name": "validator_revert_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "960:5:6",
														"type": ""
													}
												],
												"src": "924:122:6"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1104:87:6",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "1114:29:6",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nodeType": "YulIdentifier",
																		"src": "1136:6:6"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "1123:12:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "1123:20:6"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nodeType": "YulIdentifier",
																	"src": "1114:5:6"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "1179:5:6"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_uint256",
																	"nodeType": "YulIdentifier",
																	"src": "1152:26:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "1152:33:6"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1152:33:6"
														}
													]
												},
												"name": "abi_decode_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nodeType": "YulTypedName",
														"src": "1082:6:6",
														"type": ""
													},
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "1090:3:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "1098:5:6",
														"type": ""
													}
												],
												"src": "1052:139:6"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1314:648:6",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "1361:83:6",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nodeType": "YulIdentifier",
																				"src": "1363:77:6"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "1363:79:6"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "1363:79:6"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "1335:7:6"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "1344:9:6"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "1331:3:6"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1331:23:6"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1356:3:6",
																		"type": "",
																		"value": "128"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "1327:3:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "1327:33:6"
															},
															"nodeType": "YulIf",
															"src": "1324:120:6"
														},
														{
															"nodeType": "YulBlock",
															"src": "1454:117:6",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "1469:15:6",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1483:1:6",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "1473:6:6",
																			"type": ""
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "1498:63:6",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "1533:9:6"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "1544:6:6"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "1529:3:6"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "1529:22:6"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "1553:7:6"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address",
																			"nodeType": "YulIdentifier",
																			"src": "1508:20:6"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1508:53:6"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nodeType": "YulIdentifier",
																			"src": "1498:6:6"
																		}
																	]
																}
															]
														},
														{
															"nodeType": "YulBlock",
															"src": "1581:118:6",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "1596:16:6",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1610:2:6",
																		"type": "",
																		"value": "32"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "1600:6:6",
																			"type": ""
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "1626:63:6",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "1661:9:6"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "1672:6:6"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "1657:3:6"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "1657:22:6"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "1681:7:6"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_uint256",
																			"nodeType": "YulIdentifier",
																			"src": "1636:20:6"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1636:53:6"
																	},
																	"variableNames": [
																		{
																			"name": "value1",
																			"nodeType": "YulIdentifier",
																			"src": "1626:6:6"
																		}
																	]
																}
															]
														},
														{
															"nodeType": "YulBlock",
															"src": "1709:118:6",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "1724:16:6",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1738:2:6",
																		"type": "",
																		"value": "64"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "1728:6:6",
																			"type": ""
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "1754:63:6",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "1789:9:6"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "1800:6:6"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "1785:3:6"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "1785:22:6"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "1809:7:6"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address",
																			"nodeType": "YulIdentifier",
																			"src": "1764:20:6"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1764:53:6"
																	},
																	"variableNames": [
																		{
																			"name": "value2",
																			"nodeType": "YulIdentifier",
																			"src": "1754:6:6"
																		}
																	]
																}
															]
														},
														{
															"nodeType": "YulBlock",
															"src": "1837:118:6",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "1852:16:6",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1866:2:6",
																		"type": "",
																		"value": "96"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "1856:6:6",
																			"type": ""
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "1882:63:6",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "1917:9:6"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "1928:6:6"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "1913:3:6"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "1913:22:6"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "1937:7:6"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_uint256",
																			"nodeType": "YulIdentifier",
																			"src": "1892:20:6"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1892:53:6"
																	},
																	"variableNames": [
																		{
																			"name": "value3",
																			"nodeType": "YulIdentifier",
																			"src": "1882:6:6"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_addresst_uint256t_addresst_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "1260:9:6",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "1271:7:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "1283:6:6",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "1291:6:6",
														"type": ""
													},
													{
														"name": "value2",
														"nodeType": "YulTypedName",
														"src": "1299:6:6",
														"type": ""
													},
													{
														"name": "value3",
														"nodeType": "YulTypedName",
														"src": "1307:6:6",
														"type": ""
													}
												],
												"src": "1197:765:6"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2033:53:6",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "2050:3:6"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "2073:5:6"
																			}
																		],
																		"functionName": {
																			"name": "cleanup_t_address",
																			"nodeType": "YulIdentifier",
																			"src": "2055:17:6"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2055:24:6"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "2043:6:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "2043:37:6"
															},
															"nodeType": "YulExpressionStatement",
															"src": "2043:37:6"
														}
													]
												},
												"name": "abi_encode_t_address_to_t_address_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "2021:5:6",
														"type": ""
													},
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "2028:3:6",
														"type": ""
													}
												],
												"src": "1968:118:6"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2190:124:6",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "2200:26:6",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "2212:9:6"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2223:2:6",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "2208:3:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "2208:18:6"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "2200:4:6"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "2280:6:6"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "2293:9:6"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "2304:1:6",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "2289:3:6"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2289:17:6"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_address_to_t_address_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "2236:43:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "2236:71:6"
															},
															"nodeType": "YulExpressionStatement",
															"src": "2236:71:6"
														}
													]
												},
												"name": "abi_encode_tuple_t_address__to_t_address__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "2162:9:6",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "2174:6:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "2185:4:6",
														"type": ""
													}
												],
												"src": "2092:222:6"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2437:648:6",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "2484:83:6",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nodeType": "YulIdentifier",
																				"src": "2486:77:6"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "2486:79:6"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "2486:79:6"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "2458:7:6"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "2467:9:6"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "2454:3:6"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2454:23:6"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2479:3:6",
																		"type": "",
																		"value": "128"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "2450:3:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "2450:33:6"
															},
															"nodeType": "YulIf",
															"src": "2447:120:6"
														},
														{
															"nodeType": "YulBlock",
															"src": "2577:117:6",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "2592:15:6",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2606:1:6",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "2596:6:6",
																			"type": ""
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "2621:63:6",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "2656:9:6"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "2667:6:6"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "2652:3:6"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "2652:22:6"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "2676:7:6"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address",
																			"nodeType": "YulIdentifier",
																			"src": "2631:20:6"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2631:53:6"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nodeType": "YulIdentifier",
																			"src": "2621:6:6"
																		}
																	]
																}
															]
														},
														{
															"nodeType": "YulBlock",
															"src": "2704:118:6",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "2719:16:6",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2733:2:6",
																		"type": "",
																		"value": "32"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "2723:6:6",
																			"type": ""
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "2749:63:6",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "2784:9:6"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "2795:6:6"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "2780:3:6"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "2780:22:6"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "2804:7:6"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address",
																			"nodeType": "YulIdentifier",
																			"src": "2759:20:6"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2759:53:6"
																	},
																	"variableNames": [
																		{
																			"name": "value1",
																			"nodeType": "YulIdentifier",
																			"src": "2749:6:6"
																		}
																	]
																}
															]
														},
														{
															"nodeType": "YulBlock",
															"src": "2832:118:6",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "2847:16:6",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2861:2:6",
																		"type": "",
																		"value": "64"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "2851:6:6",
																			"type": ""
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "2877:63:6",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "2912:9:6"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "2923:6:6"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "2908:3:6"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "2908:22:6"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "2932:7:6"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_uint256",
																			"nodeType": "YulIdentifier",
																			"src": "2887:20:6"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2887:53:6"
																	},
																	"variableNames": [
																		{
																			"name": "value2",
																			"nodeType": "YulIdentifier",
																			"src": "2877:6:6"
																		}
																	]
																}
															]
														},
														{
															"nodeType": "YulBlock",
															"src": "2960:118:6",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "2975:16:6",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2989:2:6",
																		"type": "",
																		"value": "96"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "2979:6:6",
																			"type": ""
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "3005:63:6",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "3040:9:6"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "3051:6:6"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "3036:3:6"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "3036:22:6"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "3060:7:6"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_uint256",
																			"nodeType": "YulIdentifier",
																			"src": "3015:20:6"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3015:53:6"
																	},
																	"variableNames": [
																		{
																			"name": "value3",
																			"nodeType": "YulIdentifier",
																			"src": "3005:6:6"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_addresst_addresst_uint256t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "2383:9:6",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "2394:7:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "2406:6:6",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "2414:6:6",
														"type": ""
													},
													{
														"name": "value2",
														"nodeType": "YulTypedName",
														"src": "2422:6:6",
														"type": ""
													},
													{
														"name": "value3",
														"nodeType": "YulTypedName",
														"src": "2430:6:6",
														"type": ""
													}
												],
												"src": "2320:765:6"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "3174:391:6",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "3220:83:6",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nodeType": "YulIdentifier",
																				"src": "3222:77:6"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "3222:79:6"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "3222:79:6"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "3195:7:6"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "3204:9:6"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "3191:3:6"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3191:23:6"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3216:2:6",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "3187:3:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "3187:32:6"
															},
															"nodeType": "YulIf",
															"src": "3184:119:6"
														},
														{
															"nodeType": "YulBlock",
															"src": "3313:117:6",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "3328:15:6",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3342:1:6",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "3332:6:6",
																			"type": ""
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "3357:63:6",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "3392:9:6"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "3403:6:6"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "3388:3:6"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "3388:22:6"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "3412:7:6"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address",
																			"nodeType": "YulIdentifier",
																			"src": "3367:20:6"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3367:53:6"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nodeType": "YulIdentifier",
																			"src": "3357:6:6"
																		}
																	]
																}
															]
														},
														{
															"nodeType": "YulBlock",
															"src": "3440:118:6",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "3455:16:6",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3469:2:6",
																		"type": "",
																		"value": "32"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "3459:6:6",
																			"type": ""
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "3485:63:6",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "3520:9:6"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "3531:6:6"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "3516:3:6"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "3516:22:6"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "3540:7:6"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_uint256",
																			"nodeType": "YulIdentifier",
																			"src": "3495:20:6"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3495:53:6"
																	},
																	"variableNames": [
																		{
																			"name": "value1",
																			"nodeType": "YulIdentifier",
																			"src": "3485:6:6"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_addresst_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "3136:9:6",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "3147:7:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "3159:6:6",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "3167:6:6",
														"type": ""
													}
												],
												"src": "3091:474:6"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "3636:53:6",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "3653:3:6"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "3676:5:6"
																			}
																		],
																		"functionName": {
																			"name": "cleanup_t_uint256",
																			"nodeType": "YulIdentifier",
																			"src": "3658:17:6"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3658:24:6"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "3646:6:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "3646:37:6"
															},
															"nodeType": "YulExpressionStatement",
															"src": "3646:37:6"
														}
													]
												},
												"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "3624:5:6",
														"type": ""
													},
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "3631:3:6",
														"type": ""
													}
												],
												"src": "3571:118:6"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "3748:32:6",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "3758:16:6",
															"value": {
																"name": "value",
																"nodeType": "YulIdentifier",
																"src": "3769:5:6"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nodeType": "YulIdentifier",
																	"src": "3758:7:6"
																}
															]
														}
													]
												},
												"name": "cleanup_t_rational_0_by_1",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "3730:5:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nodeType": "YulTypedName",
														"src": "3740:7:6",
														"type": ""
													}
												],
												"src": "3695:85:6"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "3818:28:6",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "3828:12:6",
															"value": {
																"name": "value",
																"nodeType": "YulIdentifier",
																"src": "3835:5:6"
															},
															"variableNames": [
																{
																	"name": "ret",
																	"nodeType": "YulIdentifier",
																	"src": "3828:3:6"
																}
															]
														}
													]
												},
												"name": "identity",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "3804:5:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "ret",
														"nodeType": "YulTypedName",
														"src": "3814:3:6",
														"type": ""
													}
												],
												"src": "3786:60:6"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "3920:90:6",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "3930:74:6",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nodeType": "YulIdentifier",
																						"src": "3996:5:6"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_rational_0_by_1",
																					"nodeType": "YulIdentifier",
																					"src": "3970:25:6"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "3970:32:6"
																			}
																		],
																		"functionName": {
																			"name": "identity",
																			"nodeType": "YulIdentifier",
																			"src": "3961:8:6"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3961:42:6"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nodeType": "YulIdentifier",
																	"src": "3943:17:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "3943:61:6"
															},
															"variableNames": [
																{
																	"name": "converted",
																	"nodeType": "YulIdentifier",
																	"src": "3930:9:6"
																}
															]
														}
													]
												},
												"name": "convert_t_rational_0_by_1_to_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "3900:5:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "converted",
														"nodeType": "YulTypedName",
														"src": "3910:9:6",
														"type": ""
													}
												],
												"src": "3852:158:6"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "4089:74:6",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "4106:3:6"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "4150:5:6"
																			}
																		],
																		"functionName": {
																			"name": "convert_t_rational_0_by_1_to_t_uint256",
																			"nodeType": "YulIdentifier",
																			"src": "4111:38:6"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4111:45:6"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "4099:6:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "4099:58:6"
															},
															"nodeType": "YulExpressionStatement",
															"src": "4099:58:6"
														}
													]
												},
												"name": "abi_encode_t_rational_0_by_1_to_t_uint256_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "4077:5:6",
														"type": ""
													},
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "4084:3:6",
														"type": ""
													}
												],
												"src": "4016:147:6"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "4479:719:6",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "4489:27:6",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "4501:9:6"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4512:3:6",
																		"type": "",
																		"value": "256"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "4497:3:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "4497:19:6"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "4489:4:6"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "4570:6:6"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "4583:9:6"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "4594:1:6",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "4579:3:6"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4579:17:6"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_address_to_t_address_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "4526:43:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "4526:71:6"
															},
															"nodeType": "YulExpressionStatement",
															"src": "4526:71:6"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value1",
																		"nodeType": "YulIdentifier",
																		"src": "4651:6:6"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "4664:9:6"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "4675:2:6",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "4660:3:6"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4660:18:6"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_address_to_t_address_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "4607:43:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "4607:72:6"
															},
															"nodeType": "YulExpressionStatement",
															"src": "4607:72:6"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value2",
																		"nodeType": "YulIdentifier",
																		"src": "4733:6:6"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "4746:9:6"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "4757:2:6",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "4742:3:6"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4742:18:6"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "4689:43:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "4689:72:6"
															},
															"nodeType": "YulExpressionStatement",
															"src": "4689:72:6"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value3",
																		"nodeType": "YulIdentifier",
																		"src": "4815:6:6"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "4828:9:6"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "4839:2:6",
																				"type": "",
																				"value": "96"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "4824:3:6"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4824:18:6"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "4771:43:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "4771:72:6"
															},
															"nodeType": "YulExpressionStatement",
															"src": "4771:72:6"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value4",
																		"nodeType": "YulIdentifier",
																		"src": "4905:6:6"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "4918:9:6"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "4929:3:6",
																				"type": "",
																				"value": "128"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "4914:3:6"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4914:19:6"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_rational_0_by_1_to_t_uint256_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "4853:51:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "4853:81:6"
															},
															"nodeType": "YulExpressionStatement",
															"src": "4853:81:6"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value5",
																		"nodeType": "YulIdentifier",
																		"src": "4996:6:6"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "5009:9:6"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "5020:3:6",
																				"type": "",
																				"value": "160"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "5005:3:6"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "5005:19:6"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_rational_0_by_1_to_t_uint256_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "4944:51:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "4944:81:6"
															},
															"nodeType": "YulExpressionStatement",
															"src": "4944:81:6"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value6",
																		"nodeType": "YulIdentifier",
																		"src": "5079:6:6"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "5092:9:6"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "5103:3:6",
																				"type": "",
																				"value": "192"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "5088:3:6"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "5088:19:6"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_address_to_t_address_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "5035:43:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "5035:73:6"
															},
															"nodeType": "YulExpressionStatement",
															"src": "5035:73:6"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value7",
																		"nodeType": "YulIdentifier",
																		"src": "5162:6:6"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "5175:9:6"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "5186:3:6",
																				"type": "",
																				"value": "224"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "5171:3:6"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "5171:19:6"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "5118:43:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "5118:73:6"
															},
															"nodeType": "YulExpressionStatement",
															"src": "5118:73:6"
														}
													]
												},
												"name": "abi_encode_tuple_t_address_t_address_t_uint256_t_uint256_t_rational_0_by_1_t_rational_0_by_1_t_address_t_uint256__to_t_address_t_address_t_uint256_t_uint256_t_uint256_t_uint256_t_address_t_uint256__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "4395:9:6",
														"type": ""
													},
													{
														"name": "value7",
														"nodeType": "YulTypedName",
														"src": "4407:6:6",
														"type": ""
													},
													{
														"name": "value6",
														"nodeType": "YulTypedName",
														"src": "4415:6:6",
														"type": ""
													},
													{
														"name": "value5",
														"nodeType": "YulTypedName",
														"src": "4423:6:6",
														"type": ""
													},
													{
														"name": "value4",
														"nodeType": "YulTypedName",
														"src": "4431:6:6",
														"type": ""
													},
													{
														"name": "value3",
														"nodeType": "YulTypedName",
														"src": "4439:6:6",
														"type": ""
													},
													{
														"name": "value2",
														"nodeType": "YulTypedName",
														"src": "4447:6:6",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "4455:6:6",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "4463:6:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "4474:4:6",
														"type": ""
													}
												],
												"src": "4169:1029:6"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "5267:80:6",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "5277:22:6",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nodeType": "YulIdentifier",
																		"src": "5292:6:6"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "5286:5:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "5286:13:6"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nodeType": "YulIdentifier",
																	"src": "5277:5:6"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "5335:5:6"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_uint256",
																	"nodeType": "YulIdentifier",
																	"src": "5308:26:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "5308:33:6"
															},
															"nodeType": "YulExpressionStatement",
															"src": "5308:33:6"
														}
													]
												},
												"name": "abi_decode_t_uint256_fromMemory",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nodeType": "YulTypedName",
														"src": "5245:6:6",
														"type": ""
													},
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "5253:3:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "5261:5:6",
														"type": ""
													}
												],
												"src": "5204:143:6"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "5464:552:6",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "5510:83:6",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nodeType": "YulIdentifier",
																				"src": "5512:77:6"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "5512:79:6"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "5512:79:6"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "5485:7:6"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "5494:9:6"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "5481:3:6"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "5481:23:6"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "5506:2:6",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "5477:3:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "5477:32:6"
															},
															"nodeType": "YulIf",
															"src": "5474:119:6"
														},
														{
															"nodeType": "YulBlock",
															"src": "5603:128:6",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "5618:15:6",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "5632:1:6",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "5622:6:6",
																			"type": ""
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "5647:74:6",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "5693:9:6"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "5704:6:6"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "5689:3:6"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "5689:22:6"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "5713:7:6"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_uint256_fromMemory",
																			"nodeType": "YulIdentifier",
																			"src": "5657:31:6"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "5657:64:6"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nodeType": "YulIdentifier",
																			"src": "5647:6:6"
																		}
																	]
																}
															]
														},
														{
															"nodeType": "YulBlock",
															"src": "5741:129:6",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "5756:16:6",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "5770:2:6",
																		"type": "",
																		"value": "32"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "5760:6:6",
																			"type": ""
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "5786:74:6",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "5832:9:6"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "5843:6:6"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "5828:3:6"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "5828:22:6"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "5852:7:6"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_uint256_fromMemory",
																			"nodeType": "YulIdentifier",
																			"src": "5796:31:6"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "5796:64:6"
																	},
																	"variableNames": [
																		{
																			"name": "value1",
																			"nodeType": "YulIdentifier",
																			"src": "5786:6:6"
																		}
																	]
																}
															]
														},
														{
															"nodeType": "YulBlock",
															"src": "5880:129:6",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "5895:16:6",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "5909:2:6",
																		"type": "",
																		"value": "64"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "5899:6:6",
																			"type": ""
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "5925:74:6",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "5971:9:6"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "5982:6:6"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "5967:3:6"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "5967:22:6"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "5991:7:6"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_uint256_fromMemory",
																			"nodeType": "YulIdentifier",
																			"src": "5935:31:6"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "5935:64:6"
																	},
																	"variableNames": [
																		{
																			"name": "value2",
																			"nodeType": "YulIdentifier",
																			"src": "5925:6:6"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_uint256t_uint256t_uint256_fromMemory",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "5418:9:6",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "5429:7:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "5441:6:6",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "5449:6:6",
														"type": ""
													},
													{
														"name": "value2",
														"nodeType": "YulTypedName",
														"src": "5457:6:6",
														"type": ""
													}
												],
												"src": "5353:663:6"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "6050:152:6",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "6067:1:6",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "6070:77:6",
																		"type": "",
																		"value": "35408467139433450592217433187231851964531694900788300625387963629091585785856"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "6060:6:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "6060:88:6"
															},
															"nodeType": "YulExpressionStatement",
															"src": "6060:88:6"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "6164:1:6",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "6167:4:6",
																		"type": "",
																		"value": "0x41"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "6157:6:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "6157:15:6"
															},
															"nodeType": "YulExpressionStatement",
															"src": "6157:15:6"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "6188:1:6",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "6191:4:6",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "6181:6:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "6181:15:6"
															},
															"nodeType": "YulExpressionStatement",
															"src": "6181:15:6"
														}
													]
												},
												"name": "panic_error_0x41",
												"nodeType": "YulFunctionDefinition",
												"src": "6022:180:6"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "6236:152:6",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "6253:1:6",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "6256:77:6",
																		"type": "",
																		"value": "35408467139433450592217433187231851964531694900788300625387963629091585785856"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "6246:6:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "6246:88:6"
															},
															"nodeType": "YulExpressionStatement",
															"src": "6246:88:6"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "6350:1:6",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "6353:4:6",
																		"type": "",
																		"value": "0x32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "6343:6:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "6343:15:6"
															},
															"nodeType": "YulExpressionStatement",
															"src": "6343:15:6"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "6374:1:6",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "6377:4:6",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "6367:6:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "6367:15:6"
															},
															"nodeType": "YulExpressionStatement",
															"src": "6367:15:6"
														}
													]
												},
												"name": "panic_error_0x32",
												"nodeType": "YulFunctionDefinition",
												"src": "6208:180:6"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "6468:40:6",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "6479:22:6",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "6495:5:6"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "6489:5:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "6489:12:6"
															},
															"variableNames": [
																{
																	"name": "length",
																	"nodeType": "YulIdentifier",
																	"src": "6479:6:6"
																}
															]
														}
													]
												},
												"name": "array_length_t_array$_t_address_$dyn_memory_ptr",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "6451:5:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "length",
														"nodeType": "YulTypedName",
														"src": "6461:6:6",
														"type": ""
													}
												],
												"src": "6394:114:6"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "6625:73:6",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "6642:3:6"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "6647:6:6"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "6635:6:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "6635:19:6"
															},
															"nodeType": "YulExpressionStatement",
															"src": "6635:19:6"
														},
														{
															"nodeType": "YulAssignment",
															"src": "6663:29:6",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "6682:3:6"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "6687:4:6",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "6678:3:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "6678:14:6"
															},
															"variableNames": [
																{
																	"name": "updated_pos",
																	"nodeType": "YulIdentifier",
																	"src": "6663:11:6"
																}
															]
														}
													]
												},
												"name": "array_storeLengthForEncoding_t_array$_t_address_$dyn_memory_ptr_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "6597:3:6",
														"type": ""
													},
													{
														"name": "length",
														"nodeType": "YulTypedName",
														"src": "6602:6:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "updated_pos",
														"nodeType": "YulTypedName",
														"src": "6613:11:6",
														"type": ""
													}
												],
												"src": "6514:184:6"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "6776:60:6",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "6786:11:6",
															"value": {
																"name": "ptr",
																"nodeType": "YulIdentifier",
																"src": "6794:3:6"
															},
															"variableNames": [
																{
																	"name": "data",
																	"nodeType": "YulIdentifier",
																	"src": "6786:4:6"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "6807:22:6",
															"value": {
																"arguments": [
																	{
																		"name": "ptr",
																		"nodeType": "YulIdentifier",
																		"src": "6819:3:6"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "6824:4:6",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "6815:3:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "6815:14:6"
															},
															"variableNames": [
																{
																	"name": "data",
																	"nodeType": "YulIdentifier",
																	"src": "6807:4:6"
																}
															]
														}
													]
												},
												"name": "array_dataslot_t_array$_t_address_$dyn_memory_ptr",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "ptr",
														"nodeType": "YulTypedName",
														"src": "6763:3:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "data",
														"nodeType": "YulTypedName",
														"src": "6771:4:6",
														"type": ""
													}
												],
												"src": "6704:132:6"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "6897:53:6",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "6914:3:6"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "6937:5:6"
																			}
																		],
																		"functionName": {
																			"name": "cleanup_t_address",
																			"nodeType": "YulIdentifier",
																			"src": "6919:17:6"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "6919:24:6"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "6907:6:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "6907:37:6"
															},
															"nodeType": "YulExpressionStatement",
															"src": "6907:37:6"
														}
													]
												},
												"name": "abi_encode_t_address_to_t_address",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "6885:5:6",
														"type": ""
													},
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "6892:3:6",
														"type": ""
													}
												],
												"src": "6842:108:6"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "7036:99:6",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "7080:6:6"
																	},
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "7088:3:6"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_address_to_t_address",
																	"nodeType": "YulIdentifier",
																	"src": "7046:33:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "7046:46:6"
															},
															"nodeType": "YulExpressionStatement",
															"src": "7046:46:6"
														},
														{
															"nodeType": "YulAssignment",
															"src": "7101:28:6",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "7119:3:6"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "7124:4:6",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "7115:3:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "7115:14:6"
															},
															"variableNames": [
																{
																	"name": "updatedPos",
																	"nodeType": "YulIdentifier",
																	"src": "7101:10:6"
																}
															]
														}
													]
												},
												"name": "abi_encodeUpdatedPos_t_address_to_t_address",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "7009:6:6",
														"type": ""
													},
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "7017:3:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "updatedPos",
														"nodeType": "YulTypedName",
														"src": "7025:10:6",
														"type": ""
													}
												],
												"src": "6956:179:6"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "7216:38:6",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "7226:22:6",
															"value": {
																"arguments": [
																	{
																		"name": "ptr",
																		"nodeType": "YulIdentifier",
																		"src": "7238:3:6"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "7243:4:6",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "7234:3:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "7234:14:6"
															},
															"variableNames": [
																{
																	"name": "next",
																	"nodeType": "YulIdentifier",
																	"src": "7226:4:6"
																}
															]
														}
													]
												},
												"name": "array_nextElement_t_array$_t_address_$dyn_memory_ptr",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "ptr",
														"nodeType": "YulTypedName",
														"src": "7203:3:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "next",
														"nodeType": "YulTypedName",
														"src": "7211:4:6",
														"type": ""
													}
												],
												"src": "7141:113:6"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "7414:608:6",
													"statements": [
														{
															"nodeType": "YulVariableDeclaration",
															"src": "7424:68:6",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "7486:5:6"
																	}
																],
																"functionName": {
																	"name": "array_length_t_array$_t_address_$dyn_memory_ptr",
																	"nodeType": "YulIdentifier",
																	"src": "7438:47:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "7438:54:6"
															},
															"variables": [
																{
																	"name": "length",
																	"nodeType": "YulTypedName",
																	"src": "7428:6:6",
																	"type": ""
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "7501:93:6",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "7582:3:6"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "7587:6:6"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_array$_t_address_$dyn_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "7508:73:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "7508:86:6"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nodeType": "YulIdentifier",
																	"src": "7501:3:6"
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "7603:71:6",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "7668:5:6"
																	}
																],
																"functionName": {
																	"name": "array_dataslot_t_array$_t_address_$dyn_memory_ptr",
																	"nodeType": "YulIdentifier",
																	"src": "7618:49:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "7618:56:6"
															},
															"variables": [
																{
																	"name": "baseRef",
																	"nodeType": "YulTypedName",
																	"src": "7607:7:6",
																	"type": ""
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "7683:21:6",
															"value": {
																"name": "baseRef",
																"nodeType": "YulIdentifier",
																"src": "7697:7:6"
															},
															"variables": [
																{
																	"name": "srcPtr",
																	"nodeType": "YulTypedName",
																	"src": "7687:6:6",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "7773:224:6",
																"statements": [
																	{
																		"nodeType": "YulVariableDeclaration",
																		"src": "7787:34:6",
																		"value": {
																			"arguments": [
																				{
																					"name": "srcPtr",
																					"nodeType": "YulIdentifier",
																					"src": "7814:6:6"
																				}
																			],
																			"functionName": {
																				"name": "mload",
																				"nodeType": "YulIdentifier",
																				"src": "7808:5:6"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "7808:13:6"
																		},
																		"variables": [
																			{
																				"name": "elementValue0",
																				"nodeType": "YulTypedName",
																				"src": "7791:13:6",
																				"type": ""
																			}
																		]
																	},
																	{
																		"nodeType": "YulAssignment",
																		"src": "7834:70:6",
																		"value": {
																			"arguments": [
																				{
																					"name": "elementValue0",
																					"nodeType": "YulIdentifier",
																					"src": "7885:13:6"
																				},
																				{
																					"name": "pos",
																					"nodeType": "YulIdentifier",
																					"src": "7900:3:6"
																				}
																			],
																			"functionName": {
																				"name": "abi_encodeUpdatedPos_t_address_to_t_address",
																				"nodeType": "YulIdentifier",
																				"src": "7841:43:6"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "7841:63:6"
																		},
																		"variableNames": [
																			{
																				"name": "pos",
																				"nodeType": "YulIdentifier",
																				"src": "7834:3:6"
																			}
																		]
																	},
																	{
																		"nodeType": "YulAssignment",
																		"src": "7917:70:6",
																		"value": {
																			"arguments": [
																				{
																					"name": "srcPtr",
																					"nodeType": "YulIdentifier",
																					"src": "7980:6:6"
																				}
																			],
																			"functionName": {
																				"name": "array_nextElement_t_array$_t_address_$dyn_memory_ptr",
																				"nodeType": "YulIdentifier",
																				"src": "7927:52:6"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "7927:60:6"
																		},
																		"variableNames": [
																			{
																				"name": "srcPtr",
																				"nodeType": "YulIdentifier",
																				"src": "7917:6:6"
																			}
																		]
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "i",
																		"nodeType": "YulIdentifier",
																		"src": "7735:1:6"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "7738:6:6"
																	}
																],
																"functionName": {
																	"name": "lt",
																	"nodeType": "YulIdentifier",
																	"src": "7732:2:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "7732:13:6"
															},
															"nodeType": "YulForLoop",
															"post": {
																"nodeType": "YulBlock",
																"src": "7746:18:6",
																"statements": [
																	{
																		"nodeType": "YulAssignment",
																		"src": "7748:14:6",
																		"value": {
																			"arguments": [
																				{
																					"name": "i",
																					"nodeType": "YulIdentifier",
																					"src": "7757:1:6"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "7760:1:6",
																					"type": "",
																					"value": "1"
																				}
																			],
																			"functionName": {
																				"name": "add",
																				"nodeType": "YulIdentifier",
																				"src": "7753:3:6"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "7753:9:6"
																		},
																		"variableNames": [
																			{
																				"name": "i",
																				"nodeType": "YulIdentifier",
																				"src": "7748:1:6"
																			}
																		]
																	}
																]
															},
															"pre": {
																"nodeType": "YulBlock",
																"src": "7717:14:6",
																"statements": [
																	{
																		"nodeType": "YulVariableDeclaration",
																		"src": "7719:10:6",
																		"value": {
																			"kind": "number",
																			"nodeType": "YulLiteral",
																			"src": "7728:1:6",
																			"type": "",
																			"value": "0"
																		},
																		"variables": [
																			{
																				"name": "i",
																				"nodeType": "YulTypedName",
																				"src": "7723:1:6",
																				"type": ""
																			}
																		]
																	}
																]
															},
															"src": "7713:284:6"
														},
														{
															"nodeType": "YulAssignment",
															"src": "8006:10:6",
															"value": {
																"name": "pos",
																"nodeType": "YulIdentifier",
																"src": "8013:3:6"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nodeType": "YulIdentifier",
																	"src": "8006:3:6"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_array$_t_address_$dyn_memory_ptr_to_t_array$_t_address_$dyn_memory_ptr_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "7393:5:6",
														"type": ""
													},
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "7400:3:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "7409:3:6",
														"type": ""
													}
												],
												"src": "7290:732:6"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "8288:555:6",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "8298:27:6",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "8310:9:6"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "8321:3:6",
																		"type": "",
																		"value": "160"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "8306:3:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "8306:19:6"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "8298:4:6"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "8379:6:6"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "8392:9:6"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "8403:1:6",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "8388:3:6"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "8388:17:6"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "8335:43:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "8335:71:6"
															},
															"nodeType": "YulExpressionStatement",
															"src": "8335:71:6"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value1",
																		"nodeType": "YulIdentifier",
																		"src": "8460:6:6"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "8473:9:6"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "8484:2:6",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "8469:3:6"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "8469:18:6"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "8416:43:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "8416:72:6"
															},
															"nodeType": "YulExpressionStatement",
															"src": "8416:72:6"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "8509:9:6"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "8520:2:6",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "8505:3:6"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "8505:18:6"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nodeType": "YulIdentifier",
																				"src": "8529:4:6"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "8535:9:6"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "8525:3:6"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "8525:20:6"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "8498:6:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "8498:48:6"
															},
															"nodeType": "YulExpressionStatement",
															"src": "8498:48:6"
														},
														{
															"nodeType": "YulAssignment",
															"src": "8555:116:6",
															"value": {
																"arguments": [
																	{
																		"name": "value2",
																		"nodeType": "YulIdentifier",
																		"src": "8657:6:6"
																	},
																	{
																		"name": "tail",
																		"nodeType": "YulIdentifier",
																		"src": "8666:4:6"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_array$_t_address_$dyn_memory_ptr_to_t_array$_t_address_$dyn_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "8563:93:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "8563:108:6"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "8555:4:6"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value3",
																		"nodeType": "YulIdentifier",
																		"src": "8725:6:6"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "8738:9:6"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "8749:2:6",
																				"type": "",
																				"value": "96"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "8734:3:6"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "8734:18:6"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_address_to_t_address_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "8681:43:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "8681:72:6"
															},
															"nodeType": "YulExpressionStatement",
															"src": "8681:72:6"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value4",
																		"nodeType": "YulIdentifier",
																		"src": "8807:6:6"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "8820:9:6"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "8831:3:6",
																				"type": "",
																				"value": "128"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "8816:3:6"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "8816:19:6"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "8763:43:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "8763:73:6"
															},
															"nodeType": "YulExpressionStatement",
															"src": "8763:73:6"
														}
													]
												},
												"name": "abi_encode_tuple_t_uint256_t_uint256_t_array$_t_address_$dyn_memory_ptr_t_address_t_uint256__to_t_uint256_t_uint256_t_array$_t_address_$dyn_memory_ptr_t_address_t_uint256__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "8228:9:6",
														"type": ""
													},
													{
														"name": "value4",
														"nodeType": "YulTypedName",
														"src": "8240:6:6",
														"type": ""
													},
													{
														"name": "value3",
														"nodeType": "YulTypedName",
														"src": "8248:6:6",
														"type": ""
													},
													{
														"name": "value2",
														"nodeType": "YulTypedName",
														"src": "8256:6:6",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "8264:6:6",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "8272:6:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "8283:4:6",
														"type": ""
													}
												],
												"src": "8028:815:6"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "8938:28:6",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "8955:1:6",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "8958:1:6",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "8948:6:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "8948:12:6"
															},
															"nodeType": "YulExpressionStatement",
															"src": "8948:12:6"
														}
													]
												},
												"name": "revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d",
												"nodeType": "YulFunctionDefinition",
												"src": "8849:117:6"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "9020:54:6",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "9030:38:6",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "9048:5:6"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "9055:2:6",
																				"type": "",
																				"value": "31"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "9044:3:6"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "9044:14:6"
																	},
																	{
																		"arguments": [
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "9064:2:6",
																				"type": "",
																				"value": "31"
																			}
																		],
																		"functionName": {
																			"name": "not",
																			"nodeType": "YulIdentifier",
																			"src": "9060:3:6"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "9060:7:6"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nodeType": "YulIdentifier",
																	"src": "9040:3:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "9040:28:6"
															},
															"variableNames": [
																{
																	"name": "result",
																	"nodeType": "YulIdentifier",
																	"src": "9030:6:6"
																}
															]
														}
													]
												},
												"name": "round_up_to_mul_of_32",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "9003:5:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "result",
														"nodeType": "YulTypedName",
														"src": "9013:6:6",
														"type": ""
													}
												],
												"src": "8972:102:6"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "9123:238:6",
													"statements": [
														{
															"nodeType": "YulVariableDeclaration",
															"src": "9133:58:6",
															"value": {
																"arguments": [
																	{
																		"name": "memPtr",
																		"nodeType": "YulIdentifier",
																		"src": "9155:6:6"
																	},
																	{
																		"arguments": [
																			{
																				"name": "size",
																				"nodeType": "YulIdentifier",
																				"src": "9185:4:6"
																			}
																		],
																		"functionName": {
																			"name": "round_up_to_mul_of_32",
																			"nodeType": "YulIdentifier",
																			"src": "9163:21:6"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "9163:27:6"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "9151:3:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "9151:40:6"
															},
															"variables": [
																{
																	"name": "newFreePtr",
																	"nodeType": "YulTypedName",
																	"src": "9137:10:6",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "9302:22:6",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x41",
																				"nodeType": "YulIdentifier",
																				"src": "9304:16:6"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "9304:18:6"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "9304:18:6"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "newFreePtr",
																				"nodeType": "YulIdentifier",
																				"src": "9245:10:6"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "9257:18:6",
																				"type": "",
																				"value": "0xffffffffffffffff"
																			}
																		],
																		"functionName": {
																			"name": "gt",
																			"nodeType": "YulIdentifier",
																			"src": "9242:2:6"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "9242:34:6"
																	},
																	{
																		"arguments": [
																			{
																				"name": "newFreePtr",
																				"nodeType": "YulIdentifier",
																				"src": "9281:10:6"
																			},
																			{
																				"name": "memPtr",
																				"nodeType": "YulIdentifier",
																				"src": "9293:6:6"
																			}
																		],
																		"functionName": {
																			"name": "lt",
																			"nodeType": "YulIdentifier",
																			"src": "9278:2:6"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "9278:22:6"
																	}
																],
																"functionName": {
																	"name": "or",
																	"nodeType": "YulIdentifier",
																	"src": "9239:2:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "9239:62:6"
															},
															"nodeType": "YulIf",
															"src": "9236:88:6"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "9340:2:6",
																		"type": "",
																		"value": "64"
																	},
																	{
																		"name": "newFreePtr",
																		"nodeType": "YulIdentifier",
																		"src": "9344:10:6"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "9333:6:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "9333:22:6"
															},
															"nodeType": "YulExpressionStatement",
															"src": "9333:22:6"
														}
													]
												},
												"name": "finalize_allocation",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nodeType": "YulTypedName",
														"src": "9109:6:6",
														"type": ""
													},
													{
														"name": "size",
														"nodeType": "YulTypedName",
														"src": "9117:4:6",
														"type": ""
													}
												],
												"src": "9080:281:6"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "9408:88:6",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "9418:30:6",
															"value": {
																"arguments": [],
																"functionName": {
																	"name": "allocate_unbounded",
																	"nodeType": "YulIdentifier",
																	"src": "9428:18:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "9428:20:6"
															},
															"variableNames": [
																{
																	"name": "memPtr",
																	"nodeType": "YulIdentifier",
																	"src": "9418:6:6"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "memPtr",
																		"nodeType": "YulIdentifier",
																		"src": "9477:6:6"
																	},
																	{
																		"name": "size",
																		"nodeType": "YulIdentifier",
																		"src": "9485:4:6"
																	}
																],
																"functionName": {
																	"name": "finalize_allocation",
																	"nodeType": "YulIdentifier",
																	"src": "9457:19:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "9457:33:6"
															},
															"nodeType": "YulExpressionStatement",
															"src": "9457:33:6"
														}
													]
												},
												"name": "allocate_memory",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "size",
														"nodeType": "YulTypedName",
														"src": "9392:4:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "memPtr",
														"nodeType": "YulTypedName",
														"src": "9401:6:6",
														"type": ""
													}
												],
												"src": "9367:129:6"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "9584:229:6",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "9689:22:6",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x41",
																				"nodeType": "YulIdentifier",
																				"src": "9691:16:6"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "9691:18:6"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "9691:18:6"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "9661:6:6"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "9669:18:6",
																		"type": "",
																		"value": "0xffffffffffffffff"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "9658:2:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "9658:30:6"
															},
															"nodeType": "YulIf",
															"src": "9655:56:6"
														},
														{
															"nodeType": "YulAssignment",
															"src": "9721:25:6",
															"value": {
																"arguments": [
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "9733:6:6"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "9741:4:6",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "mul",
																	"nodeType": "YulIdentifier",
																	"src": "9729:3:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "9729:17:6"
															},
															"variableNames": [
																{
																	"name": "size",
																	"nodeType": "YulIdentifier",
																	"src": "9721:4:6"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "9783:23:6",
															"value": {
																"arguments": [
																	{
																		"name": "size",
																		"nodeType": "YulIdentifier",
																		"src": "9795:4:6"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "9801:4:6",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "9791:3:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "9791:15:6"
															},
															"variableNames": [
																{
																	"name": "size",
																	"nodeType": "YulIdentifier",
																	"src": "9783:4:6"
																}
															]
														}
													]
												},
												"name": "array_allocation_size_t_array$_t_uint256_$dyn_memory_ptr",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "length",
														"nodeType": "YulTypedName",
														"src": "9568:6:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "size",
														"nodeType": "YulTypedName",
														"src": "9579:4:6",
														"type": ""
													}
												],
												"src": "9502:311:6"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "9908:28:6",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "9925:1:6",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "9928:1:6",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "9918:6:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "9918:12:6"
															},
															"nodeType": "YulExpressionStatement",
															"src": "9918:12:6"
														}
													]
												},
												"name": "revert_error_81385d8c0b31fffe14be1da910c8bd3a80be4cfa248e04f42ec0faea3132a8ef",
												"nodeType": "YulFunctionDefinition",
												"src": "9819:117:6"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "10072:619:6",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "10082:90:6",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "length",
																				"nodeType": "YulIdentifier",
																				"src": "10164:6:6"
																			}
																		],
																		"functionName": {
																			"name": "array_allocation_size_t_array$_t_uint256_$dyn_memory_ptr",
																			"nodeType": "YulIdentifier",
																			"src": "10107:56:6"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "10107:64:6"
																	}
																],
																"functionName": {
																	"name": "allocate_memory",
																	"nodeType": "YulIdentifier",
																	"src": "10091:15:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "10091:81:6"
															},
															"variableNames": [
																{
																	"name": "array",
																	"nodeType": "YulIdentifier",
																	"src": "10082:5:6"
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "10181:16:6",
															"value": {
																"name": "array",
																"nodeType": "YulIdentifier",
																"src": "10192:5:6"
															},
															"variables": [
																{
																	"name": "dst",
																	"nodeType": "YulTypedName",
																	"src": "10185:3:6",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "array",
																		"nodeType": "YulIdentifier",
																		"src": "10214:5:6"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "10221:6:6"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "10207:6:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "10207:21:6"
															},
															"nodeType": "YulExpressionStatement",
															"src": "10207:21:6"
														},
														{
															"nodeType": "YulAssignment",
															"src": "10237:23:6",
															"value": {
																"arguments": [
																	{
																		"name": "array",
																		"nodeType": "YulIdentifier",
																		"src": "10248:5:6"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "10255:4:6",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "10244:3:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "10244:16:6"
															},
															"variableNames": [
																{
																	"name": "dst",
																	"nodeType": "YulIdentifier",
																	"src": "10237:3:6"
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "10270:44:6",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nodeType": "YulIdentifier",
																		"src": "10288:6:6"
																	},
																	{
																		"arguments": [
																			{
																				"name": "length",
																				"nodeType": "YulIdentifier",
																				"src": "10300:6:6"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "10308:4:6",
																				"type": "",
																				"value": "0x20"
																			}
																		],
																		"functionName": {
																			"name": "mul",
																			"nodeType": "YulIdentifier",
																			"src": "10296:3:6"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "10296:17:6"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "10284:3:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "10284:30:6"
															},
															"variables": [
																{
																	"name": "srcEnd",
																	"nodeType": "YulTypedName",
																	"src": "10274:6:6",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "10342:103:6",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_81385d8c0b31fffe14be1da910c8bd3a80be4cfa248e04f42ec0faea3132a8ef",
																				"nodeType": "YulIdentifier",
																				"src": "10356:77:6"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "10356:79:6"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "10356:79:6"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "srcEnd",
																		"nodeType": "YulIdentifier",
																		"src": "10329:6:6"
																	},
																	{
																		"name": "end",
																		"nodeType": "YulIdentifier",
																		"src": "10337:3:6"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "10326:2:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "10326:15:6"
															},
															"nodeType": "YulIf",
															"src": "10323:122:6"
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "10530:155:6",
																"statements": [
																	{
																		"nodeType": "YulVariableDeclaration",
																		"src": "10545:21:6",
																		"value": {
																			"name": "src",
																			"nodeType": "YulIdentifier",
																			"src": "10563:3:6"
																		},
																		"variables": [
																			{
																				"name": "elementPos",
																				"nodeType": "YulTypedName",
																				"src": "10549:10:6",
																				"type": ""
																			}
																		]
																	},
																	{
																		"expression": {
																			"arguments": [
																				{
																					"name": "dst",
																					"nodeType": "YulIdentifier",
																					"src": "10587:3:6"
																				},
																				{
																					"arguments": [
																						{
																							"name": "elementPos",
																							"nodeType": "YulIdentifier",
																							"src": "10624:10:6"
																						},
																						{
																							"name": "end",
																							"nodeType": "YulIdentifier",
																							"src": "10636:3:6"
																						}
																					],
																					"functionName": {
																						"name": "abi_decode_t_uint256_fromMemory",
																						"nodeType": "YulIdentifier",
																						"src": "10592:31:6"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "10592:48:6"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nodeType": "YulIdentifier",
																				"src": "10580:6:6"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "10580:61:6"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "10580:61:6"
																	},
																	{
																		"nodeType": "YulAssignment",
																		"src": "10654:21:6",
																		"value": {
																			"arguments": [
																				{
																					"name": "dst",
																					"nodeType": "YulIdentifier",
																					"src": "10665:3:6"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "10670:4:6",
																					"type": "",
																					"value": "0x20"
																				}
																			],
																			"functionName": {
																				"name": "add",
																				"nodeType": "YulIdentifier",
																				"src": "10661:3:6"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "10661:14:6"
																		},
																		"variableNames": [
																			{
																				"name": "dst",
																				"nodeType": "YulIdentifier",
																				"src": "10654:3:6"
																			}
																		]
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "src",
																		"nodeType": "YulIdentifier",
																		"src": "10483:3:6"
																	},
																	{
																		"name": "srcEnd",
																		"nodeType": "YulIdentifier",
																		"src": "10488:6:6"
																	}
																],
																"functionName": {
																	"name": "lt",
																	"nodeType": "YulIdentifier",
																	"src": "10480:2:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "10480:15:6"
															},
															"nodeType": "YulForLoop",
															"post": {
																"nodeType": "YulBlock",
																"src": "10496:25:6",
																"statements": [
																	{
																		"nodeType": "YulAssignment",
																		"src": "10498:21:6",
																		"value": {
																			"arguments": [
																				{
																					"name": "src",
																					"nodeType": "YulIdentifier",
																					"src": "10509:3:6"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "10514:4:6",
																					"type": "",
																					"value": "0x20"
																				}
																			],
																			"functionName": {
																				"name": "add",
																				"nodeType": "YulIdentifier",
																				"src": "10505:3:6"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "10505:14:6"
																		},
																		"variableNames": [
																			{
																				"name": "src",
																				"nodeType": "YulIdentifier",
																				"src": "10498:3:6"
																			}
																		]
																	}
																]
															},
															"pre": {
																"nodeType": "YulBlock",
																"src": "10458:21:6",
																"statements": [
																	{
																		"nodeType": "YulVariableDeclaration",
																		"src": "10460:17:6",
																		"value": {
																			"name": "offset",
																			"nodeType": "YulIdentifier",
																			"src": "10471:6:6"
																		},
																		"variables": [
																			{
																				"name": "src",
																				"nodeType": "YulTypedName",
																				"src": "10464:3:6",
																				"type": ""
																			}
																		]
																	}
																]
															},
															"src": "10454:231:6"
														}
													]
												},
												"name": "abi_decode_available_length_t_array$_t_uint256_$dyn_memory_ptr_fromMemory",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nodeType": "YulTypedName",
														"src": "10042:6:6",
														"type": ""
													},
													{
														"name": "length",
														"nodeType": "YulTypedName",
														"src": "10050:6:6",
														"type": ""
													},
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "10058:3:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "array",
														"nodeType": "YulTypedName",
														"src": "10066:5:6",
														"type": ""
													}
												],
												"src": "9959:732:6"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "10802:297:6",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "10851:83:6",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d",
																				"nodeType": "YulIdentifier",
																				"src": "10853:77:6"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "10853:79:6"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "10853:79:6"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "10830:6:6"
																					},
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "10838:4:6",
																						"type": "",
																						"value": "0x1f"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "10826:3:6"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "10826:17:6"
																			},
																			{
																				"name": "end",
																				"nodeType": "YulIdentifier",
																				"src": "10845:3:6"
																			}
																		],
																		"functionName": {
																			"name": "slt",
																			"nodeType": "YulIdentifier",
																			"src": "10822:3:6"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "10822:27:6"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "10815:6:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "10815:35:6"
															},
															"nodeType": "YulIf",
															"src": "10812:122:6"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "10943:27:6",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nodeType": "YulIdentifier",
																		"src": "10963:6:6"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "10957:5:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "10957:13:6"
															},
															"variables": [
																{
																	"name": "length",
																	"nodeType": "YulTypedName",
																	"src": "10947:6:6",
																	"type": ""
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "10979:114:6",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "offset",
																				"nodeType": "YulIdentifier",
																				"src": "11066:6:6"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "11074:4:6",
																				"type": "",
																				"value": "0x20"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "11062:3:6"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "11062:17:6"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "11081:6:6"
																	},
																	{
																		"name": "end",
																		"nodeType": "YulIdentifier",
																		"src": "11089:3:6"
																	}
																],
																"functionName": {
																	"name": "abi_decode_available_length_t_array$_t_uint256_$dyn_memory_ptr_fromMemory",
																	"nodeType": "YulIdentifier",
																	"src": "10988:73:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "10988:105:6"
															},
															"variableNames": [
																{
																	"name": "array",
																	"nodeType": "YulIdentifier",
																	"src": "10979:5:6"
																}
															]
														}
													]
												},
												"name": "abi_decode_t_array$_t_uint256_$dyn_memory_ptr_fromMemory",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nodeType": "YulTypedName",
														"src": "10780:6:6",
														"type": ""
													},
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "10788:3:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "array",
														"nodeType": "YulTypedName",
														"src": "10796:5:6",
														"type": ""
													}
												],
												"src": "10714:385:6"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "11207:452:6",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "11253:83:6",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nodeType": "YulIdentifier",
																				"src": "11255:77:6"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "11255:79:6"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "11255:79:6"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "11228:7:6"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "11237:9:6"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "11224:3:6"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "11224:23:6"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "11249:2:6",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "11220:3:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "11220:32:6"
															},
															"nodeType": "YulIf",
															"src": "11217:119:6"
														},
														{
															"nodeType": "YulBlock",
															"src": "11346:306:6",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "11361:38:6",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "11385:9:6"
																					},
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "11396:1:6",
																						"type": "",
																						"value": "0"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "11381:3:6"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "11381:17:6"
																			}
																		],
																		"functionName": {
																			"name": "mload",
																			"nodeType": "YulIdentifier",
																			"src": "11375:5:6"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "11375:24:6"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "11365:6:6",
																			"type": ""
																		}
																	]
																},
																{
																	"body": {
																		"nodeType": "YulBlock",
																		"src": "11446:83:6",
																		"statements": [
																			{
																				"expression": {
																					"arguments": [],
																					"functionName": {
																						"name": "revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db",
																						"nodeType": "YulIdentifier",
																						"src": "11448:77:6"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "11448:79:6"
																				},
																				"nodeType": "YulExpressionStatement",
																				"src": "11448:79:6"
																			}
																		]
																	},
																	"condition": {
																		"arguments": [
																			{
																				"name": "offset",
																				"nodeType": "YulIdentifier",
																				"src": "11418:6:6"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "11426:18:6",
																				"type": "",
																				"value": "0xffffffffffffffff"
																			}
																		],
																		"functionName": {
																			"name": "gt",
																			"nodeType": "YulIdentifier",
																			"src": "11415:2:6"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "11415:30:6"
																	},
																	"nodeType": "YulIf",
																	"src": "11412:117:6"
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "11543:99:6",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "11614:9:6"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "11625:6:6"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "11610:3:6"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "11610:22:6"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "11634:7:6"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_array$_t_uint256_$dyn_memory_ptr_fromMemory",
																			"nodeType": "YulIdentifier",
																			"src": "11553:56:6"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "11553:89:6"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nodeType": "YulIdentifier",
																			"src": "11543:6:6"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_array$_t_uint256_$dyn_memory_ptr_fromMemory",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "11177:9:6",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "11188:7:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "11200:6:6",
														"type": ""
													}
												],
												"src": "11105:554:6"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "11919:553:6",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "11929:27:6",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "11941:9:6"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "11952:3:6",
																		"type": "",
																		"value": "192"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "11937:3:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "11937:19:6"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "11929:4:6"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "12010:6:6"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "12023:9:6"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "12034:1:6",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "12019:3:6"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "12019:17:6"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_address_to_t_address_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "11966:43:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "11966:71:6"
															},
															"nodeType": "YulExpressionStatement",
															"src": "11966:71:6"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value1",
																		"nodeType": "YulIdentifier",
																		"src": "12091:6:6"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "12104:9:6"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "12115:2:6",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "12100:3:6"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "12100:18:6"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "12047:43:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "12047:72:6"
															},
															"nodeType": "YulExpressionStatement",
															"src": "12047:72:6"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value2",
																		"nodeType": "YulIdentifier",
																		"src": "12181:6:6"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "12194:9:6"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "12205:2:6",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "12190:3:6"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "12190:18:6"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_rational_0_by_1_to_t_uint256_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "12129:51:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "12129:80:6"
															},
															"nodeType": "YulExpressionStatement",
															"src": "12129:80:6"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value3",
																		"nodeType": "YulIdentifier",
																		"src": "12271:6:6"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "12284:9:6"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "12295:2:6",
																				"type": "",
																				"value": "96"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "12280:3:6"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "12280:18:6"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_rational_0_by_1_to_t_uint256_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "12219:51:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "12219:80:6"
															},
															"nodeType": "YulExpressionStatement",
															"src": "12219:80:6"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value4",
																		"nodeType": "YulIdentifier",
																		"src": "12353:6:6"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "12366:9:6"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "12377:3:6",
																				"type": "",
																				"value": "128"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "12362:3:6"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "12362:19:6"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_address_to_t_address_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "12309:43:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "12309:73:6"
															},
															"nodeType": "YulExpressionStatement",
															"src": "12309:73:6"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value5",
																		"nodeType": "YulIdentifier",
																		"src": "12436:6:6"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "12449:9:6"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "12460:3:6",
																				"type": "",
																				"value": "160"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "12445:3:6"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "12445:19:6"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "12392:43:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "12392:73:6"
															},
															"nodeType": "YulExpressionStatement",
															"src": "12392:73:6"
														}
													]
												},
												"name": "abi_encode_tuple_t_address_t_uint256_t_rational_0_by_1_t_rational_0_by_1_t_address_t_uint256__to_t_address_t_uint256_t_uint256_t_uint256_t_address_t_uint256__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "11851:9:6",
														"type": ""
													},
													{
														"name": "value5",
														"nodeType": "YulTypedName",
														"src": "11863:6:6",
														"type": ""
													},
													{
														"name": "value4",
														"nodeType": "YulTypedName",
														"src": "11871:6:6",
														"type": ""
													},
													{
														"name": "value3",
														"nodeType": "YulTypedName",
														"src": "11879:6:6",
														"type": ""
													},
													{
														"name": "value2",
														"nodeType": "YulTypedName",
														"src": "11887:6:6",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "11895:6:6",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "11903:6:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "11914:4:6",
														"type": ""
													}
												],
												"src": "11665:807:6"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "12710:472:6",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "12720:27:6",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "12732:9:6"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "12743:3:6",
																		"type": "",
																		"value": "128"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "12728:3:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "12728:19:6"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "12720:4:6"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "12801:6:6"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "12814:9:6"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "12825:1:6",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "12810:3:6"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "12810:17:6"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "12757:43:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "12757:71:6"
															},
															"nodeType": "YulExpressionStatement",
															"src": "12757:71:6"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "12849:9:6"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "12860:2:6",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "12845:3:6"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "12845:18:6"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nodeType": "YulIdentifier",
																				"src": "12869:4:6"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "12875:9:6"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "12865:3:6"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "12865:20:6"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "12838:6:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "12838:48:6"
															},
															"nodeType": "YulExpressionStatement",
															"src": "12838:48:6"
														},
														{
															"nodeType": "YulAssignment",
															"src": "12895:116:6",
															"value": {
																"arguments": [
																	{
																		"name": "value1",
																		"nodeType": "YulIdentifier",
																		"src": "12997:6:6"
																	},
																	{
																		"name": "tail",
																		"nodeType": "YulIdentifier",
																		"src": "13006:4:6"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_array$_t_address_$dyn_memory_ptr_to_t_array$_t_address_$dyn_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "12903:93:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "12903:108:6"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "12895:4:6"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value2",
																		"nodeType": "YulIdentifier",
																		"src": "13065:6:6"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "13078:9:6"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "13089:2:6",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "13074:3:6"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "13074:18:6"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_address_to_t_address_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "13021:43:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "13021:72:6"
															},
															"nodeType": "YulExpressionStatement",
															"src": "13021:72:6"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value3",
																		"nodeType": "YulIdentifier",
																		"src": "13147:6:6"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "13160:9:6"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "13171:2:6",
																				"type": "",
																				"value": "96"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "13156:3:6"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "13156:18:6"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "13103:43:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "13103:72:6"
															},
															"nodeType": "YulExpressionStatement",
															"src": "13103:72:6"
														}
													]
												},
												"name": "abi_encode_tuple_t_uint256_t_array$_t_address_$dyn_memory_ptr_t_address_t_uint256__to_t_uint256_t_array$_t_address_$dyn_memory_ptr_t_address_t_uint256__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "12658:9:6",
														"type": ""
													},
													{
														"name": "value3",
														"nodeType": "YulTypedName",
														"src": "12670:6:6",
														"type": ""
													},
													{
														"name": "value2",
														"nodeType": "YulTypedName",
														"src": "12678:6:6",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "12686:6:6",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "12694:6:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "12705:4:6",
														"type": ""
													}
												],
												"src": "12478:704:6"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "13342:288:6",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "13352:26:6",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "13364:9:6"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "13375:2:6",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "13360:3:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "13360:18:6"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "13352:4:6"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "13432:6:6"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "13445:9:6"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "13456:1:6",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "13441:3:6"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "13441:17:6"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_address_to_t_address_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "13388:43:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "13388:71:6"
															},
															"nodeType": "YulExpressionStatement",
															"src": "13388:71:6"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value1",
																		"nodeType": "YulIdentifier",
																		"src": "13513:6:6"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "13526:9:6"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "13537:2:6",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "13522:3:6"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "13522:18:6"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_address_to_t_address_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "13469:43:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "13469:72:6"
															},
															"nodeType": "YulExpressionStatement",
															"src": "13469:72:6"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value2",
																		"nodeType": "YulIdentifier",
																		"src": "13595:6:6"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "13608:9:6"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "13619:2:6",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "13604:3:6"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "13604:18:6"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "13551:43:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "13551:72:6"
															},
															"nodeType": "YulExpressionStatement",
															"src": "13551:72:6"
														}
													]
												},
												"name": "abi_encode_tuple_t_address_t_address_t_uint256__to_t_address_t_address_t_uint256__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "13298:9:6",
														"type": ""
													},
													{
														"name": "value2",
														"nodeType": "YulTypedName",
														"src": "13310:6:6",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "13318:6:6",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "13326:6:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "13337:4:6",
														"type": ""
													}
												],
												"src": "13188:442:6"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "13762:206:6",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "13772:26:6",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "13784:9:6"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "13795:2:6",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "13780:3:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "13780:18:6"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "13772:4:6"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "13852:6:6"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "13865:9:6"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "13876:1:6",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "13861:3:6"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "13861:17:6"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_address_to_t_address_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "13808:43:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "13808:71:6"
															},
															"nodeType": "YulExpressionStatement",
															"src": "13808:71:6"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value1",
																		"nodeType": "YulIdentifier",
																		"src": "13933:6:6"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "13946:9:6"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "13957:2:6",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "13942:3:6"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "13942:18:6"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_address_to_t_address_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "13889:43:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "13889:72:6"
															},
															"nodeType": "YulExpressionStatement",
															"src": "13889:72:6"
														}
													]
												},
												"name": "abi_encode_tuple_t_address_t_address__to_t_address_t_address__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "13726:9:6",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "13738:6:6",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "13746:6:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "13757:4:6",
														"type": ""
													}
												],
												"src": "13636:332:6"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "14051:274:6",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "14097:83:6",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nodeType": "YulIdentifier",
																				"src": "14099:77:6"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "14099:79:6"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "14099:79:6"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "14072:7:6"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "14081:9:6"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "14068:3:6"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "14068:23:6"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "14093:2:6",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "14064:3:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "14064:32:6"
															},
															"nodeType": "YulIf",
															"src": "14061:119:6"
														},
														{
															"nodeType": "YulBlock",
															"src": "14190:128:6",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "14205:15:6",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "14219:1:6",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "14209:6:6",
																			"type": ""
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "14234:74:6",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "14280:9:6"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "14291:6:6"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "14276:3:6"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "14276:22:6"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "14300:7:6"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_uint256_fromMemory",
																			"nodeType": "YulIdentifier",
																			"src": "14244:31:6"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "14244:64:6"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nodeType": "YulIdentifier",
																			"src": "14234:6:6"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_uint256_fromMemory",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "14021:9:6",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "14032:7:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "14044:6:6",
														"type": ""
													}
												],
												"src": "13974:351:6"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "14427:73:6",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "14444:3:6"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "14449:6:6"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "14437:6:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "14437:19:6"
															},
															"nodeType": "YulExpressionStatement",
															"src": "14437:19:6"
														},
														{
															"nodeType": "YulAssignment",
															"src": "14465:29:6",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "14484:3:6"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "14489:4:6",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "14480:3:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "14480:14:6"
															},
															"variableNames": [
																{
																	"name": "updated_pos",
																	"nodeType": "YulIdentifier",
																	"src": "14465:11:6"
																}
															]
														}
													]
												},
												"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "14399:3:6",
														"type": ""
													},
													{
														"name": "length",
														"nodeType": "YulTypedName",
														"src": "14404:6:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "updated_pos",
														"nodeType": "YulTypedName",
														"src": "14415:11:6",
														"type": ""
													}
												],
												"src": "14331:169:6"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "14612:135:6",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nodeType": "YulIdentifier",
																				"src": "14634:6:6"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "14642:1:6",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "14630:3:6"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "14630:14:6"
																	},
																	{
																		"hexValue": "5361666545524332303a20617070726f76652066726f6d206e6f6e2d7a65726f",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "14646:34:6",
																		"type": "",
																		"value": "SafeERC20: approve from non-zero"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "14623:6:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "14623:58:6"
															},
															"nodeType": "YulExpressionStatement",
															"src": "14623:58:6"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nodeType": "YulIdentifier",
																				"src": "14702:6:6"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "14710:2:6",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "14698:3:6"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "14698:15:6"
																	},
																	{
																		"hexValue": "20746f206e6f6e2d7a65726f20616c6c6f77616e6365",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "14715:24:6",
																		"type": "",
																		"value": " to non-zero allowance"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "14691:6:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "14691:49:6"
															},
															"nodeType": "YulExpressionStatement",
															"src": "14691:49:6"
														}
													]
												},
												"name": "store_literal_in_memory_ef945ddb1bfdc0da870feb4560d868b047642b4ac7f2fb7f8b7c51cb4a411e25",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nodeType": "YulTypedName",
														"src": "14604:6:6",
														"type": ""
													}
												],
												"src": "14506:241:6"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "14899:220:6",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "14909:74:6",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "14975:3:6"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "14980:2:6",
																		"type": "",
																		"value": "54"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "14916:58:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "14916:67:6"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nodeType": "YulIdentifier",
																	"src": "14909:3:6"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "15081:3:6"
																	}
																],
																"functionName": {
																	"name": "store_literal_in_memory_ef945ddb1bfdc0da870feb4560d868b047642b4ac7f2fb7f8b7c51cb4a411e25",
																	"nodeType": "YulIdentifier",
																	"src": "14992:88:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "14992:93:6"
															},
															"nodeType": "YulExpressionStatement",
															"src": "14992:93:6"
														},
														{
															"nodeType": "YulAssignment",
															"src": "15094:19:6",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "15105:3:6"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "15110:2:6",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "15101:3:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "15101:12:6"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nodeType": "YulIdentifier",
																	"src": "15094:3:6"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_stringliteral_ef945ddb1bfdc0da870feb4560d868b047642b4ac7f2fb7f8b7c51cb4a411e25_to_t_string_memory_ptr_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "14887:3:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "14895:3:6",
														"type": ""
													}
												],
												"src": "14753:366:6"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "15296:248:6",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "15306:26:6",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "15318:9:6"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "15329:2:6",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "15314:3:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "15314:18:6"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "15306:4:6"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "15353:9:6"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "15364:1:6",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "15349:3:6"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "15349:17:6"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nodeType": "YulIdentifier",
																				"src": "15372:4:6"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "15378:9:6"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "15368:3:6"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "15368:20:6"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "15342:6:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "15342:47:6"
															},
															"nodeType": "YulExpressionStatement",
															"src": "15342:47:6"
														},
														{
															"nodeType": "YulAssignment",
															"src": "15398:139:6",
															"value": {
																"arguments": [
																	{
																		"name": "tail",
																		"nodeType": "YulIdentifier",
																		"src": "15532:4:6"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_stringliteral_ef945ddb1bfdc0da870feb4560d868b047642b4ac7f2fb7f8b7c51cb4a411e25_to_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "15406:124:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "15406:131:6"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "15398:4:6"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_ef945ddb1bfdc0da870feb4560d868b047642b4ac7f2fb7f8b7c51cb4a411e25__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "15276:9:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "15291:4:6",
														"type": ""
													}
												],
												"src": "15125:419:6"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "15676:206:6",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "15686:26:6",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "15698:9:6"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "15709:2:6",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "15694:3:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "15694:18:6"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "15686:4:6"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "15766:6:6"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "15779:9:6"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "15790:1:6",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "15775:3:6"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "15775:17:6"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_address_to_t_address_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "15722:43:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "15722:71:6"
															},
															"nodeType": "YulExpressionStatement",
															"src": "15722:71:6"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value1",
																		"nodeType": "YulIdentifier",
																		"src": "15847:6:6"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "15860:9:6"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "15871:2:6",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "15856:3:6"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "15856:18:6"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "15803:43:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "15803:72:6"
															},
															"nodeType": "YulExpressionStatement",
															"src": "15803:72:6"
														}
													]
												},
												"name": "abi_encode_tuple_t_address_t_uint256__to_t_address_t_uint256__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "15640:9:6",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "15652:6:6",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "15660:6:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "15671:4:6",
														"type": ""
													}
												],
												"src": "15550:332:6"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "15930:48:6",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "15940:32:6",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "15965:5:6"
																			}
																		],
																		"functionName": {
																			"name": "iszero",
																			"nodeType": "YulIdentifier",
																			"src": "15958:6:6"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "15958:13:6"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "15951:6:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "15951:21:6"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nodeType": "YulIdentifier",
																	"src": "15940:7:6"
																}
															]
														}
													]
												},
												"name": "cleanup_t_bool",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "15912:5:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nodeType": "YulTypedName",
														"src": "15922:7:6",
														"type": ""
													}
												],
												"src": "15888:90:6"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "16024:76:6",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "16078:16:6",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "16087:1:6",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "16090:1:6",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "16080:6:6"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "16080:12:6"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "16080:12:6"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "16047:5:6"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nodeType": "YulIdentifier",
																						"src": "16069:5:6"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_bool",
																					"nodeType": "YulIdentifier",
																					"src": "16054:14:6"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "16054:21:6"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nodeType": "YulIdentifier",
																			"src": "16044:2:6"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "16044:32:6"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "16037:6:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "16037:40:6"
															},
															"nodeType": "YulIf",
															"src": "16034:60:6"
														}
													]
												},
												"name": "validator_revert_t_bool",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "16017:5:6",
														"type": ""
													}
												],
												"src": "15984:116:6"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "16166:77:6",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "16176:22:6",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nodeType": "YulIdentifier",
																		"src": "16191:6:6"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "16185:5:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "16185:13:6"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nodeType": "YulIdentifier",
																	"src": "16176:5:6"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "16231:5:6"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_bool",
																	"nodeType": "YulIdentifier",
																	"src": "16207:23:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "16207:30:6"
															},
															"nodeType": "YulExpressionStatement",
															"src": "16207:30:6"
														}
													]
												},
												"name": "abi_decode_t_bool_fromMemory",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nodeType": "YulTypedName",
														"src": "16144:6:6",
														"type": ""
													},
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "16152:3:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "16160:5:6",
														"type": ""
													}
												],
												"src": "16106:137:6"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "16323:271:6",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "16369:83:6",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nodeType": "YulIdentifier",
																				"src": "16371:77:6"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "16371:79:6"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "16371:79:6"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "16344:7:6"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "16353:9:6"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "16340:3:6"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "16340:23:6"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "16365:2:6",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "16336:3:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "16336:32:6"
															},
															"nodeType": "YulIf",
															"src": "16333:119:6"
														},
														{
															"nodeType": "YulBlock",
															"src": "16462:125:6",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "16477:15:6",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "16491:1:6",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "16481:6:6",
																			"type": ""
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "16506:71:6",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "16549:9:6"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "16560:6:6"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "16545:3:6"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "16545:22:6"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "16569:7:6"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_bool_fromMemory",
																			"nodeType": "YulIdentifier",
																			"src": "16516:28:6"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "16516:61:6"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nodeType": "YulIdentifier",
																			"src": "16506:6:6"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_bool_fromMemory",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "16293:9:6",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "16304:7:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "16316:6:6",
														"type": ""
													}
												],
												"src": "16249:345:6"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "16706:123:6",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nodeType": "YulIdentifier",
																				"src": "16728:6:6"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "16736:1:6",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "16724:3:6"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "16724:14:6"
																	},
																	{
																		"hexValue": "5361666545524332303a204552433230206f7065726174696f6e20646964206e",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "16740:34:6",
																		"type": "",
																		"value": "SafeERC20: ERC20 operation did n"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "16717:6:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "16717:58:6"
															},
															"nodeType": "YulExpressionStatement",
															"src": "16717:58:6"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nodeType": "YulIdentifier",
																				"src": "16796:6:6"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "16804:2:6",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "16792:3:6"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "16792:15:6"
																	},
																	{
																		"hexValue": "6f742073756363656564",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "16809:12:6",
																		"type": "",
																		"value": "ot succeed"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "16785:6:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "16785:37:6"
															},
															"nodeType": "YulExpressionStatement",
															"src": "16785:37:6"
														}
													]
												},
												"name": "store_literal_in_memory_e11ad79d1e4a7f2e5f376964cb99e8e8f7904e3fc16a109f7a7ecb9aa7956dcd",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nodeType": "YulTypedName",
														"src": "16698:6:6",
														"type": ""
													}
												],
												"src": "16600:229:6"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "16981:220:6",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "16991:74:6",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "17057:3:6"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "17062:2:6",
																		"type": "",
																		"value": "42"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "16998:58:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "16998:67:6"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nodeType": "YulIdentifier",
																	"src": "16991:3:6"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "17163:3:6"
																	}
																],
																"functionName": {
																	"name": "store_literal_in_memory_e11ad79d1e4a7f2e5f376964cb99e8e8f7904e3fc16a109f7a7ecb9aa7956dcd",
																	"nodeType": "YulIdentifier",
																	"src": "17074:88:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "17074:93:6"
															},
															"nodeType": "YulExpressionStatement",
															"src": "17074:93:6"
														},
														{
															"nodeType": "YulAssignment",
															"src": "17176:19:6",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "17187:3:6"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "17192:2:6",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "17183:3:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "17183:12:6"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nodeType": "YulIdentifier",
																	"src": "17176:3:6"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_stringliteral_e11ad79d1e4a7f2e5f376964cb99e8e8f7904e3fc16a109f7a7ecb9aa7956dcd_to_t_string_memory_ptr_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "16969:3:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "16977:3:6",
														"type": ""
													}
												],
												"src": "16835:366:6"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "17378:248:6",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "17388:26:6",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "17400:9:6"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "17411:2:6",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "17396:3:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "17396:18:6"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "17388:4:6"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "17435:9:6"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "17446:1:6",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "17431:3:6"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "17431:17:6"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nodeType": "YulIdentifier",
																				"src": "17454:4:6"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "17460:9:6"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "17450:3:6"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "17450:20:6"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "17424:6:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "17424:47:6"
															},
															"nodeType": "YulExpressionStatement",
															"src": "17424:47:6"
														},
														{
															"nodeType": "YulAssignment",
															"src": "17480:139:6",
															"value": {
																"arguments": [
																	{
																		"name": "tail",
																		"nodeType": "YulIdentifier",
																		"src": "17614:4:6"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_stringliteral_e11ad79d1e4a7f2e5f376964cb99e8e8f7904e3fc16a109f7a7ecb9aa7956dcd_to_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "17488:124:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "17488:131:6"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "17480:4:6"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_e11ad79d1e4a7f2e5f376964cb99e8e8f7904e3fc16a109f7a7ecb9aa7956dcd__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "17358:9:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "17373:4:6",
														"type": ""
													}
												],
												"src": "17207:419:6"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "17738:119:6",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nodeType": "YulIdentifier",
																				"src": "17760:6:6"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "17768:1:6",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "17756:3:6"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "17756:14:6"
																	},
																	{
																		"hexValue": "416464726573733a20696e73756666696369656e742062616c616e636520666f",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "17772:34:6",
																		"type": "",
																		"value": "Address: insufficient balance fo"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "17749:6:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "17749:58:6"
															},
															"nodeType": "YulExpressionStatement",
															"src": "17749:58:6"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nodeType": "YulIdentifier",
																				"src": "17828:6:6"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "17836:2:6",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "17824:3:6"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "17824:15:6"
																	},
																	{
																		"hexValue": "722063616c6c",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "17841:8:6",
																		"type": "",
																		"value": "r call"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "17817:6:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "17817:33:6"
															},
															"nodeType": "YulExpressionStatement",
															"src": "17817:33:6"
														}
													]
												},
												"name": "store_literal_in_memory_565f1a77334fc4792800921178c71e4521acffab18ff9e7885b49377ee80ab4c",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nodeType": "YulTypedName",
														"src": "17730:6:6",
														"type": ""
													}
												],
												"src": "17632:225:6"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "18009:220:6",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "18019:74:6",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "18085:3:6"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "18090:2:6",
																		"type": "",
																		"value": "38"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "18026:58:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "18026:67:6"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nodeType": "YulIdentifier",
																	"src": "18019:3:6"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "18191:3:6"
																	}
																],
																"functionName": {
																	"name": "store_literal_in_memory_565f1a77334fc4792800921178c71e4521acffab18ff9e7885b49377ee80ab4c",
																	"nodeType": "YulIdentifier",
																	"src": "18102:88:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "18102:93:6"
															},
															"nodeType": "YulExpressionStatement",
															"src": "18102:93:6"
														},
														{
															"nodeType": "YulAssignment",
															"src": "18204:19:6",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "18215:3:6"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "18220:2:6",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "18211:3:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "18211:12:6"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nodeType": "YulIdentifier",
																	"src": "18204:3:6"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_stringliteral_565f1a77334fc4792800921178c71e4521acffab18ff9e7885b49377ee80ab4c_to_t_string_memory_ptr_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "17997:3:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "18005:3:6",
														"type": ""
													}
												],
												"src": "17863:366:6"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "18406:248:6",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "18416:26:6",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "18428:9:6"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "18439:2:6",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "18424:3:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "18424:18:6"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "18416:4:6"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "18463:9:6"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "18474:1:6",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "18459:3:6"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "18459:17:6"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nodeType": "YulIdentifier",
																				"src": "18482:4:6"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "18488:9:6"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "18478:3:6"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "18478:20:6"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "18452:6:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "18452:47:6"
															},
															"nodeType": "YulExpressionStatement",
															"src": "18452:47:6"
														},
														{
															"nodeType": "YulAssignment",
															"src": "18508:139:6",
															"value": {
																"arguments": [
																	{
																		"name": "tail",
																		"nodeType": "YulIdentifier",
																		"src": "18642:4:6"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_stringliteral_565f1a77334fc4792800921178c71e4521acffab18ff9e7885b49377ee80ab4c_to_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "18516:124:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "18516:131:6"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "18508:4:6"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_565f1a77334fc4792800921178c71e4521acffab18ff9e7885b49377ee80ab4c__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "18386:9:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "18401:4:6",
														"type": ""
													}
												],
												"src": "18235:419:6"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "18718:40:6",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "18729:22:6",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "18745:5:6"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "18739:5:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "18739:12:6"
															},
															"variableNames": [
																{
																	"name": "length",
																	"nodeType": "YulIdentifier",
																	"src": "18729:6:6"
																}
															]
														}
													]
												},
												"name": "array_length_t_bytes_memory_ptr",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "18701:5:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "length",
														"nodeType": "YulTypedName",
														"src": "18711:6:6",
														"type": ""
													}
												],
												"src": "18660:98:6"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "18877:34:6",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "18887:18:6",
															"value": {
																"name": "pos",
																"nodeType": "YulIdentifier",
																"src": "18902:3:6"
															},
															"variableNames": [
																{
																	"name": "updated_pos",
																	"nodeType": "YulIdentifier",
																	"src": "18887:11:6"
																}
															]
														}
													]
												},
												"name": "array_storeLengthForEncoding_t_bytes_memory_ptr_nonPadded_inplace_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "18849:3:6",
														"type": ""
													},
													{
														"name": "length",
														"nodeType": "YulTypedName",
														"src": "18854:6:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "updated_pos",
														"nodeType": "YulTypedName",
														"src": "18865:11:6",
														"type": ""
													}
												],
												"src": "18764:147:6"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "18979:184:6",
													"statements": [
														{
															"nodeType": "YulVariableDeclaration",
															"src": "18989:10:6",
															"value": {
																"kind": "number",
																"nodeType": "YulLiteral",
																"src": "18998:1:6",
																"type": "",
																"value": "0"
															},
															"variables": [
																{
																	"name": "i",
																	"nodeType": "YulTypedName",
																	"src": "18993:1:6",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "19058:63:6",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"arguments": [
																						{
																							"name": "dst",
																							"nodeType": "YulIdentifier",
																							"src": "19083:3:6"
																						},
																						{
																							"name": "i",
																							"nodeType": "YulIdentifier",
																							"src": "19088:1:6"
																						}
																					],
																					"functionName": {
																						"name": "add",
																						"nodeType": "YulIdentifier",
																						"src": "19079:3:6"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "19079:11:6"
																				},
																				{
																					"arguments": [
																						{
																							"arguments": [
																								{
																									"name": "src",
																									"nodeType": "YulIdentifier",
																									"src": "19102:3:6"
																								},
																								{
																									"name": "i",
																									"nodeType": "YulIdentifier",
																									"src": "19107:1:6"
																								}
																							],
																							"functionName": {
																								"name": "add",
																								"nodeType": "YulIdentifier",
																								"src": "19098:3:6"
																							},
																							"nodeType": "YulFunctionCall",
																							"src": "19098:11:6"
																						}
																					],
																					"functionName": {
																						"name": "mload",
																						"nodeType": "YulIdentifier",
																						"src": "19092:5:6"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "19092:18:6"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nodeType": "YulIdentifier",
																				"src": "19072:6:6"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "19072:39:6"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "19072:39:6"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "i",
																		"nodeType": "YulIdentifier",
																		"src": "19019:1:6"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "19022:6:6"
																	}
																],
																"functionName": {
																	"name": "lt",
																	"nodeType": "YulIdentifier",
																	"src": "19016:2:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "19016:13:6"
															},
															"nodeType": "YulForLoop",
															"post": {
																"nodeType": "YulBlock",
																"src": "19030:19:6",
																"statements": [
																	{
																		"nodeType": "YulAssignment",
																		"src": "19032:15:6",
																		"value": {
																			"arguments": [
																				{
																					"name": "i",
																					"nodeType": "YulIdentifier",
																					"src": "19041:1:6"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "19044:2:6",
																					"type": "",
																					"value": "32"
																				}
																			],
																			"functionName": {
																				"name": "add",
																				"nodeType": "YulIdentifier",
																				"src": "19037:3:6"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "19037:10:6"
																		},
																		"variableNames": [
																			{
																				"name": "i",
																				"nodeType": "YulIdentifier",
																				"src": "19032:1:6"
																			}
																		]
																	}
																]
															},
															"pre": {
																"nodeType": "YulBlock",
																"src": "19012:3:6",
																"statements": []
															},
															"src": "19008:113:6"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dst",
																				"nodeType": "YulIdentifier",
																				"src": "19141:3:6"
																			},
																			{
																				"name": "length",
																				"nodeType": "YulIdentifier",
																				"src": "19146:6:6"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "19137:3:6"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "19137:16:6"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "19155:1:6",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "19130:6:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "19130:27:6"
															},
															"nodeType": "YulExpressionStatement",
															"src": "19130:27:6"
														}
													]
												},
												"name": "copy_memory_to_memory_with_cleanup",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "src",
														"nodeType": "YulTypedName",
														"src": "18961:3:6",
														"type": ""
													},
													{
														"name": "dst",
														"nodeType": "YulTypedName",
														"src": "18966:3:6",
														"type": ""
													},
													{
														"name": "length",
														"nodeType": "YulTypedName",
														"src": "18971:6:6",
														"type": ""
													}
												],
												"src": "18917:246:6"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "19277:278:6",
													"statements": [
														{
															"nodeType": "YulVariableDeclaration",
															"src": "19287:52:6",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "19333:5:6"
																	}
																],
																"functionName": {
																	"name": "array_length_t_bytes_memory_ptr",
																	"nodeType": "YulIdentifier",
																	"src": "19301:31:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "19301:38:6"
															},
															"variables": [
																{
																	"name": "length",
																	"nodeType": "YulTypedName",
																	"src": "19291:6:6",
																	"type": ""
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "19348:95:6",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "19431:3:6"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "19436:6:6"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_bytes_memory_ptr_nonPadded_inplace_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "19355:75:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "19355:88:6"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nodeType": "YulIdentifier",
																	"src": "19348:3:6"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "19491:5:6"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "19498:4:6",
																				"type": "",
																				"value": "0x20"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "19487:3:6"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "19487:16:6"
																	},
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "19505:3:6"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "19510:6:6"
																	}
																],
																"functionName": {
																	"name": "copy_memory_to_memory_with_cleanup",
																	"nodeType": "YulIdentifier",
																	"src": "19452:34:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "19452:65:6"
															},
															"nodeType": "YulExpressionStatement",
															"src": "19452:65:6"
														},
														{
															"nodeType": "YulAssignment",
															"src": "19526:23:6",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "19537:3:6"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "19542:6:6"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "19533:3:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "19533:16:6"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nodeType": "YulIdentifier",
																	"src": "19526:3:6"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_bytes_memory_ptr_to_t_bytes_memory_ptr_nonPadded_inplace_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "19258:5:6",
														"type": ""
													},
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "19265:3:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "19273:3:6",
														"type": ""
													}
												],
												"src": "19169:386:6"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "19695:137:6",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "19706:100:6",
															"value": {
																"arguments": [
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "19793:6:6"
																	},
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "19802:3:6"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_bytes_memory_ptr_to_t_bytes_memory_ptr_nonPadded_inplace_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "19713:79:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "19713:93:6"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nodeType": "YulIdentifier",
																	"src": "19706:3:6"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "19816:10:6",
															"value": {
																"name": "pos",
																"nodeType": "YulIdentifier",
																"src": "19823:3:6"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nodeType": "YulIdentifier",
																	"src": "19816:3:6"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_packed_t_bytes_memory_ptr__to_t_bytes_memory_ptr__nonPadded_inplace_fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "19674:3:6",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "19680:6:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "19691:3:6",
														"type": ""
													}
												],
												"src": "19561:271:6"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "19944:73:6",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nodeType": "YulIdentifier",
																				"src": "19966:6:6"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "19974:1:6",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "19962:3:6"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "19962:14:6"
																	},
																	{
																		"hexValue": "416464726573733a2063616c6c20746f206e6f6e2d636f6e7472616374",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "19978:31:6",
																		"type": "",
																		"value": "Address: call to non-contract"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "19955:6:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "19955:55:6"
															},
															"nodeType": "YulExpressionStatement",
															"src": "19955:55:6"
														}
													]
												},
												"name": "store_literal_in_memory_cc2e4e38850b7c0a3e942cfed89b71c77302df25bcb2ec297a0c4ff9ff6b90ad",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nodeType": "YulTypedName",
														"src": "19936:6:6",
														"type": ""
													}
												],
												"src": "19838:179:6"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "20169:220:6",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "20179:74:6",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "20245:3:6"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "20250:2:6",
																		"type": "",
																		"value": "29"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "20186:58:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "20186:67:6"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nodeType": "YulIdentifier",
																	"src": "20179:3:6"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "20351:3:6"
																	}
																],
																"functionName": {
																	"name": "store_literal_in_memory_cc2e4e38850b7c0a3e942cfed89b71c77302df25bcb2ec297a0c4ff9ff6b90ad",
																	"nodeType": "YulIdentifier",
																	"src": "20262:88:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "20262:93:6"
															},
															"nodeType": "YulExpressionStatement",
															"src": "20262:93:6"
														},
														{
															"nodeType": "YulAssignment",
															"src": "20364:19:6",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "20375:3:6"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "20380:2:6",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "20371:3:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "20371:12:6"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nodeType": "YulIdentifier",
																	"src": "20364:3:6"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_stringliteral_cc2e4e38850b7c0a3e942cfed89b71c77302df25bcb2ec297a0c4ff9ff6b90ad_to_t_string_memory_ptr_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "20157:3:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "20165:3:6",
														"type": ""
													}
												],
												"src": "20023:366:6"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "20566:248:6",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "20576:26:6",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "20588:9:6"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "20599:2:6",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "20584:3:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "20584:18:6"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "20576:4:6"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "20623:9:6"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "20634:1:6",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "20619:3:6"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "20619:17:6"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nodeType": "YulIdentifier",
																				"src": "20642:4:6"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "20648:9:6"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "20638:3:6"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "20638:20:6"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "20612:6:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "20612:47:6"
															},
															"nodeType": "YulExpressionStatement",
															"src": "20612:47:6"
														},
														{
															"nodeType": "YulAssignment",
															"src": "20668:139:6",
															"value": {
																"arguments": [
																	{
																		"name": "tail",
																		"nodeType": "YulIdentifier",
																		"src": "20802:4:6"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_stringliteral_cc2e4e38850b7c0a3e942cfed89b71c77302df25bcb2ec297a0c4ff9ff6b90ad_to_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "20676:124:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "20676:131:6"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "20668:4:6"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_cc2e4e38850b7c0a3e942cfed89b71c77302df25bcb2ec297a0c4ff9ff6b90ad__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "20546:9:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "20561:4:6",
														"type": ""
													}
												],
												"src": "20395:419:6"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "20879:40:6",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "20890:22:6",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "20906:5:6"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "20900:5:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "20900:12:6"
															},
															"variableNames": [
																{
																	"name": "length",
																	"nodeType": "YulIdentifier",
																	"src": "20890:6:6"
																}
															]
														}
													]
												},
												"name": "array_length_t_string_memory_ptr",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "20862:5:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "length",
														"nodeType": "YulTypedName",
														"src": "20872:6:6",
														"type": ""
													}
												],
												"src": "20820:99:6"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "21017:285:6",
													"statements": [
														{
															"nodeType": "YulVariableDeclaration",
															"src": "21027:53:6",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "21074:5:6"
																	}
																],
																"functionName": {
																	"name": "array_length_t_string_memory_ptr",
																	"nodeType": "YulIdentifier",
																	"src": "21041:32:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "21041:39:6"
															},
															"variables": [
																{
																	"name": "length",
																	"nodeType": "YulTypedName",
																	"src": "21031:6:6",
																	"type": ""
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "21089:78:6",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "21155:3:6"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "21160:6:6"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "21096:58:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "21096:71:6"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nodeType": "YulIdentifier",
																	"src": "21089:3:6"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "21215:5:6"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "21222:4:6",
																				"type": "",
																				"value": "0x20"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "21211:3:6"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "21211:16:6"
																	},
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "21229:3:6"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "21234:6:6"
																	}
																],
																"functionName": {
																	"name": "copy_memory_to_memory_with_cleanup",
																	"nodeType": "YulIdentifier",
																	"src": "21176:34:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "21176:65:6"
															},
															"nodeType": "YulExpressionStatement",
															"src": "21176:65:6"
														},
														{
															"nodeType": "YulAssignment",
															"src": "21250:46:6",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "21261:3:6"
																	},
																	{
																		"arguments": [
																			{
																				"name": "length",
																				"nodeType": "YulIdentifier",
																				"src": "21288:6:6"
																			}
																		],
																		"functionName": {
																			"name": "round_up_to_mul_of_32",
																			"nodeType": "YulIdentifier",
																			"src": "21266:21:6"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "21266:29:6"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "21257:3:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "21257:39:6"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nodeType": "YulIdentifier",
																	"src": "21250:3:6"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "20998:5:6",
														"type": ""
													},
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "21005:3:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "21013:3:6",
														"type": ""
													}
												],
												"src": "20925:377:6"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "21426:195:6",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "21436:26:6",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "21448:9:6"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "21459:2:6",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "21444:3:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "21444:18:6"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "21436:4:6"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "21483:9:6"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "21494:1:6",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "21479:3:6"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "21479:17:6"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nodeType": "YulIdentifier",
																				"src": "21502:4:6"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "21508:9:6"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "21498:3:6"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "21498:20:6"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "21472:6:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "21472:47:6"
															},
															"nodeType": "YulExpressionStatement",
															"src": "21472:47:6"
														},
														{
															"nodeType": "YulAssignment",
															"src": "21528:86:6",
															"value": {
																"arguments": [
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "21600:6:6"
																	},
																	{
																		"name": "tail",
																		"nodeType": "YulIdentifier",
																		"src": "21609:4:6"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "21536:63:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "21536:78:6"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "21528:4:6"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "21398:9:6",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "21410:6:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "21421:4:6",
														"type": ""
													}
												],
												"src": "21308:313:6"
											}
										]
									},
									"contents": "{\n\n    function allocate_unbounded() -> memPtr {\n        memPtr := mload(64)\n    }\n\n    function revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() {\n        revert(0, 0)\n    }\n\n    function revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() {\n        revert(0, 0)\n    }\n\n    function cleanup_t_uint160(value) -> cleaned {\n        cleaned := and(value, 0xffffffffffffffffffffffffffffffffffffffff)\n    }\n\n    function cleanup_t_address(value) -> cleaned {\n        cleaned := cleanup_t_uint160(value)\n    }\n\n    function validator_revert_t_address(value) {\n        if iszero(eq(value, cleanup_t_address(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_address(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_address(value)\n    }\n\n    function cleanup_t_uint256(value) -> cleaned {\n        cleaned := value\n    }\n\n    function validator_revert_t_uint256(value) {\n        if iszero(eq(value, cleanup_t_uint256(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_uint256(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_uint256(value)\n    }\n\n    function abi_decode_tuple_t_addresst_uint256t_addresst_uint256(headStart, dataEnd) -> value0, value1, value2, value3 {\n        if slt(sub(dataEnd, headStart), 128) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 32\n\n            value1 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 64\n\n            value2 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 96\n\n            value3 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_encode_t_address_to_t_address_fromStack(value, pos) {\n        mstore(pos, cleanup_t_address(value))\n    }\n\n    function abi_encode_tuple_t_address__to_t_address__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_address_to_t_address_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function abi_decode_tuple_t_addresst_addresst_uint256t_uint256(headStart, dataEnd) -> value0, value1, value2, value3 {\n        if slt(sub(dataEnd, headStart), 128) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 32\n\n            value1 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 64\n\n            value2 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 96\n\n            value3 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_decode_tuple_t_addresst_uint256(headStart, dataEnd) -> value0, value1 {\n        if slt(sub(dataEnd, headStart), 64) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 32\n\n            value1 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_encode_t_uint256_to_t_uint256_fromStack(value, pos) {\n        mstore(pos, cleanup_t_uint256(value))\n    }\n\n    function cleanup_t_rational_0_by_1(value) -> cleaned {\n        cleaned := value\n    }\n\n    function identity(value) -> ret {\n        ret := value\n    }\n\n    function convert_t_rational_0_by_1_to_t_uint256(value) -> converted {\n        converted := cleanup_t_uint256(identity(cleanup_t_rational_0_by_1(value)))\n    }\n\n    function abi_encode_t_rational_0_by_1_to_t_uint256_fromStack(value, pos) {\n        mstore(pos, convert_t_rational_0_by_1_to_t_uint256(value))\n    }\n\n    function abi_encode_tuple_t_address_t_address_t_uint256_t_uint256_t_rational_0_by_1_t_rational_0_by_1_t_address_t_uint256__to_t_address_t_address_t_uint256_t_uint256_t_uint256_t_uint256_t_address_t_uint256__fromStack_reversed(headStart , value7, value6, value5, value4, value3, value2, value1, value0) -> tail {\n        tail := add(headStart, 256)\n\n        abi_encode_t_address_to_t_address_fromStack(value0,  add(headStart, 0))\n\n        abi_encode_t_address_to_t_address_fromStack(value1,  add(headStart, 32))\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value2,  add(headStart, 64))\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value3,  add(headStart, 96))\n\n        abi_encode_t_rational_0_by_1_to_t_uint256_fromStack(value4,  add(headStart, 128))\n\n        abi_encode_t_rational_0_by_1_to_t_uint256_fromStack(value5,  add(headStart, 160))\n\n        abi_encode_t_address_to_t_address_fromStack(value6,  add(headStart, 192))\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value7,  add(headStart, 224))\n\n    }\n\n    function abi_decode_t_uint256_fromMemory(offset, end) -> value {\n        value := mload(offset)\n        validator_revert_t_uint256(value)\n    }\n\n    function abi_decode_tuple_t_uint256t_uint256t_uint256_fromMemory(headStart, dataEnd) -> value0, value1, value2 {\n        if slt(sub(dataEnd, headStart), 96) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_uint256_fromMemory(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 32\n\n            value1 := abi_decode_t_uint256_fromMemory(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 64\n\n            value2 := abi_decode_t_uint256_fromMemory(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function panic_error_0x41() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x41)\n        revert(0, 0x24)\n    }\n\n    function panic_error_0x32() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x32)\n        revert(0, 0x24)\n    }\n\n    function array_length_t_array$_t_address_$dyn_memory_ptr(value) -> length {\n\n        length := mload(value)\n\n    }\n\n    function array_storeLengthForEncoding_t_array$_t_address_$dyn_memory_ptr_fromStack(pos, length) -> updated_pos {\n        mstore(pos, length)\n        updated_pos := add(pos, 0x20)\n    }\n\n    function array_dataslot_t_array$_t_address_$dyn_memory_ptr(ptr) -> data {\n        data := ptr\n\n        data := add(ptr, 0x20)\n\n    }\n\n    function abi_encode_t_address_to_t_address(value, pos) {\n        mstore(pos, cleanup_t_address(value))\n    }\n\n    function abi_encodeUpdatedPos_t_address_to_t_address(value0, pos) -> updatedPos {\n        abi_encode_t_address_to_t_address(value0, pos)\n        updatedPos := add(pos, 0x20)\n    }\n\n    function array_nextElement_t_array$_t_address_$dyn_memory_ptr(ptr) -> next {\n        next := add(ptr, 0x20)\n    }\n\n    // address[] -> address[]\n    function abi_encode_t_array$_t_address_$dyn_memory_ptr_to_t_array$_t_address_$dyn_memory_ptr_fromStack(value, pos)  -> end  {\n        let length := array_length_t_array$_t_address_$dyn_memory_ptr(value)\n        pos := array_storeLengthForEncoding_t_array$_t_address_$dyn_memory_ptr_fromStack(pos, length)\n        let baseRef := array_dataslot_t_array$_t_address_$dyn_memory_ptr(value)\n        let srcPtr := baseRef\n        for { let i := 0 } lt(i, length) { i := add(i, 1) }\n        {\n            let elementValue0 := mload(srcPtr)\n            pos := abi_encodeUpdatedPos_t_address_to_t_address(elementValue0, pos)\n            srcPtr := array_nextElement_t_array$_t_address_$dyn_memory_ptr(srcPtr)\n        }\n        end := pos\n    }\n\n    function abi_encode_tuple_t_uint256_t_uint256_t_array$_t_address_$dyn_memory_ptr_t_address_t_uint256__to_t_uint256_t_uint256_t_array$_t_address_$dyn_memory_ptr_t_address_t_uint256__fromStack_reversed(headStart , value4, value3, value2, value1, value0) -> tail {\n        tail := add(headStart, 160)\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value0,  add(headStart, 0))\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value1,  add(headStart, 32))\n\n        mstore(add(headStart, 64), sub(tail, headStart))\n        tail := abi_encode_t_array$_t_address_$dyn_memory_ptr_to_t_array$_t_address_$dyn_memory_ptr_fromStack(value2,  tail)\n\n        abi_encode_t_address_to_t_address_fromStack(value3,  add(headStart, 96))\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value4,  add(headStart, 128))\n\n    }\n\n    function revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d() {\n        revert(0, 0)\n    }\n\n    function round_up_to_mul_of_32(value) -> result {\n        result := and(add(value, 31), not(31))\n    }\n\n    function finalize_allocation(memPtr, size) {\n        let newFreePtr := add(memPtr, round_up_to_mul_of_32(size))\n        // protect against overflow\n        if or(gt(newFreePtr, 0xffffffffffffffff), lt(newFreePtr, memPtr)) { panic_error_0x41() }\n        mstore(64, newFreePtr)\n    }\n\n    function allocate_memory(size) -> memPtr {\n        memPtr := allocate_unbounded()\n        finalize_allocation(memPtr, size)\n    }\n\n    function array_allocation_size_t_array$_t_uint256_$dyn_memory_ptr(length) -> size {\n        // Make sure we can allocate memory without overflow\n        if gt(length, 0xffffffffffffffff) { panic_error_0x41() }\n\n        size := mul(length, 0x20)\n\n        // add length slot\n        size := add(size, 0x20)\n\n    }\n\n    function revert_error_81385d8c0b31fffe14be1da910c8bd3a80be4cfa248e04f42ec0faea3132a8ef() {\n        revert(0, 0)\n    }\n\n    // uint256[]\n    function abi_decode_available_length_t_array$_t_uint256_$dyn_memory_ptr_fromMemory(offset, length, end) -> array {\n        array := allocate_memory(array_allocation_size_t_array$_t_uint256_$dyn_memory_ptr(length))\n        let dst := array\n\n        mstore(array, length)\n        dst := add(array, 0x20)\n\n        let srcEnd := add(offset, mul(length, 0x20))\n        if gt(srcEnd, end) {\n            revert_error_81385d8c0b31fffe14be1da910c8bd3a80be4cfa248e04f42ec0faea3132a8ef()\n        }\n        for { let src := offset } lt(src, srcEnd) { src := add(src, 0x20) }\n        {\n\n            let elementPos := src\n\n            mstore(dst, abi_decode_t_uint256_fromMemory(elementPos, end))\n            dst := add(dst, 0x20)\n        }\n    }\n\n    // uint256[]\n    function abi_decode_t_array$_t_uint256_$dyn_memory_ptr_fromMemory(offset, end) -> array {\n        if iszero(slt(add(offset, 0x1f), end)) { revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d() }\n        let length := mload(offset)\n        array := abi_decode_available_length_t_array$_t_uint256_$dyn_memory_ptr_fromMemory(add(offset, 0x20), length, end)\n    }\n\n    function abi_decode_tuple_t_array$_t_uint256_$dyn_memory_ptr_fromMemory(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := mload(add(headStart, 0))\n            if gt(offset, 0xffffffffffffffff) { revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() }\n\n            value0 := abi_decode_t_array$_t_uint256_$dyn_memory_ptr_fromMemory(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_encode_tuple_t_address_t_uint256_t_rational_0_by_1_t_rational_0_by_1_t_address_t_uint256__to_t_address_t_uint256_t_uint256_t_uint256_t_address_t_uint256__fromStack_reversed(headStart , value5, value4, value3, value2, value1, value0) -> tail {\n        tail := add(headStart, 192)\n\n        abi_encode_t_address_to_t_address_fromStack(value0,  add(headStart, 0))\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value1,  add(headStart, 32))\n\n        abi_encode_t_rational_0_by_1_to_t_uint256_fromStack(value2,  add(headStart, 64))\n\n        abi_encode_t_rational_0_by_1_to_t_uint256_fromStack(value3,  add(headStart, 96))\n\n        abi_encode_t_address_to_t_address_fromStack(value4,  add(headStart, 128))\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value5,  add(headStart, 160))\n\n    }\n\n    function abi_encode_tuple_t_uint256_t_array$_t_address_$dyn_memory_ptr_t_address_t_uint256__to_t_uint256_t_array$_t_address_$dyn_memory_ptr_t_address_t_uint256__fromStack_reversed(headStart , value3, value2, value1, value0) -> tail {\n        tail := add(headStart, 128)\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value0,  add(headStart, 0))\n\n        mstore(add(headStart, 32), sub(tail, headStart))\n        tail := abi_encode_t_array$_t_address_$dyn_memory_ptr_to_t_array$_t_address_$dyn_memory_ptr_fromStack(value1,  tail)\n\n        abi_encode_t_address_to_t_address_fromStack(value2,  add(headStart, 64))\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value3,  add(headStart, 96))\n\n    }\n\n    function abi_encode_tuple_t_address_t_address_t_uint256__to_t_address_t_address_t_uint256__fromStack_reversed(headStart , value2, value1, value0) -> tail {\n        tail := add(headStart, 96)\n\n        abi_encode_t_address_to_t_address_fromStack(value0,  add(headStart, 0))\n\n        abi_encode_t_address_to_t_address_fromStack(value1,  add(headStart, 32))\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value2,  add(headStart, 64))\n\n    }\n\n    function abi_encode_tuple_t_address_t_address__to_t_address_t_address__fromStack_reversed(headStart , value1, value0) -> tail {\n        tail := add(headStart, 64)\n\n        abi_encode_t_address_to_t_address_fromStack(value0,  add(headStart, 0))\n\n        abi_encode_t_address_to_t_address_fromStack(value1,  add(headStart, 32))\n\n    }\n\n    function abi_decode_tuple_t_uint256_fromMemory(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_uint256_fromMemory(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, length) -> updated_pos {\n        mstore(pos, length)\n        updated_pos := add(pos, 0x20)\n    }\n\n    function store_literal_in_memory_ef945ddb1bfdc0da870feb4560d868b047642b4ac7f2fb7f8b7c51cb4a411e25(memPtr) {\n\n        mstore(add(memPtr, 0), \"SafeERC20: approve from non-zero\")\n\n        mstore(add(memPtr, 32), \" to non-zero allowance\")\n\n    }\n\n    function abi_encode_t_stringliteral_ef945ddb1bfdc0da870feb4560d868b047642b4ac7f2fb7f8b7c51cb4a411e25_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 54)\n        store_literal_in_memory_ef945ddb1bfdc0da870feb4560d868b047642b4ac7f2fb7f8b7c51cb4a411e25(pos)\n        end := add(pos, 64)\n    }\n\n    function abi_encode_tuple_t_stringliteral_ef945ddb1bfdc0da870feb4560d868b047642b4ac7f2fb7f8b7c51cb4a411e25__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_ef945ddb1bfdc0da870feb4560d868b047642b4ac7f2fb7f8b7c51cb4a411e25_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function abi_encode_tuple_t_address_t_uint256__to_t_address_t_uint256__fromStack_reversed(headStart , value1, value0) -> tail {\n        tail := add(headStart, 64)\n\n        abi_encode_t_address_to_t_address_fromStack(value0,  add(headStart, 0))\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value1,  add(headStart, 32))\n\n    }\n\n    function cleanup_t_bool(value) -> cleaned {\n        cleaned := iszero(iszero(value))\n    }\n\n    function validator_revert_t_bool(value) {\n        if iszero(eq(value, cleanup_t_bool(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_bool_fromMemory(offset, end) -> value {\n        value := mload(offset)\n        validator_revert_t_bool(value)\n    }\n\n    function abi_decode_tuple_t_bool_fromMemory(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_bool_fromMemory(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function store_literal_in_memory_e11ad79d1e4a7f2e5f376964cb99e8e8f7904e3fc16a109f7a7ecb9aa7956dcd(memPtr) {\n\n        mstore(add(memPtr, 0), \"SafeERC20: ERC20 operation did n\")\n\n        mstore(add(memPtr, 32), \"ot succeed\")\n\n    }\n\n    function abi_encode_t_stringliteral_e11ad79d1e4a7f2e5f376964cb99e8e8f7904e3fc16a109f7a7ecb9aa7956dcd_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 42)\n        store_literal_in_memory_e11ad79d1e4a7f2e5f376964cb99e8e8f7904e3fc16a109f7a7ecb9aa7956dcd(pos)\n        end := add(pos, 64)\n    }\n\n    function abi_encode_tuple_t_stringliteral_e11ad79d1e4a7f2e5f376964cb99e8e8f7904e3fc16a109f7a7ecb9aa7956dcd__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_e11ad79d1e4a7f2e5f376964cb99e8e8f7904e3fc16a109f7a7ecb9aa7956dcd_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function store_literal_in_memory_565f1a77334fc4792800921178c71e4521acffab18ff9e7885b49377ee80ab4c(memPtr) {\n\n        mstore(add(memPtr, 0), \"Address: insufficient balance fo\")\n\n        mstore(add(memPtr, 32), \"r call\")\n\n    }\n\n    function abi_encode_t_stringliteral_565f1a77334fc4792800921178c71e4521acffab18ff9e7885b49377ee80ab4c_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 38)\n        store_literal_in_memory_565f1a77334fc4792800921178c71e4521acffab18ff9e7885b49377ee80ab4c(pos)\n        end := add(pos, 64)\n    }\n\n    function abi_encode_tuple_t_stringliteral_565f1a77334fc4792800921178c71e4521acffab18ff9e7885b49377ee80ab4c__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_565f1a77334fc4792800921178c71e4521acffab18ff9e7885b49377ee80ab4c_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function array_length_t_bytes_memory_ptr(value) -> length {\n\n        length := mload(value)\n\n    }\n\n    function array_storeLengthForEncoding_t_bytes_memory_ptr_nonPadded_inplace_fromStack(pos, length) -> updated_pos {\n        updated_pos := pos\n    }\n\n    function copy_memory_to_memory_with_cleanup(src, dst, length) {\n        let i := 0\n        for { } lt(i, length) { i := add(i, 32) }\n        {\n            mstore(add(dst, i), mload(add(src, i)))\n        }\n        mstore(add(dst, length), 0)\n    }\n\n    function abi_encode_t_bytes_memory_ptr_to_t_bytes_memory_ptr_nonPadded_inplace_fromStack(value, pos) -> end {\n        let length := array_length_t_bytes_memory_ptr(value)\n        pos := array_storeLengthForEncoding_t_bytes_memory_ptr_nonPadded_inplace_fromStack(pos, length)\n        copy_memory_to_memory_with_cleanup(add(value, 0x20), pos, length)\n        end := add(pos, length)\n    }\n\n    function abi_encode_tuple_packed_t_bytes_memory_ptr__to_t_bytes_memory_ptr__nonPadded_inplace_fromStack_reversed(pos , value0) -> end {\n\n        pos := abi_encode_t_bytes_memory_ptr_to_t_bytes_memory_ptr_nonPadded_inplace_fromStack(value0,  pos)\n\n        end := pos\n    }\n\n    function store_literal_in_memory_cc2e4e38850b7c0a3e942cfed89b71c77302df25bcb2ec297a0c4ff9ff6b90ad(memPtr) {\n\n        mstore(add(memPtr, 0), \"Address: call to non-contract\")\n\n    }\n\n    function abi_encode_t_stringliteral_cc2e4e38850b7c0a3e942cfed89b71c77302df25bcb2ec297a0c4ff9ff6b90ad_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 29)\n        store_literal_in_memory_cc2e4e38850b7c0a3e942cfed89b71c77302df25bcb2ec297a0c4ff9ff6b90ad(pos)\n        end := add(pos, 32)\n    }\n\n    function abi_encode_tuple_t_stringliteral_cc2e4e38850b7c0a3e942cfed89b71c77302df25bcb2ec297a0c4ff9ff6b90ad__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_cc2e4e38850b7c0a3e942cfed89b71c77302df25bcb2ec297a0c4ff9ff6b90ad_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function array_length_t_string_memory_ptr(value) -> length {\n\n        length := mload(value)\n\n    }\n\n    function abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack(value, pos) -> end {\n        let length := array_length_t_string_memory_ptr(value)\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, length)\n        copy_memory_to_memory_with_cleanup(add(value, 0x20), pos, length)\n        end := add(pos, round_up_to_mul_of_32(length))\n    }\n\n    function abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack(value0,  tail)\n\n    }\n\n}\n",
									"id": 6,
									"language": "Yul",
									"name": "#utility.yul"
								}
							],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "6080604052600436106100555760003560e01c806307ee83a11461005a5780633fc8cef3146100765780637d17ff3d146100a1578063839da792146100ca578063b4688dc8146100e6578063f887ea4014610102575b600080fd5b610074600480360381019061006f9190610d27565b61012d565b005b34801561008257600080fd5b5061008b6102d1565b6040516100989190610d9d565b60405180910390f35b3480156100ad57600080fd5b506100c860048036038101906100c39190610db8565b6102f7565b005b6100e460048036038101906100df9190610e1f565b61050c565b005b61010060048036038101906100fb9190610e1f565b610633565b005b34801561010e57600080fd5b506101176107ef565b6040516101249190610d9d565b60405180910390f35b61015a3330858773ffffffffffffffffffffffffffffffffffffffff16610813909392919063ffffffff16565b6101a560008054906101000a900473ffffffffffffffffffffffffffffffffffffffff16848673ffffffffffffffffffffffffffffffffffffffff1661089c9092919063ffffffff16565b6101d23330838573ffffffffffffffffffffffffffffffffffffffff16610813909392919063ffffffff16565b61021d60008054906101000a900473ffffffffffffffffffffffffffffffffffffffff16828473ffffffffffffffffffffffffffffffffffffffff1661089c9092919063ffffffff16565b60008054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663e8e337008584868560008033426040518963ffffffff1660e01b8152600401610285989796959493929190610eb3565b6060604051808303816000875af11580156102a4573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906102c89190610f46565b50505050505050565b600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b6000600267ffffffffffffffff81111561031457610313610f99565b5b6040519080825280602002602001820160405280156103425781602001602082028036833780820191505090505b509050848160008151811061035a57610359610fc8565b5b602002602001019073ffffffffffffffffffffffffffffffffffffffff16908173ffffffffffffffffffffffffffffffffffffffff168152505083816001815181106103a9576103a8610fc8565b5b602002602001019073ffffffffffffffffffffffffffffffffffffffff16908173ffffffffffffffffffffffffffffffffffffffff16815250506104103330858873ffffffffffffffffffffffffffffffffffffffff16610813909392919063ffffffff16565b61045b60008054906101000a900473ffffffffffffffffffffffffffffffffffffffff16848773ffffffffffffffffffffffffffffffffffffffff1661089c9092919063ffffffff16565b60008054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166338ed173984848433426040518663ffffffff1660e01b81526004016104bc9594939291906110b5565b6000604051808303816000875af11580156104db573d6000803e3d6000fd5b505050506040513d6000823e3d601f19601f820116820180604052508101906105049190611239565b505050505050565b6105393330838573ffffffffffffffffffffffffffffffffffffffff16610813909392919063ffffffff16565b61058460008054906101000a900473ffffffffffffffffffffffffffffffffffffffff16828473ffffffffffffffffffffffffffffffffffffffff1661089c9092919063ffffffff16565b60008054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663f305d71934848460008033426040518863ffffffff1660e01b81526004016105e996959493929190611282565b60606040518083038185885af1158015610607573d6000803e3d6000fd5b50505050506040513d601f19601f8201168201806040525081019061062c9190610f46565b5050505050565b6000600267ffffffffffffffff8111156106505761064f610f99565b5b60405190808252806020026020018201604052801561067e5781602001602082028036833780820191505090505b509050600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16816000815181106106b8576106b7610fc8565b5b602002602001019073ffffffffffffffffffffffffffffffffffffffff16908173ffffffffffffffffffffffffffffffffffffffff1681525050828160018151811061070757610706610fc8565b5b602002602001019073ffffffffffffffffffffffffffffffffffffffff16908173ffffffffffffffffffffffffffffffffffffffff168152505060008054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16637ff36ab534848433426040518663ffffffff1660e01b81526004016107a194939291906112e3565b60006040518083038185885af11580156107bf573d6000803e3d6000fd5b50505050506040513d6000823e3d601f19601f820116820180604052508101906107e99190611239565b50505050565b60008054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b610896846323b872dd60e01b8585856040516024016108349392919061132f565b604051602081830303815290604052907bffffffffffffffffffffffffffffffffffffffffffffffffffffffff19166020820180517bffffffffffffffffffffffffffffffffffffffffffffffffffffffff83818316178352505050506109eb565b50505050565b6000811480610926575060008373ffffffffffffffffffffffffffffffffffffffff1663dd62ed3e30856040518363ffffffff1660e01b81526004016108e3929190611366565b602060405180830381865afa158015610900573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610924919061138f565b145b610965576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161095c9061143f565b60405180910390fd5b6109e68363095ea7b360e01b848460405160240161098492919061145f565b604051602081830303815290604052907bffffffffffffffffffffffffffffffffffffffffffffffffffffffff19166020820180517bffffffffffffffffffffffffffffffffffffffffffffffffffffffff83818316178352505050506109eb565b505050565b6000610a4d826040518060400160405280602081526020017f5361666545524332303a206c6f772d6c6576656c2063616c6c206661696c65648152508573ffffffffffffffffffffffffffffffffffffffff16610ab29092919063ffffffff16565b9050600081511115610aad5780806020019051810190610a6d91906114c0565b610aac576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610aa39061155f565b60405180910390fd5b5b505050565b6060610ac18484600085610aca565b90509392505050565b606082471015610b0f576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610b06906115f1565b60405180910390fd5b6000808673ffffffffffffffffffffffffffffffffffffffff168587604051610b389190611682565b60006040518083038185875af1925050503d8060008114610b75576040519150601f19603f3d011682016040523d82523d6000602084013e610b7a565b606091505b5091509150610b8b87838387610b97565b92505050949350505050565b60608315610bf9576000835103610bf157610bb185610c0c565b610bf0576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610be7906116e5565b60405180910390fd5b5b829050610c04565b610c038383610c2f565b5b949350505050565b6000808273ffffffffffffffffffffffffffffffffffffffff163b119050919050565b600082511115610c425781518083602001fd5b806040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610c769190611749565b60405180910390fd5b6000604051905090565b600080fd5b600080fd5b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000610cbe82610c93565b9050919050565b610cce81610cb3565b8114610cd957600080fd5b50565b600081359050610ceb81610cc5565b92915050565b6000819050919050565b610d0481610cf1565b8114610d0f57600080fd5b50565b600081359050610d2181610cfb565b92915050565b60008060008060808587031215610d4157610d40610c89565b5b6000610d4f87828801610cdc565b9450506020610d6087828801610d12565b9350506040610d7187828801610cdc565b9250506060610d8287828801610d12565b91505092959194509250565b610d9781610cb3565b82525050565b6000602082019050610db26000830184610d8e565b92915050565b60008060008060808587031215610dd257610dd1610c89565b5b6000610de087828801610cdc565b9450506020610df187828801610cdc565b9350506040610e0287828801610d12565b9250506060610e1387828801610d12565b91505092959194509250565b60008060408385031215610e3657610e35610c89565b5b6000610e4485828601610cdc565b9250506020610e5585828601610d12565b9150509250929050565b610e6881610cf1565b82525050565b6000819050919050565b6000819050919050565b6000610e9d610e98610e9384610e6e565b610e78565b610cf1565b9050919050565b610ead81610e82565b82525050565b600061010082019050610ec9600083018b610d8e565b610ed6602083018a610d8e565b610ee36040830189610e5f565b610ef06060830188610e5f565b610efd6080830187610ea4565b610f0a60a0830186610ea4565b610f1760c0830185610d8e565b610f2460e0830184610e5f565b9998505050505050505050565b600081519050610f4081610cfb565b92915050565b600080600060608486031215610f5f57610f5e610c89565b5b6000610f6d86828701610f31565b9350506020610f7e86828701610f31565b9250506040610f8f86828701610f31565b9150509250925092565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b600081519050919050565b600082825260208201905092915050565b6000819050602082019050919050565b61102c81610cb3565b82525050565b600061103e8383611023565b60208301905092915050565b6000602082019050919050565b600061106282610ff7565b61106c8185611002565b935061107783611013565b8060005b838110156110a857815161108f8882611032565b975061109a8361104a565b92505060018101905061107b565b5085935050505092915050565b600060a0820190506110ca6000830188610e5f565b6110d76020830187610e5f565b81810360408301526110e98186611057565b90506110f86060830185610d8e565b6111056080830184610e5f565b9695505050505050565b600080fd5b6000601f19601f8301169050919050565b61112e82611114565b810181811067ffffffffffffffff8211171561114d5761114c610f99565b5b80604052505050565b6000611160610c7f565b905061116c8282611125565b919050565b600067ffffffffffffffff82111561118c5761118b610f99565b5b602082029050602081019050919050565b600080fd5b60006111b56111b084611171565b611156565b905080838252602082019050602084028301858111156111d8576111d761119d565b5b835b8181101561120157806111ed8882610f31565b8452602084019350506020810190506111da565b5050509392505050565b600082601f8301126112205761121f61110f565b5b81516112308482602086016111a2565b91505092915050565b60006020828403121561124f5761124e610c89565b5b600082015167ffffffffffffffff81111561126d5761126c610c8e565b5b6112798482850161120b565b91505092915050565b600060c0820190506112976000830189610d8e565b6112a46020830188610e5f565b6112b16040830187610ea4565b6112be6060830186610ea4565b6112cb6080830185610d8e565b6112d860a0830184610e5f565b979650505050505050565b60006080820190506112f86000830187610e5f565b818103602083015261130a8186611057565b90506113196040830185610d8e565b6113266060830184610e5f565b95945050505050565b60006060820190506113446000830186610d8e565b6113516020830185610d8e565b61135e6040830184610e5f565b949350505050565b600060408201905061137b6000830185610d8e565b6113886020830184610d8e565b9392505050565b6000602082840312156113a5576113a4610c89565b5b60006113b384828501610f31565b91505092915050565b600082825260208201905092915050565b7f5361666545524332303a20617070726f76652066726f6d206e6f6e2d7a65726f60008201527f20746f206e6f6e2d7a65726f20616c6c6f77616e636500000000000000000000602082015250565b60006114296036836113bc565b9150611434826113cd565b604082019050919050565b600060208201905081810360008301526114588161141c565b9050919050565b60006040820190506114746000830185610d8e565b6114816020830184610e5f565b9392505050565b60008115159050919050565b61149d81611488565b81146114a857600080fd5b50565b6000815190506114ba81611494565b92915050565b6000602082840312156114d6576114d5610c89565b5b60006114e4848285016114ab565b91505092915050565b7f5361666545524332303a204552433230206f7065726174696f6e20646964206e60008201527f6f74207375636365656400000000000000000000000000000000000000000000602082015250565b6000611549602a836113bc565b9150611554826114ed565b604082019050919050565b600060208201905081810360008301526115788161153c565b9050919050565b7f416464726573733a20696e73756666696369656e742062616c616e636520666f60008201527f722063616c6c0000000000000000000000000000000000000000000000000000602082015250565b60006115db6026836113bc565b91506115e68261157f565b604082019050919050565b6000602082019050818103600083015261160a816115ce565b9050919050565b600081519050919050565b600081905092915050565b60005b8381101561164557808201518184015260208101905061162a565b60008484015250505050565b600061165c82611611565b611666818561161c565b9350611676818560208601611627565b80840191505092915050565b600061168e8284611651565b915081905092915050565b7f416464726573733a2063616c6c20746f206e6f6e2d636f6e7472616374000000600082015250565b60006116cf601d836113bc565b91506116da82611699565b602082019050919050565b600060208201905081810360008301526116fe816116c2565b9050919050565b600081519050919050565b600061171b82611705565b61172581856113bc565b9350611735818560208601611627565b61173e81611114565b840191505092915050565b600060208201905081810360008301526117638184611710565b90509291505056fea264697066735822122058d0f50dc30d4707425dac32d3c3e1ca64397edfa86b19614d73b705a1a8c53f64736f6c63430008110033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x4 CALLDATASIZE LT PUSH2 0x55 JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x7EE83A1 EQ PUSH2 0x5A JUMPI DUP1 PUSH4 0x3FC8CEF3 EQ PUSH2 0x76 JUMPI DUP1 PUSH4 0x7D17FF3D EQ PUSH2 0xA1 JUMPI DUP1 PUSH4 0x839DA792 EQ PUSH2 0xCA JUMPI DUP1 PUSH4 0xB4688DC8 EQ PUSH2 0xE6 JUMPI DUP1 PUSH4 0xF887EA40 EQ PUSH2 0x102 JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x74 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x6F SWAP2 SWAP1 PUSH2 0xD27 JUMP JUMPDEST PUSH2 0x12D JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x82 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x8B PUSH2 0x2D1 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x98 SWAP2 SWAP1 PUSH2 0xD9D JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0xAD JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0xC8 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0xC3 SWAP2 SWAP1 PUSH2 0xDB8 JUMP JUMPDEST PUSH2 0x2F7 JUMP JUMPDEST STOP JUMPDEST PUSH2 0xE4 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0xDF SWAP2 SWAP1 PUSH2 0xE1F JUMP JUMPDEST PUSH2 0x50C JUMP JUMPDEST STOP JUMPDEST PUSH2 0x100 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0xFB SWAP2 SWAP1 PUSH2 0xE1F JUMP JUMPDEST PUSH2 0x633 JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x10E JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x117 PUSH2 0x7EF JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x124 SWAP2 SWAP1 PUSH2 0xD9D JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x15A CALLER ADDRESS DUP6 DUP8 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x813 SWAP1 SWAP4 SWAP3 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH2 0x1A5 PUSH1 0x0 DUP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP5 DUP7 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x89C SWAP1 SWAP3 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH2 0x1D2 CALLER ADDRESS DUP4 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x813 SWAP1 SWAP4 SWAP3 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH2 0x21D PUSH1 0x0 DUP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x89C SWAP1 SWAP3 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH1 0x0 DUP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0xE8E33700 DUP6 DUP5 DUP7 DUP6 PUSH1 0x0 DUP1 CALLER TIMESTAMP PUSH1 0x40 MLOAD DUP10 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x285 SWAP9 SWAP8 SWAP7 SWAP6 SWAP5 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0xEB3 JUMP JUMPDEST PUSH1 0x60 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 GAS CALL ISZERO DUP1 ISZERO PUSH2 0x2A4 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x2C8 SWAP2 SWAP1 PUSH2 0xF46 JUMP JUMPDEST POP POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x2 PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x314 JUMPI PUSH2 0x313 PUSH2 0xF99 JUMP JUMPDEST JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP1 DUP3 MSTORE DUP1 PUSH1 0x20 MUL PUSH1 0x20 ADD DUP3 ADD PUSH1 0x40 MSTORE DUP1 ISZERO PUSH2 0x342 JUMPI DUP2 PUSH1 0x20 ADD PUSH1 0x20 DUP3 MUL DUP1 CALLDATASIZE DUP4 CALLDATACOPY DUP1 DUP3 ADD SWAP2 POP POP SWAP1 POP JUMPDEST POP SWAP1 POP DUP5 DUP2 PUSH1 0x0 DUP2 MLOAD DUP2 LT PUSH2 0x35A JUMPI PUSH2 0x359 PUSH2 0xFC8 JUMP JUMPDEST JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD SWAP1 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE POP POP DUP4 DUP2 PUSH1 0x1 DUP2 MLOAD DUP2 LT PUSH2 0x3A9 JUMPI PUSH2 0x3A8 PUSH2 0xFC8 JUMP JUMPDEST JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD SWAP1 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE POP POP PUSH2 0x410 CALLER ADDRESS DUP6 DUP9 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x813 SWAP1 SWAP4 SWAP3 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH2 0x45B PUSH1 0x0 DUP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP5 DUP8 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x89C SWAP1 SWAP3 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH1 0x0 DUP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x38ED1739 DUP5 DUP5 DUP5 CALLER TIMESTAMP PUSH1 0x40 MLOAD DUP7 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x4BC SWAP6 SWAP5 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x10B5 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 GAS CALL ISZERO DUP1 ISZERO PUSH2 0x4DB JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x0 DUP3 RETURNDATACOPY RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x504 SWAP2 SWAP1 PUSH2 0x1239 JUMP JUMPDEST POP POP POP POP POP POP JUMP JUMPDEST PUSH2 0x539 CALLER ADDRESS DUP4 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x813 SWAP1 SWAP4 SWAP3 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH2 0x584 PUSH1 0x0 DUP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x89C SWAP1 SWAP3 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH1 0x0 DUP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0xF305D719 CALLVALUE DUP5 DUP5 PUSH1 0x0 DUP1 CALLER TIMESTAMP PUSH1 0x40 MLOAD DUP9 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x5E9 SWAP7 SWAP6 SWAP5 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x1282 JUMP JUMPDEST PUSH1 0x60 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP6 DUP9 GAS CALL ISZERO DUP1 ISZERO PUSH2 0x607 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x62C SWAP2 SWAP1 PUSH2 0xF46 JUMP JUMPDEST POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x2 PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x650 JUMPI PUSH2 0x64F PUSH2 0xF99 JUMP JUMPDEST JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP1 DUP3 MSTORE DUP1 PUSH1 0x20 MUL PUSH1 0x20 ADD DUP3 ADD PUSH1 0x40 MSTORE DUP1 ISZERO PUSH2 0x67E JUMPI DUP2 PUSH1 0x20 ADD PUSH1 0x20 DUP3 MUL DUP1 CALLDATASIZE DUP4 CALLDATACOPY DUP1 DUP3 ADD SWAP2 POP POP SWAP1 POP JUMPDEST POP SWAP1 POP PUSH1 0x1 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH1 0x0 DUP2 MLOAD DUP2 LT PUSH2 0x6B8 JUMPI PUSH2 0x6B7 PUSH2 0xFC8 JUMP JUMPDEST JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD SWAP1 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE POP POP DUP3 DUP2 PUSH1 0x1 DUP2 MLOAD DUP2 LT PUSH2 0x707 JUMPI PUSH2 0x706 PUSH2 0xFC8 JUMP JUMPDEST JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD SWAP1 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE POP POP PUSH1 0x0 DUP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x7FF36AB5 CALLVALUE DUP5 DUP5 CALLER TIMESTAMP PUSH1 0x40 MLOAD DUP7 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x7A1 SWAP5 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x12E3 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP6 DUP9 GAS CALL ISZERO DUP1 ISZERO PUSH2 0x7BF JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x0 DUP3 RETURNDATACOPY RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x7E9 SWAP2 SWAP1 PUSH2 0x1239 JUMP JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 JUMP JUMPDEST PUSH2 0x896 DUP5 PUSH4 0x23B872DD PUSH1 0xE0 SHL DUP6 DUP6 DUP6 PUSH1 0x40 MLOAD PUSH1 0x24 ADD PUSH2 0x834 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x132F JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE SWAP1 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND PUSH1 0x20 DUP3 ADD DUP1 MLOAD PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP4 DUP2 DUP4 AND OR DUP4 MSTORE POP POP POP POP PUSH2 0x9EB JUMP JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 EQ DUP1 PUSH2 0x926 JUMPI POP PUSH1 0x0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0xDD62ED3E ADDRESS DUP6 PUSH1 0x40 MLOAD DUP4 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x8E3 SWAP3 SWAP2 SWAP1 PUSH2 0x1366 JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x900 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x924 SWAP2 SWAP1 PUSH2 0x138F JUMP JUMPDEST EQ JUMPDEST PUSH2 0x965 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x95C SWAP1 PUSH2 0x143F JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x9E6 DUP4 PUSH4 0x95EA7B3 PUSH1 0xE0 SHL DUP5 DUP5 PUSH1 0x40 MLOAD PUSH1 0x24 ADD PUSH2 0x984 SWAP3 SWAP2 SWAP1 PUSH2 0x145F JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE SWAP1 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND PUSH1 0x20 DUP3 ADD DUP1 MLOAD PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP4 DUP2 DUP4 AND OR DUP4 MSTORE POP POP POP POP PUSH2 0x9EB JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0xA4D DUP3 PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x20 DUP2 MSTORE PUSH1 0x20 ADD PUSH32 0x5361666545524332303A206C6F772D6C6576656C2063616C6C206661696C6564 DUP2 MSTORE POP DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0xAB2 SWAP1 SWAP3 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST SWAP1 POP PUSH1 0x0 DUP2 MLOAD GT ISZERO PUSH2 0xAAD JUMPI DUP1 DUP1 PUSH1 0x20 ADD SWAP1 MLOAD DUP2 ADD SWAP1 PUSH2 0xA6D SWAP2 SWAP1 PUSH2 0x14C0 JUMP JUMPDEST PUSH2 0xAAC JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xAA3 SWAP1 PUSH2 0x155F JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST JUMPDEST POP POP POP JUMP JUMPDEST PUSH1 0x60 PUSH2 0xAC1 DUP5 DUP5 PUSH1 0x0 DUP6 PUSH2 0xACA JUMP JUMPDEST SWAP1 POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x60 DUP3 SELFBALANCE LT ISZERO PUSH2 0xB0F JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xB06 SWAP1 PUSH2 0x15F1 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 DUP1 DUP7 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP6 DUP8 PUSH1 0x40 MLOAD PUSH2 0xB38 SWAP2 SWAP1 PUSH2 0x1682 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP6 DUP8 GAS CALL SWAP3 POP POP POP RETURNDATASIZE DUP1 PUSH1 0x0 DUP2 EQ PUSH2 0xB75 JUMPI PUSH1 0x40 MLOAD SWAP2 POP PUSH1 0x1F NOT PUSH1 0x3F RETURNDATASIZE ADD AND DUP3 ADD PUSH1 0x40 MSTORE RETURNDATASIZE DUP3 MSTORE RETURNDATASIZE PUSH1 0x0 PUSH1 0x20 DUP5 ADD RETURNDATACOPY PUSH2 0xB7A JUMP JUMPDEST PUSH1 0x60 SWAP2 POP JUMPDEST POP SWAP2 POP SWAP2 POP PUSH2 0xB8B DUP8 DUP4 DUP4 DUP8 PUSH2 0xB97 JUMP JUMPDEST SWAP3 POP POP POP SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH1 0x60 DUP4 ISZERO PUSH2 0xBF9 JUMPI PUSH1 0x0 DUP4 MLOAD SUB PUSH2 0xBF1 JUMPI PUSH2 0xBB1 DUP6 PUSH2 0xC0C JUMP JUMPDEST PUSH2 0xBF0 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xBE7 SWAP1 PUSH2 0x16E5 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST JUMPDEST DUP3 SWAP1 POP PUSH2 0xC04 JUMP JUMPDEST PUSH2 0xC03 DUP4 DUP4 PUSH2 0xC2F JUMP JUMPDEST JUMPDEST SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EXTCODESIZE GT SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP3 MLOAD GT ISZERO PUSH2 0xC42 JUMPI DUP2 MLOAD DUP1 DUP4 PUSH1 0x20 ADD REVERT JUMPDEST DUP1 PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xC76 SWAP2 SWAP1 PUSH2 0x1749 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 PUSH1 0x40 MLOAD SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0xCBE DUP3 PUSH2 0xC93 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0xCCE DUP2 PUSH2 0xCB3 JUMP JUMPDEST DUP2 EQ PUSH2 0xCD9 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0xCEB DUP2 PUSH2 0xCC5 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0xD04 DUP2 PUSH2 0xCF1 JUMP JUMPDEST DUP2 EQ PUSH2 0xD0F JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0xD21 DUP2 PUSH2 0xCFB JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x80 DUP6 DUP8 SUB SLT ISZERO PUSH2 0xD41 JUMPI PUSH2 0xD40 PUSH2 0xC89 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0xD4F DUP8 DUP3 DUP9 ADD PUSH2 0xCDC JUMP JUMPDEST SWAP5 POP POP PUSH1 0x20 PUSH2 0xD60 DUP8 DUP3 DUP9 ADD PUSH2 0xD12 JUMP JUMPDEST SWAP4 POP POP PUSH1 0x40 PUSH2 0xD71 DUP8 DUP3 DUP9 ADD PUSH2 0xCDC JUMP JUMPDEST SWAP3 POP POP PUSH1 0x60 PUSH2 0xD82 DUP8 DUP3 DUP9 ADD PUSH2 0xD12 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP6 SWAP2 SWAP5 POP SWAP3 POP JUMP JUMPDEST PUSH2 0xD97 DUP2 PUSH2 0xCB3 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0xDB2 PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0xD8E JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x80 DUP6 DUP8 SUB SLT ISZERO PUSH2 0xDD2 JUMPI PUSH2 0xDD1 PUSH2 0xC89 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0xDE0 DUP8 DUP3 DUP9 ADD PUSH2 0xCDC JUMP JUMPDEST SWAP5 POP POP PUSH1 0x20 PUSH2 0xDF1 DUP8 DUP3 DUP9 ADD PUSH2 0xCDC JUMP JUMPDEST SWAP4 POP POP PUSH1 0x40 PUSH2 0xE02 DUP8 DUP3 DUP9 ADD PUSH2 0xD12 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x60 PUSH2 0xE13 DUP8 DUP3 DUP9 ADD PUSH2 0xD12 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP6 SWAP2 SWAP5 POP SWAP3 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0xE36 JUMPI PUSH2 0xE35 PUSH2 0xC89 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0xE44 DUP6 DUP3 DUP7 ADD PUSH2 0xCDC JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0xE55 DUP6 DUP3 DUP7 ADD PUSH2 0xD12 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH2 0xE68 DUP2 PUSH2 0xCF1 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0xE9D PUSH2 0xE98 PUSH2 0xE93 DUP5 PUSH2 0xE6E JUMP JUMPDEST PUSH2 0xE78 JUMP JUMPDEST PUSH2 0xCF1 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0xEAD DUP2 PUSH2 0xE82 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x100 DUP3 ADD SWAP1 POP PUSH2 0xEC9 PUSH1 0x0 DUP4 ADD DUP12 PUSH2 0xD8E JUMP JUMPDEST PUSH2 0xED6 PUSH1 0x20 DUP4 ADD DUP11 PUSH2 0xD8E JUMP JUMPDEST PUSH2 0xEE3 PUSH1 0x40 DUP4 ADD DUP10 PUSH2 0xE5F JUMP JUMPDEST PUSH2 0xEF0 PUSH1 0x60 DUP4 ADD DUP9 PUSH2 0xE5F JUMP JUMPDEST PUSH2 0xEFD PUSH1 0x80 DUP4 ADD DUP8 PUSH2 0xEA4 JUMP JUMPDEST PUSH2 0xF0A PUSH1 0xA0 DUP4 ADD DUP7 PUSH2 0xEA4 JUMP JUMPDEST PUSH2 0xF17 PUSH1 0xC0 DUP4 ADD DUP6 PUSH2 0xD8E JUMP JUMPDEST PUSH2 0xF24 PUSH1 0xE0 DUP4 ADD DUP5 PUSH2 0xE5F JUMP JUMPDEST SWAP10 SWAP9 POP POP POP POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP PUSH2 0xF40 DUP2 PUSH2 0xCFB JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0x60 DUP5 DUP7 SUB SLT ISZERO PUSH2 0xF5F JUMPI PUSH2 0xF5E PUSH2 0xC89 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0xF6D DUP7 DUP3 DUP8 ADD PUSH2 0xF31 JUMP JUMPDEST SWAP4 POP POP PUSH1 0x20 PUSH2 0xF7E DUP7 DUP3 DUP8 ADD PUSH2 0xF31 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x40 PUSH2 0xF8F DUP7 DUP3 DUP8 ADD PUSH2 0xF31 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 POP SWAP3 JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x32 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x102C DUP2 PUSH2 0xCB3 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x103E DUP4 DUP4 PUSH2 0x1023 JUMP JUMPDEST PUSH1 0x20 DUP4 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1062 DUP3 PUSH2 0xFF7 JUMP JUMPDEST PUSH2 0x106C DUP2 DUP6 PUSH2 0x1002 JUMP JUMPDEST SWAP4 POP PUSH2 0x1077 DUP4 PUSH2 0x1013 JUMP JUMPDEST DUP1 PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x10A8 JUMPI DUP2 MLOAD PUSH2 0x108F DUP9 DUP3 PUSH2 0x1032 JUMP JUMPDEST SWAP8 POP PUSH2 0x109A DUP4 PUSH2 0x104A JUMP JUMPDEST SWAP3 POP POP PUSH1 0x1 DUP2 ADD SWAP1 POP PUSH2 0x107B JUMP JUMPDEST POP DUP6 SWAP4 POP POP POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0xA0 DUP3 ADD SWAP1 POP PUSH2 0x10CA PUSH1 0x0 DUP4 ADD DUP9 PUSH2 0xE5F JUMP JUMPDEST PUSH2 0x10D7 PUSH1 0x20 DUP4 ADD DUP8 PUSH2 0xE5F JUMP JUMPDEST DUP2 DUP2 SUB PUSH1 0x40 DUP4 ADD MSTORE PUSH2 0x10E9 DUP2 DUP7 PUSH2 0x1057 JUMP JUMPDEST SWAP1 POP PUSH2 0x10F8 PUSH1 0x60 DUP4 ADD DUP6 PUSH2 0xD8E JUMP JUMPDEST PUSH2 0x1105 PUSH1 0x80 DUP4 ADD DUP5 PUSH2 0xE5F JUMP JUMPDEST SWAP7 SWAP6 POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH1 0x1F NOT PUSH1 0x1F DUP4 ADD AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x112E DUP3 PUSH2 0x1114 JUMP JUMPDEST DUP2 ADD DUP2 DUP2 LT PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT OR ISZERO PUSH2 0x114D JUMPI PUSH2 0x114C PUSH2 0xF99 JUMP JUMPDEST JUMPDEST DUP1 PUSH1 0x40 MSTORE POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1160 PUSH2 0xC7F JUMP JUMPDEST SWAP1 POP PUSH2 0x116C DUP3 DUP3 PUSH2 0x1125 JUMP JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT ISZERO PUSH2 0x118C JUMPI PUSH2 0x118B PUSH2 0xF99 JUMP JUMPDEST JUMPDEST PUSH1 0x20 DUP3 MUL SWAP1 POP PUSH1 0x20 DUP2 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH2 0x11B5 PUSH2 0x11B0 DUP5 PUSH2 0x1171 JUMP JUMPDEST PUSH2 0x1156 JUMP JUMPDEST SWAP1 POP DUP1 DUP4 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH1 0x20 DUP5 MUL DUP4 ADD DUP6 DUP2 GT ISZERO PUSH2 0x11D8 JUMPI PUSH2 0x11D7 PUSH2 0x119D JUMP JUMPDEST JUMPDEST DUP4 JUMPDEST DUP2 DUP2 LT ISZERO PUSH2 0x1201 JUMPI DUP1 PUSH2 0x11ED DUP9 DUP3 PUSH2 0xF31 JUMP JUMPDEST DUP5 MSTORE PUSH1 0x20 DUP5 ADD SWAP4 POP POP PUSH1 0x20 DUP2 ADD SWAP1 POP PUSH2 0x11DA JUMP JUMPDEST POP POP POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 PUSH1 0x1F DUP4 ADD SLT PUSH2 0x1220 JUMPI PUSH2 0x121F PUSH2 0x110F JUMP JUMPDEST JUMPDEST DUP2 MLOAD PUSH2 0x1230 DUP5 DUP3 PUSH1 0x20 DUP7 ADD PUSH2 0x11A2 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x124F JUMPI PUSH2 0x124E PUSH2 0xC89 JUMP JUMPDEST JUMPDEST PUSH1 0x0 DUP3 ADD MLOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x126D JUMPI PUSH2 0x126C PUSH2 0xC8E JUMP JUMPDEST JUMPDEST PUSH2 0x1279 DUP5 DUP3 DUP6 ADD PUSH2 0x120B JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0xC0 DUP3 ADD SWAP1 POP PUSH2 0x1297 PUSH1 0x0 DUP4 ADD DUP10 PUSH2 0xD8E JUMP JUMPDEST PUSH2 0x12A4 PUSH1 0x20 DUP4 ADD DUP9 PUSH2 0xE5F JUMP JUMPDEST PUSH2 0x12B1 PUSH1 0x40 DUP4 ADD DUP8 PUSH2 0xEA4 JUMP JUMPDEST PUSH2 0x12BE PUSH1 0x60 DUP4 ADD DUP7 PUSH2 0xEA4 JUMP JUMPDEST PUSH2 0x12CB PUSH1 0x80 DUP4 ADD DUP6 PUSH2 0xD8E JUMP JUMPDEST PUSH2 0x12D8 PUSH1 0xA0 DUP4 ADD DUP5 PUSH2 0xE5F JUMP JUMPDEST SWAP8 SWAP7 POP POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x80 DUP3 ADD SWAP1 POP PUSH2 0x12F8 PUSH1 0x0 DUP4 ADD DUP8 PUSH2 0xE5F JUMP JUMPDEST DUP2 DUP2 SUB PUSH1 0x20 DUP4 ADD MSTORE PUSH2 0x130A DUP2 DUP7 PUSH2 0x1057 JUMP JUMPDEST SWAP1 POP PUSH2 0x1319 PUSH1 0x40 DUP4 ADD DUP6 PUSH2 0xD8E JUMP JUMPDEST PUSH2 0x1326 PUSH1 0x60 DUP4 ADD DUP5 PUSH2 0xE5F JUMP JUMPDEST SWAP6 SWAP5 POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x60 DUP3 ADD SWAP1 POP PUSH2 0x1344 PUSH1 0x0 DUP4 ADD DUP7 PUSH2 0xD8E JUMP JUMPDEST PUSH2 0x1351 PUSH1 0x20 DUP4 ADD DUP6 PUSH2 0xD8E JUMP JUMPDEST PUSH2 0x135E PUSH1 0x40 DUP4 ADD DUP5 PUSH2 0xE5F JUMP JUMPDEST SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 DUP3 ADD SWAP1 POP PUSH2 0x137B PUSH1 0x0 DUP4 ADD DUP6 PUSH2 0xD8E JUMP JUMPDEST PUSH2 0x1388 PUSH1 0x20 DUP4 ADD DUP5 PUSH2 0xD8E JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x13A5 JUMPI PUSH2 0x13A4 PUSH2 0xC89 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x13B3 DUP5 DUP3 DUP6 ADD PUSH2 0xF31 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x5361666545524332303A20617070726F76652066726F6D206E6F6E2D7A65726F PUSH1 0x0 DUP3 ADD MSTORE PUSH32 0x20746F206E6F6E2D7A65726F20616C6C6F77616E636500000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1429 PUSH1 0x36 DUP4 PUSH2 0x13BC JUMP JUMPDEST SWAP2 POP PUSH2 0x1434 DUP3 PUSH2 0x13CD JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x1458 DUP2 PUSH2 0x141C JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 DUP3 ADD SWAP1 POP PUSH2 0x1474 PUSH1 0x0 DUP4 ADD DUP6 PUSH2 0xD8E JUMP JUMPDEST PUSH2 0x1481 PUSH1 0x20 DUP4 ADD DUP5 PUSH2 0xE5F JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 ISZERO ISZERO SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x149D DUP2 PUSH2 0x1488 JUMP JUMPDEST DUP2 EQ PUSH2 0x14A8 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP PUSH2 0x14BA DUP2 PUSH2 0x1494 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x14D6 JUMPI PUSH2 0x14D5 PUSH2 0xC89 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x14E4 DUP5 DUP3 DUP6 ADD PUSH2 0x14AB JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x5361666545524332303A204552433230206F7065726174696F6E20646964206E PUSH1 0x0 DUP3 ADD MSTORE PUSH32 0x6F74207375636365656400000000000000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1549 PUSH1 0x2A DUP4 PUSH2 0x13BC JUMP JUMPDEST SWAP2 POP PUSH2 0x1554 DUP3 PUSH2 0x14ED JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x1578 DUP2 PUSH2 0x153C JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x416464726573733A20696E73756666696369656E742062616C616E636520666F PUSH1 0x0 DUP3 ADD MSTORE PUSH32 0x722063616C6C0000000000000000000000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x15DB PUSH1 0x26 DUP4 PUSH2 0x13BC JUMP JUMPDEST SWAP2 POP PUSH2 0x15E6 DUP3 PUSH2 0x157F JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x160A DUP2 PUSH2 0x15CE JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x1645 JUMPI DUP1 DUP3 ADD MLOAD DUP2 DUP5 ADD MSTORE PUSH1 0x20 DUP2 ADD SWAP1 POP PUSH2 0x162A JUMP JUMPDEST PUSH1 0x0 DUP5 DUP5 ADD MSTORE POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x165C DUP3 PUSH2 0x1611 JUMP JUMPDEST PUSH2 0x1666 DUP2 DUP6 PUSH2 0x161C JUMP JUMPDEST SWAP4 POP PUSH2 0x1676 DUP2 DUP6 PUSH1 0x20 DUP7 ADD PUSH2 0x1627 JUMP JUMPDEST DUP1 DUP5 ADD SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x168E DUP3 DUP5 PUSH2 0x1651 JUMP JUMPDEST SWAP2 POP DUP2 SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x416464726573733A2063616C6C20746F206E6F6E2D636F6E7472616374000000 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x16CF PUSH1 0x1D DUP4 PUSH2 0x13BC JUMP JUMPDEST SWAP2 POP PUSH2 0x16DA DUP3 PUSH2 0x1699 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x16FE DUP2 PUSH2 0x16C2 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x171B DUP3 PUSH2 0x1705 JUMP JUMPDEST PUSH2 0x1725 DUP2 DUP6 PUSH2 0x13BC JUMP JUMPDEST SWAP4 POP PUSH2 0x1735 DUP2 DUP6 PUSH1 0x20 DUP7 ADD PUSH2 0x1627 JUMP JUMPDEST PUSH2 0x173E DUP2 PUSH2 0x1114 JUMP JUMPDEST DUP5 ADD SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x1763 DUP2 DUP5 PUSH2 0x1710 JUMP JUMPDEST SWAP1 POP SWAP3 SWAP2 POP POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 PC 0xD0 CREATE2 0xD 0xC3 0xD SELFBALANCE SMOD TIMESTAMP 0x5D 0xAC ORIGIN 0xD3 0xC3 0xE1 0xCA PUSH5 0x397EDFA86B NOT PUSH2 0x4D73 0xB7 SDIV LOG1 0xA8 0xC5 EXTCODEHASH PUSH5 0x736F6C6343 STOP ADDMOD GT STOP CALLER ",
							"sourceMap": "235:2122:4:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1005:512;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;324:19;;;;;;;;;;;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;1898:456;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;494:463;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;1551:310;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;297:21;;;;;;;;;;;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;1005:512;1111:67;1143:10;1163:4;1170:7;1118:6;1111:31;;;;:67;;;;;;:::i;:::-;1188:43;1215:6;;;;;;;;;;1223:7;1195:6;1188:26;;;;:43;;;;;:::i;:::-;1242:67;1274:10;1294:4;1301:7;1249:6;1242:31;;;;:67;;;;;;:::i;:::-;1319:43;1346:6;;;;;;;;;;1354:7;1326:6;1319:26;;;;:43;;;;;:::i;:::-;1392:6;;;;;;;;;;1373:39;;;1413:6;1421;1429:7;1438;1447:1;1450;1453:10;1465:15;1373:108;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;1005:512;;;;:::o;324:19::-;;;;;;;;;;;;;:::o;1898:456::-;2001:21;2039:1;2025:16;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2001:40;;2061:6;2051:4;2056:1;2051:7;;;;;;;;:::i;:::-;;;;;;;:16;;;;;;;;;;;2087:6;2077:4;2082:1;2077:7;;;;;;;;:::i;:::-;;;;;;;:16;;;;;;;;;;;2103:68;2135:10;2155:4;2162:8;2110:6;2103:31;;;;:68;;;;;;:::i;:::-;2181:44;2208:6;;;;;;;;;;2216:8;2188:6;2181:26;;;;:44;;;;;:::i;:::-;2254:6;;;;;;;;;;2235:51;;;2287:8;2297:14;2313:4;2319:10;2331:15;2235:112;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;1991:363;1898:456;;;;:::o;494:463::-;577:69;608:10;628:4;634:11;584:5;577:30;;;;:69;;;;;;:::i;:::-;656:46;682:6;;;;;;;;;;690:11;663:5;656:25;;;;:46;;;;;:::i;:::-;825:6;;;;;;;;;;806:42;;;856:9;867:5;874:11;887:1;890;893:10;905:15;806:115;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;494:463;;:::o;1551:310::-;1637:21;1675:1;1661:16;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1637:40;;1697:4;;;;;;;;;;;1687;1692:1;1687:7;;;;;;;;:::i;:::-;;;;;;;:14;;;;;;;;;;;1721:5;1711:4;1716:1;1711:7;;;;;;;;:::i;:::-;;;;;;;:15;;;;;;;;;;;1755:6;;;;;;;;;;1736:48;;;1793:9;1804:14;1820:4;1826:10;1838:15;1736:118;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;1627:234;1551:310;;:::o;297:21::-;;;;;;;;;;;;:::o;974:241:2:-;1112:96;1132:5;1162:27;;;1191:4;1197:2;1201:5;1139:68;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1112:19;:96::i;:::-;974:241;;;;:::o;1475:603::-;1839:1;1830:5;:10;1829:62;;;;1889:1;1846:5;:15;;;1870:4;1877:7;1846:39;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;:44;1829:62;1808:163;;;;;;;;;;;;:::i;:::-;;;;;;;;;1981:90;2001:5;2031:22;;;2055:7;2064:5;2008:62;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1981:19;:90::i;:::-;1475:603;;;:::o;3747:706::-;4166:23;4192:69;4220:4;4192:69;;;;;;;;;;;;;;;;;4200:5;4192:27;;;;:69;;;;;:::i;:::-;4166:95;;4295:1;4275:10;:17;:21;4271:176;;;4370:10;4359:30;;;;;;;;;;;;:::i;:::-;4351:85;;;;;;;;;;;;:::i;:::-;;;;;;;;;4271:176;3817:636;3747:706;;:::o;3873:223:3:-;4006:12;4037:52;4059:6;4067:4;4073:1;4076:12;4037:21;:52::i;:::-;4030:59;;3873:223;;;;;:::o;4960:446::-;5125:12;5182:5;5157:21;:30;;5149:81;;;;;;;;;;;;:::i;:::-;;;;;;;;;5241:12;5255:23;5282:6;:11;;5301:5;5308:4;5282:31;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;5240:73;;;;5330:69;5357:6;5365:7;5374:10;5386:12;5330:26;:69::i;:::-;5323:76;;;;4960:446;;;;;;:::o;7466:628::-;7646:12;7674:7;7670:418;;;7722:1;7701:10;:17;:22;7697:286;;7916:18;7927:6;7916:10;:18::i;:::-;7908:60;;;;;;;;;;;;:::i;:::-;;;;;;;;;7697:286;8003:10;7996:17;;;;7670:418;8044:33;8052:10;8064:12;8044:7;:33::i;:::-;7466:628;;;;;;;:::o;1175:320::-;1235:4;1487:1;1465:7;:19;;;:23;1458:30;;1175:320;;;:::o;8616:540::-;8795:1;8775:10;:17;:21;8771:379;;;9003:10;8997:17;9059:15;9046:10;9042:2;9038:19;9031:44;8771:379;9126:12;9119:20;;;;;;;;;;;:::i;:::-;;;;;;;;7:75:6;40:6;73:2;67:9;57:19;;7:75;:::o;88:117::-;197:1;194;187:12;211:117;320:1;317;310:12;334:126;371:7;411:42;404:5;400:54;389:65;;334:126;;;:::o;466:96::-;503:7;532:24;550:5;532:24;:::i;:::-;521:35;;466:96;;;:::o;568:122::-;641:24;659:5;641:24;:::i;:::-;634:5;631:35;621:63;;680:1;677;670:12;621:63;568:122;:::o;696:139::-;742:5;780:6;767:20;758:29;;796:33;823:5;796:33;:::i;:::-;696:139;;;;:::o;841:77::-;878:7;907:5;896:16;;841:77;;;:::o;924:122::-;997:24;1015:5;997:24;:::i;:::-;990:5;987:35;977:63;;1036:1;1033;1026:12;977:63;924:122;:::o;1052:139::-;1098:5;1136:6;1123:20;1114:29;;1152:33;1179:5;1152:33;:::i;:::-;1052:139;;;;:::o;1197:765::-;1283:6;1291;1299;1307;1356:3;1344:9;1335:7;1331:23;1327:33;1324:120;;;1363:79;;:::i;:::-;1324:120;1483:1;1508:53;1553:7;1544:6;1533:9;1529:22;1508:53;:::i;:::-;1498:63;;1454:117;1610:2;1636:53;1681:7;1672:6;1661:9;1657:22;1636:53;:::i;:::-;1626:63;;1581:118;1738:2;1764:53;1809:7;1800:6;1789:9;1785:22;1764:53;:::i;:::-;1754:63;;1709:118;1866:2;1892:53;1937:7;1928:6;1917:9;1913:22;1892:53;:::i;:::-;1882:63;;1837:118;1197:765;;;;;;;:::o;1968:118::-;2055:24;2073:5;2055:24;:::i;:::-;2050:3;2043:37;1968:118;;:::o;2092:222::-;2185:4;2223:2;2212:9;2208:18;2200:26;;2236:71;2304:1;2293:9;2289:17;2280:6;2236:71;:::i;:::-;2092:222;;;;:::o;2320:765::-;2406:6;2414;2422;2430;2479:3;2467:9;2458:7;2454:23;2450:33;2447:120;;;2486:79;;:::i;:::-;2447:120;2606:1;2631:53;2676:7;2667:6;2656:9;2652:22;2631:53;:::i;:::-;2621:63;;2577:117;2733:2;2759:53;2804:7;2795:6;2784:9;2780:22;2759:53;:::i;:::-;2749:63;;2704:118;2861:2;2887:53;2932:7;2923:6;2912:9;2908:22;2887:53;:::i;:::-;2877:63;;2832:118;2989:2;3015:53;3060:7;3051:6;3040:9;3036:22;3015:53;:::i;:::-;3005:63;;2960:118;2320:765;;;;;;;:::o;3091:474::-;3159:6;3167;3216:2;3204:9;3195:7;3191:23;3187:32;3184:119;;;3222:79;;:::i;:::-;3184:119;3342:1;3367:53;3412:7;3403:6;3392:9;3388:22;3367:53;:::i;:::-;3357:63;;3313:117;3469:2;3495:53;3540:7;3531:6;3520:9;3516:22;3495:53;:::i;:::-;3485:63;;3440:118;3091:474;;;;;:::o;3571:118::-;3658:24;3676:5;3658:24;:::i;:::-;3653:3;3646:37;3571:118;;:::o;3695:85::-;3740:7;3769:5;3758:16;;3695:85;;;:::o;3786:60::-;3814:3;3835:5;3828:12;;3786:60;;;:::o;3852:158::-;3910:9;3943:61;3961:42;3970:32;3996:5;3970:32;:::i;:::-;3961:42;:::i;:::-;3943:61;:::i;:::-;3930:74;;3852:158;;;:::o;4016:147::-;4111:45;4150:5;4111:45;:::i;:::-;4106:3;4099:58;4016:147;;:::o;4169:1029::-;4474:4;4512:3;4501:9;4497:19;4489:27;;4526:71;4594:1;4583:9;4579:17;4570:6;4526:71;:::i;:::-;4607:72;4675:2;4664:9;4660:18;4651:6;4607:72;:::i;:::-;4689;4757:2;4746:9;4742:18;4733:6;4689:72;:::i;:::-;4771;4839:2;4828:9;4824:18;4815:6;4771:72;:::i;:::-;4853:81;4929:3;4918:9;4914:19;4905:6;4853:81;:::i;:::-;4944;5020:3;5009:9;5005:19;4996:6;4944:81;:::i;:::-;5035:73;5103:3;5092:9;5088:19;5079:6;5035:73;:::i;:::-;5118;5186:3;5175:9;5171:19;5162:6;5118:73;:::i;:::-;4169:1029;;;;;;;;;;;:::o;5204:143::-;5261:5;5292:6;5286:13;5277:22;;5308:33;5335:5;5308:33;:::i;:::-;5204:143;;;;:::o;5353:663::-;5441:6;5449;5457;5506:2;5494:9;5485:7;5481:23;5477:32;5474:119;;;5512:79;;:::i;:::-;5474:119;5632:1;5657:64;5713:7;5704:6;5693:9;5689:22;5657:64;:::i;:::-;5647:74;;5603:128;5770:2;5796:64;5852:7;5843:6;5832:9;5828:22;5796:64;:::i;:::-;5786:74;;5741:129;5909:2;5935:64;5991:7;5982:6;5971:9;5967:22;5935:64;:::i;:::-;5925:74;;5880:129;5353:663;;;;;:::o;6022:180::-;6070:77;6067:1;6060:88;6167:4;6164:1;6157:15;6191:4;6188:1;6181:15;6208:180;6256:77;6253:1;6246:88;6353:4;6350:1;6343:15;6377:4;6374:1;6367:15;6394:114;6461:6;6495:5;6489:12;6479:22;;6394:114;;;:::o;6514:184::-;6613:11;6647:6;6642:3;6635:19;6687:4;6682:3;6678:14;6663:29;;6514:184;;;;:::o;6704:132::-;6771:4;6794:3;6786:11;;6824:4;6819:3;6815:14;6807:22;;6704:132;;;:::o;6842:108::-;6919:24;6937:5;6919:24;:::i;:::-;6914:3;6907:37;6842:108;;:::o;6956:179::-;7025:10;7046:46;7088:3;7080:6;7046:46;:::i;:::-;7124:4;7119:3;7115:14;7101:28;;6956:179;;;;:::o;7141:113::-;7211:4;7243;7238:3;7234:14;7226:22;;7141:113;;;:::o;7290:732::-;7409:3;7438:54;7486:5;7438:54;:::i;:::-;7508:86;7587:6;7582:3;7508:86;:::i;:::-;7501:93;;7618:56;7668:5;7618:56;:::i;:::-;7697:7;7728:1;7713:284;7738:6;7735:1;7732:13;7713:284;;;7814:6;7808:13;7841:63;7900:3;7885:13;7841:63;:::i;:::-;7834:70;;7927:60;7980:6;7927:60;:::i;:::-;7917:70;;7773:224;7760:1;7757;7753:9;7748:14;;7713:284;;;7717:14;8013:3;8006:10;;7414:608;;;7290:732;;;;:::o;8028:815::-;8283:4;8321:3;8310:9;8306:19;8298:27;;8335:71;8403:1;8392:9;8388:17;8379:6;8335:71;:::i;:::-;8416:72;8484:2;8473:9;8469:18;8460:6;8416:72;:::i;:::-;8535:9;8529:4;8525:20;8520:2;8509:9;8505:18;8498:48;8563:108;8666:4;8657:6;8563:108;:::i;:::-;8555:116;;8681:72;8749:2;8738:9;8734:18;8725:6;8681:72;:::i;:::-;8763:73;8831:3;8820:9;8816:19;8807:6;8763:73;:::i;:::-;8028:815;;;;;;;;:::o;8849:117::-;8958:1;8955;8948:12;8972:102;9013:6;9064:2;9060:7;9055:2;9048:5;9044:14;9040:28;9030:38;;8972:102;;;:::o;9080:281::-;9163:27;9185:4;9163:27;:::i;:::-;9155:6;9151:40;9293:6;9281:10;9278:22;9257:18;9245:10;9242:34;9239:62;9236:88;;;9304:18;;:::i;:::-;9236:88;9344:10;9340:2;9333:22;9123:238;9080:281;;:::o;9367:129::-;9401:6;9428:20;;:::i;:::-;9418:30;;9457:33;9485:4;9477:6;9457:33;:::i;:::-;9367:129;;;:::o;9502:311::-;9579:4;9669:18;9661:6;9658:30;9655:56;;;9691:18;;:::i;:::-;9655:56;9741:4;9733:6;9729:17;9721:25;;9801:4;9795;9791:15;9783:23;;9502:311;;;:::o;9819:117::-;9928:1;9925;9918:12;9959:732;10066:5;10091:81;10107:64;10164:6;10107:64;:::i;:::-;10091:81;:::i;:::-;10082:90;;10192:5;10221:6;10214:5;10207:21;10255:4;10248:5;10244:16;10237:23;;10308:4;10300:6;10296:17;10288:6;10284:30;10337:3;10329:6;10326:15;10323:122;;;10356:79;;:::i;:::-;10323:122;10471:6;10454:231;10488:6;10483:3;10480:15;10454:231;;;10563:3;10592:48;10636:3;10624:10;10592:48;:::i;:::-;10587:3;10580:61;10670:4;10665:3;10661:14;10654:21;;10530:155;10514:4;10509:3;10505:14;10498:21;;10454:231;;;10458:21;10072:619;;9959:732;;;;;:::o;10714:385::-;10796:5;10845:3;10838:4;10830:6;10826:17;10822:27;10812:122;;10853:79;;:::i;:::-;10812:122;10963:6;10957:13;10988:105;11089:3;11081:6;11074:4;11066:6;11062:17;10988:105;:::i;:::-;10979:114;;10802:297;10714:385;;;;:::o;11105:554::-;11200:6;11249:2;11237:9;11228:7;11224:23;11220:32;11217:119;;;11255:79;;:::i;:::-;11217:119;11396:1;11385:9;11381:17;11375:24;11426:18;11418:6;11415:30;11412:117;;;11448:79;;:::i;:::-;11412:117;11553:89;11634:7;11625:6;11614:9;11610:22;11553:89;:::i;:::-;11543:99;;11346:306;11105:554;;;;:::o;11665:807::-;11914:4;11952:3;11941:9;11937:19;11929:27;;11966:71;12034:1;12023:9;12019:17;12010:6;11966:71;:::i;:::-;12047:72;12115:2;12104:9;12100:18;12091:6;12047:72;:::i;:::-;12129:80;12205:2;12194:9;12190:18;12181:6;12129:80;:::i;:::-;12219;12295:2;12284:9;12280:18;12271:6;12219:80;:::i;:::-;12309:73;12377:3;12366:9;12362:19;12353:6;12309:73;:::i;:::-;12392;12460:3;12449:9;12445:19;12436:6;12392:73;:::i;:::-;11665:807;;;;;;;;;:::o;12478:704::-;12705:4;12743:3;12732:9;12728:19;12720:27;;12757:71;12825:1;12814:9;12810:17;12801:6;12757:71;:::i;:::-;12875:9;12869:4;12865:20;12860:2;12849:9;12845:18;12838:48;12903:108;13006:4;12997:6;12903:108;:::i;:::-;12895:116;;13021:72;13089:2;13078:9;13074:18;13065:6;13021:72;:::i;:::-;13103;13171:2;13160:9;13156:18;13147:6;13103:72;:::i;:::-;12478:704;;;;;;;:::o;13188:442::-;13337:4;13375:2;13364:9;13360:18;13352:26;;13388:71;13456:1;13445:9;13441:17;13432:6;13388:71;:::i;:::-;13469:72;13537:2;13526:9;13522:18;13513:6;13469:72;:::i;:::-;13551;13619:2;13608:9;13604:18;13595:6;13551:72;:::i;:::-;13188:442;;;;;;:::o;13636:332::-;13757:4;13795:2;13784:9;13780:18;13772:26;;13808:71;13876:1;13865:9;13861:17;13852:6;13808:71;:::i;:::-;13889:72;13957:2;13946:9;13942:18;13933:6;13889:72;:::i;:::-;13636:332;;;;;:::o;13974:351::-;14044:6;14093:2;14081:9;14072:7;14068:23;14064:32;14061:119;;;14099:79;;:::i;:::-;14061:119;14219:1;14244:64;14300:7;14291:6;14280:9;14276:22;14244:64;:::i;:::-;14234:74;;14190:128;13974:351;;;;:::o;14331:169::-;14415:11;14449:6;14444:3;14437:19;14489:4;14484:3;14480:14;14465:29;;14331:169;;;;:::o;14506:241::-;14646:34;14642:1;14634:6;14630:14;14623:58;14715:24;14710:2;14702:6;14698:15;14691:49;14506:241;:::o;14753:366::-;14895:3;14916:67;14980:2;14975:3;14916:67;:::i;:::-;14909:74;;14992:93;15081:3;14992:93;:::i;:::-;15110:2;15105:3;15101:12;15094:19;;14753:366;;;:::o;15125:419::-;15291:4;15329:2;15318:9;15314:18;15306:26;;15378:9;15372:4;15368:20;15364:1;15353:9;15349:17;15342:47;15406:131;15532:4;15406:131;:::i;:::-;15398:139;;15125:419;;;:::o;15550:332::-;15671:4;15709:2;15698:9;15694:18;15686:26;;15722:71;15790:1;15779:9;15775:17;15766:6;15722:71;:::i;:::-;15803:72;15871:2;15860:9;15856:18;15847:6;15803:72;:::i;:::-;15550:332;;;;;:::o;15888:90::-;15922:7;15965:5;15958:13;15951:21;15940:32;;15888:90;;;:::o;15984:116::-;16054:21;16069:5;16054:21;:::i;:::-;16047:5;16044:32;16034:60;;16090:1;16087;16080:12;16034:60;15984:116;:::o;16106:137::-;16160:5;16191:6;16185:13;16176:22;;16207:30;16231:5;16207:30;:::i;:::-;16106:137;;;;:::o;16249:345::-;16316:6;16365:2;16353:9;16344:7;16340:23;16336:32;16333:119;;;16371:79;;:::i;:::-;16333:119;16491:1;16516:61;16569:7;16560:6;16549:9;16545:22;16516:61;:::i;:::-;16506:71;;16462:125;16249:345;;;;:::o;16600:229::-;16740:34;16736:1;16728:6;16724:14;16717:58;16809:12;16804:2;16796:6;16792:15;16785:37;16600:229;:::o;16835:366::-;16977:3;16998:67;17062:2;17057:3;16998:67;:::i;:::-;16991:74;;17074:93;17163:3;17074:93;:::i;:::-;17192:2;17187:3;17183:12;17176:19;;16835:366;;;:::o;17207:419::-;17373:4;17411:2;17400:9;17396:18;17388:26;;17460:9;17454:4;17450:20;17446:1;17435:9;17431:17;17424:47;17488:131;17614:4;17488:131;:::i;:::-;17480:139;;17207:419;;;:::o;17632:225::-;17772:34;17768:1;17760:6;17756:14;17749:58;17841:8;17836:2;17828:6;17824:15;17817:33;17632:225;:::o;17863:366::-;18005:3;18026:67;18090:2;18085:3;18026:67;:::i;:::-;18019:74;;18102:93;18191:3;18102:93;:::i;:::-;18220:2;18215:3;18211:12;18204:19;;17863:366;;;:::o;18235:419::-;18401:4;18439:2;18428:9;18424:18;18416:26;;18488:9;18482:4;18478:20;18474:1;18463:9;18459:17;18452:47;18516:131;18642:4;18516:131;:::i;:::-;18508:139;;18235:419;;;:::o;18660:98::-;18711:6;18745:5;18739:12;18729:22;;18660:98;;;:::o;18764:147::-;18865:11;18902:3;18887:18;;18764:147;;;;:::o;18917:246::-;18998:1;19008:113;19022:6;19019:1;19016:13;19008:113;;;19107:1;19102:3;19098:11;19092:18;19088:1;19083:3;19079:11;19072:39;19044:2;19041:1;19037:10;19032:15;;19008:113;;;19155:1;19146:6;19141:3;19137:16;19130:27;18979:184;18917:246;;;:::o;19169:386::-;19273:3;19301:38;19333:5;19301:38;:::i;:::-;19355:88;19436:6;19431:3;19355:88;:::i;:::-;19348:95;;19452:65;19510:6;19505:3;19498:4;19491:5;19487:16;19452:65;:::i;:::-;19542:6;19537:3;19533:16;19526:23;;19277:278;19169:386;;;;:::o;19561:271::-;19691:3;19713:93;19802:3;19793:6;19713:93;:::i;:::-;19706:100;;19823:3;19816:10;;19561:271;;;;:::o;19838:179::-;19978:31;19974:1;19966:6;19962:14;19955:55;19838:179;:::o;20023:366::-;20165:3;20186:67;20250:2;20245:3;20186:67;:::i;:::-;20179:74;;20262:93;20351:3;20262:93;:::i;:::-;20380:2;20375:3;20371:12;20364:19;;20023:366;;;:::o;20395:419::-;20561:4;20599:2;20588:9;20584:18;20576:26;;20648:9;20642:4;20638:20;20634:1;20623:9;20619:17;20612:47;20676:131;20802:4;20676:131;:::i;:::-;20668:139;;20395:419;;;:::o;20820:99::-;20872:6;20906:5;20900:12;20890:22;;20820:99;;;:::o;20925:377::-;21013:3;21041:39;21074:5;21041:39;:::i;:::-;21096:71;21160:6;21155:3;21096:71;:::i;:::-;21089:78;;21176:65;21234:6;21229:3;21222:4;21215:5;21211:16;21176:65;:::i;:::-;21266:29;21288:6;21266:29;:::i;:::-;21261:3;21257:39;21250:46;;21017:285;20925:377;;;;:::o;21308:313::-;21421:4;21459:2;21448:9;21444:18;21436:26;;21508:9;21502:4;21498:20;21494:1;21483:9;21479:17;21472:47;21536:78;21609:4;21600:6;21536:78;:::i;:::-;21528:86;;21308:313;;;;:::o"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "1209800",
								"executionCost": "infinite",
								"totalCost": "infinite"
							},
							"external": {
								"AddLiquidity(address,uint256,address,uint256)": "infinite",
								"AddLiquidityETH(address,uint256)": "infinite",
								"buyToken(address,address,uint256,uint256)": "infinite",
								"buyTokenWithETH(address,uint256)": "infinite",
								"router()": "2599",
								"weth()": "2514"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 235,
									"end": 2357,
									"name": "PUSH",
									"source": 4,
									"value": "80"
								},
								{
									"begin": 235,
									"end": 2357,
									"name": "PUSH",
									"source": 4,
									"value": "40"
								},
								{
									"begin": 235,
									"end": 2357,
									"name": "MSTORE",
									"source": 4
								},
								{
									"begin": 350,
									"end": 449,
									"name": "CALLVALUE",
									"source": 4
								},
								{
									"begin": 350,
									"end": 449,
									"name": "DUP1",
									"source": 4
								},
								{
									"begin": 350,
									"end": 449,
									"name": "ISZERO",
									"source": 4
								},
								{
									"begin": 350,
									"end": 449,
									"name": "PUSH [tag]",
									"source": 4,
									"value": "1"
								},
								{
									"begin": 350,
									"end": 449,
									"name": "JUMPI",
									"source": 4
								},
								{
									"begin": 350,
									"end": 449,
									"name": "PUSH",
									"source": 4,
									"value": "0"
								},
								{
									"begin": 350,
									"end": 449,
									"name": "DUP1",
									"source": 4
								},
								{
									"begin": 350,
									"end": 449,
									"name": "REVERT",
									"source": 4
								},
								{
									"begin": 350,
									"end": 449,
									"name": "tag",
									"source": 4,
									"value": "1"
								},
								{
									"begin": 350,
									"end": 449,
									"name": "JUMPDEST",
									"source": 4
								},
								{
									"begin": 350,
									"end": 449,
									"name": "POP",
									"source": 4
								},
								{
									"begin": 350,
									"end": 449,
									"name": "PUSH",
									"source": 4,
									"value": "40"
								},
								{
									"begin": 350,
									"end": 449,
									"name": "MLOAD",
									"source": 4
								},
								{
									"begin": 350,
									"end": 449,
									"name": "PUSHSIZE",
									"source": 4
								},
								{
									"begin": 350,
									"end": 449,
									"name": "CODESIZE",
									"source": 4
								},
								{
									"begin": 350,
									"end": 449,
									"name": "SUB",
									"source": 4
								},
								{
									"begin": 350,
									"end": 449,
									"name": "DUP1",
									"source": 4
								},
								{
									"begin": 350,
									"end": 449,
									"name": "PUSHSIZE",
									"source": 4
								},
								{
									"begin": 350,
									"end": 449,
									"name": "DUP4",
									"source": 4
								},
								{
									"begin": 350,
									"end": 449,
									"name": "CODECOPY",
									"source": 4
								},
								{
									"begin": 350,
									"end": 449,
									"name": "DUP2",
									"source": 4
								},
								{
									"begin": 350,
									"end": 449,
									"name": "DUP2",
									"source": 4
								},
								{
									"begin": 350,
									"end": 449,
									"name": "ADD",
									"source": 4
								},
								{
									"begin": 350,
									"end": 449,
									"name": "PUSH",
									"source": 4,
									"value": "40"
								},
								{
									"begin": 350,
									"end": 449,
									"name": "MSTORE",
									"source": 4
								},
								{
									"begin": 350,
									"end": 449,
									"name": "DUP2",
									"source": 4
								},
								{
									"begin": 350,
									"end": 449,
									"name": "ADD",
									"source": 4
								},
								{
									"begin": 350,
									"end": 449,
									"name": "SWAP1",
									"source": 4
								},
								{
									"begin": 350,
									"end": 449,
									"name": "PUSH [tag]",
									"source": 4,
									"value": "2"
								},
								{
									"begin": 350,
									"end": 449,
									"name": "SWAP2",
									"source": 4
								},
								{
									"begin": 350,
									"end": 449,
									"name": "SWAP1",
									"source": 4
								},
								{
									"begin": 350,
									"end": 449,
									"name": "PUSH [tag]",
									"source": 4,
									"value": "3"
								},
								{
									"begin": 350,
									"end": 449,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 4
								},
								{
									"begin": 350,
									"end": 449,
									"name": "tag",
									"source": 4,
									"value": "2"
								},
								{
									"begin": 350,
									"end": 449,
									"name": "JUMPDEST",
									"source": 4
								},
								{
									"begin": 413,
									"end": 420,
									"name": "DUP2",
									"source": 4
								},
								{
									"begin": 404,
									"end": 410,
									"name": "PUSH",
									"source": 4,
									"value": "0"
								},
								{
									"begin": 404,
									"end": 410,
									"name": "DUP1",
									"source": 4
								},
								{
									"begin": 404,
									"end": 420,
									"name": "PUSH",
									"source": 4,
									"value": "100"
								},
								{
									"begin": 404,
									"end": 420,
									"name": "EXP",
									"source": 4
								},
								{
									"begin": 404,
									"end": 420,
									"name": "DUP2",
									"source": 4
								},
								{
									"begin": 404,
									"end": 420,
									"name": "SLOAD",
									"source": 4
								},
								{
									"begin": 404,
									"end": 420,
									"name": "DUP2",
									"source": 4
								},
								{
									"begin": 404,
									"end": 420,
									"name": "PUSH",
									"source": 4,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 404,
									"end": 420,
									"name": "MUL",
									"source": 4
								},
								{
									"begin": 404,
									"end": 420,
									"name": "NOT",
									"source": 4
								},
								{
									"begin": 404,
									"end": 420,
									"name": "AND",
									"source": 4
								},
								{
									"begin": 404,
									"end": 420,
									"name": "SWAP1",
									"source": 4
								},
								{
									"begin": 404,
									"end": 420,
									"name": "DUP4",
									"source": 4
								},
								{
									"begin": 404,
									"end": 420,
									"name": "PUSH",
									"source": 4,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 404,
									"end": 420,
									"name": "AND",
									"source": 4
								},
								{
									"begin": 404,
									"end": 420,
									"name": "MUL",
									"source": 4
								},
								{
									"begin": 404,
									"end": 420,
									"name": "OR",
									"source": 4
								},
								{
									"begin": 404,
									"end": 420,
									"name": "SWAP1",
									"source": 4
								},
								{
									"begin": 404,
									"end": 420,
									"name": "SSTORE",
									"source": 4
								},
								{
									"begin": 404,
									"end": 420,
									"name": "POP",
									"source": 4
								},
								{
									"begin": 437,
									"end": 442,
									"name": "DUP1",
									"source": 4
								},
								{
									"begin": 430,
									"end": 434,
									"name": "PUSH",
									"source": 4,
									"value": "1"
								},
								{
									"begin": 430,
									"end": 434,
									"name": "PUSH",
									"source": 4,
									"value": "0"
								},
								{
									"begin": 430,
									"end": 442,
									"name": "PUSH",
									"source": 4,
									"value": "100"
								},
								{
									"begin": 430,
									"end": 442,
									"name": "EXP",
									"source": 4
								},
								{
									"begin": 430,
									"end": 442,
									"name": "DUP2",
									"source": 4
								},
								{
									"begin": 430,
									"end": 442,
									"name": "SLOAD",
									"source": 4
								},
								{
									"begin": 430,
									"end": 442,
									"name": "DUP2",
									"source": 4
								},
								{
									"begin": 430,
									"end": 442,
									"name": "PUSH",
									"source": 4,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 430,
									"end": 442,
									"name": "MUL",
									"source": 4
								},
								{
									"begin": 430,
									"end": 442,
									"name": "NOT",
									"source": 4
								},
								{
									"begin": 430,
									"end": 442,
									"name": "AND",
									"source": 4
								},
								{
									"begin": 430,
									"end": 442,
									"name": "SWAP1",
									"source": 4
								},
								{
									"begin": 430,
									"end": 442,
									"name": "DUP4",
									"source": 4
								},
								{
									"begin": 430,
									"end": 442,
									"name": "PUSH",
									"source": 4,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 430,
									"end": 442,
									"name": "AND",
									"source": 4
								},
								{
									"begin": 430,
									"end": 442,
									"name": "MUL",
									"source": 4
								},
								{
									"begin": 430,
									"end": 442,
									"name": "OR",
									"source": 4
								},
								{
									"begin": 430,
									"end": 442,
									"name": "SWAP1",
									"source": 4
								},
								{
									"begin": 430,
									"end": 442,
									"name": "SSTORE",
									"source": 4
								},
								{
									"begin": 430,
									"end": 442,
									"name": "POP",
									"source": 4
								},
								{
									"begin": 350,
									"end": 449,
									"name": "POP",
									"source": 4
								},
								{
									"begin": 350,
									"end": 449,
									"name": "POP",
									"source": 4
								},
								{
									"begin": 235,
									"end": 2357,
									"name": "PUSH [tag]",
									"source": 4,
									"value": "6"
								},
								{
									"begin": 235,
									"end": 2357,
									"name": "JUMP",
									"source": 4
								},
								{
									"begin": 88,
									"end": 205,
									"name": "tag",
									"source": 6,
									"value": "8"
								},
								{
									"begin": 88,
									"end": 205,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 197,
									"end": 198,
									"name": "PUSH",
									"source": 6,
									"value": "0"
								},
								{
									"begin": 194,
									"end": 195,
									"name": "DUP1",
									"source": 6
								},
								{
									"begin": 187,
									"end": 199,
									"name": "REVERT",
									"source": 6
								},
								{
									"begin": 334,
									"end": 460,
									"name": "tag",
									"source": 6,
									"value": "10"
								},
								{
									"begin": 334,
									"end": 460,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 371,
									"end": 378,
									"name": "PUSH",
									"source": 6,
									"value": "0"
								},
								{
									"begin": 411,
									"end": 453,
									"name": "PUSH",
									"source": 6,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 404,
									"end": 409,
									"name": "DUP3",
									"source": 6
								},
								{
									"begin": 400,
									"end": 454,
									"name": "AND",
									"source": 6
								},
								{
									"begin": 389,
									"end": 454,
									"name": "SWAP1",
									"source": 6
								},
								{
									"begin": 389,
									"end": 454,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 334,
									"end": 460,
									"name": "SWAP2",
									"source": 6
								},
								{
									"begin": 334,
									"end": 460,
									"name": "SWAP1",
									"source": 6
								},
								{
									"begin": 334,
									"end": 460,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 334,
									"end": 460,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 6
								},
								{
									"begin": 466,
									"end": 562,
									"name": "tag",
									"source": 6,
									"value": "11"
								},
								{
									"begin": 466,
									"end": 562,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 503,
									"end": 510,
									"name": "PUSH",
									"source": 6,
									"value": "0"
								},
								{
									"begin": 532,
									"end": 556,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "20"
								},
								{
									"begin": 550,
									"end": 555,
									"name": "DUP3",
									"source": 6
								},
								{
									"begin": 532,
									"end": 556,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "10"
								},
								{
									"begin": 532,
									"end": 556,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 6
								},
								{
									"begin": 532,
									"end": 556,
									"name": "tag",
									"source": 6,
									"value": "20"
								},
								{
									"begin": 532,
									"end": 556,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 521,
									"end": 556,
									"name": "SWAP1",
									"source": 6
								},
								{
									"begin": 521,
									"end": 556,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 466,
									"end": 562,
									"name": "SWAP2",
									"source": 6
								},
								{
									"begin": 466,
									"end": 562,
									"name": "SWAP1",
									"source": 6
								},
								{
									"begin": 466,
									"end": 562,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 466,
									"end": 562,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 6
								},
								{
									"begin": 568,
									"end": 690,
									"name": "tag",
									"source": 6,
									"value": "12"
								},
								{
									"begin": 568,
									"end": 690,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 641,
									"end": 665,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "22"
								},
								{
									"begin": 659,
									"end": 664,
									"name": "DUP2",
									"source": 6
								},
								{
									"begin": 641,
									"end": 665,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "11"
								},
								{
									"begin": 641,
									"end": 665,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 6
								},
								{
									"begin": 641,
									"end": 665,
									"name": "tag",
									"source": 6,
									"value": "22"
								},
								{
									"begin": 641,
									"end": 665,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 634,
									"end": 639,
									"name": "DUP2",
									"source": 6
								},
								{
									"begin": 631,
									"end": 666,
									"name": "EQ",
									"source": 6
								},
								{
									"begin": 621,
									"end": 684,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "23"
								},
								{
									"begin": 621,
									"end": 684,
									"name": "JUMPI",
									"source": 6
								},
								{
									"begin": 680,
									"end": 681,
									"name": "PUSH",
									"source": 6,
									"value": "0"
								},
								{
									"begin": 677,
									"end": 678,
									"name": "DUP1",
									"source": 6
								},
								{
									"begin": 670,
									"end": 682,
									"name": "REVERT",
									"source": 6
								},
								{
									"begin": 621,
									"end": 684,
									"name": "tag",
									"source": 6,
									"value": "23"
								},
								{
									"begin": 621,
									"end": 684,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 568,
									"end": 690,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 568,
									"end": 690,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 6
								},
								{
									"begin": 696,
									"end": 839,
									"name": "tag",
									"source": 6,
									"value": "13"
								},
								{
									"begin": 696,
									"end": 839,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 753,
									"end": 758,
									"name": "PUSH",
									"source": 6,
									"value": "0"
								},
								{
									"begin": 784,
									"end": 790,
									"name": "DUP2",
									"source": 6
								},
								{
									"begin": 778,
									"end": 791,
									"name": "MLOAD",
									"source": 6
								},
								{
									"begin": 769,
									"end": 791,
									"name": "SWAP1",
									"source": 6
								},
								{
									"begin": 769,
									"end": 791,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 800,
									"end": 833,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "25"
								},
								{
									"begin": 827,
									"end": 832,
									"name": "DUP2",
									"source": 6
								},
								{
									"begin": 800,
									"end": 833,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "12"
								},
								{
									"begin": 800,
									"end": 833,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 6
								},
								{
									"begin": 800,
									"end": 833,
									"name": "tag",
									"source": 6,
									"value": "25"
								},
								{
									"begin": 800,
									"end": 833,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 696,
									"end": 839,
									"name": "SWAP3",
									"source": 6
								},
								{
									"begin": 696,
									"end": 839,
									"name": "SWAP2",
									"source": 6
								},
								{
									"begin": 696,
									"end": 839,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 696,
									"end": 839,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 696,
									"end": 839,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 6
								},
								{
									"begin": 845,
									"end": 1352,
									"name": "tag",
									"source": 6,
									"value": "3"
								},
								{
									"begin": 845,
									"end": 1352,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 924,
									"end": 930,
									"name": "PUSH",
									"source": 6,
									"value": "0"
								},
								{
									"begin": 932,
									"end": 938,
									"name": "DUP1",
									"source": 6
								},
								{
									"begin": 981,
									"end": 983,
									"name": "PUSH",
									"source": 6,
									"value": "40"
								},
								{
									"begin": 969,
									"end": 978,
									"name": "DUP4",
									"source": 6
								},
								{
									"begin": 960,
									"end": 967,
									"name": "DUP6",
									"source": 6
								},
								{
									"begin": 956,
									"end": 979,
									"name": "SUB",
									"source": 6
								},
								{
									"begin": 952,
									"end": 984,
									"name": "SLT",
									"source": 6
								},
								{
									"begin": 949,
									"end": 1068,
									"name": "ISZERO",
									"source": 6
								},
								{
									"begin": 949,
									"end": 1068,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "27"
								},
								{
									"begin": 949,
									"end": 1068,
									"name": "JUMPI",
									"source": 6
								},
								{
									"begin": 987,
									"end": 1066,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "28"
								},
								{
									"begin": 987,
									"end": 1066,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "8"
								},
								{
									"begin": 987,
									"end": 1066,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 6
								},
								{
									"begin": 987,
									"end": 1066,
									"name": "tag",
									"source": 6,
									"value": "28"
								},
								{
									"begin": 987,
									"end": 1066,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 949,
									"end": 1068,
									"name": "tag",
									"source": 6,
									"value": "27"
								},
								{
									"begin": 949,
									"end": 1068,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 1107,
									"end": 1108,
									"name": "PUSH",
									"source": 6,
									"value": "0"
								},
								{
									"begin": 1132,
									"end": 1196,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "29"
								},
								{
									"begin": 1188,
									"end": 1195,
									"name": "DUP6",
									"source": 6
								},
								{
									"begin": 1179,
									"end": 1185,
									"name": "DUP3",
									"source": 6
								},
								{
									"begin": 1168,
									"end": 1177,
									"name": "DUP7",
									"source": 6
								},
								{
									"begin": 1164,
									"end": 1186,
									"name": "ADD",
									"source": 6
								},
								{
									"begin": 1132,
									"end": 1196,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "13"
								},
								{
									"begin": 1132,
									"end": 1196,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 6
								},
								{
									"begin": 1132,
									"end": 1196,
									"name": "tag",
									"source": 6,
									"value": "29"
								},
								{
									"begin": 1132,
									"end": 1196,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 1122,
									"end": 1196,
									"name": "SWAP3",
									"source": 6
								},
								{
									"begin": 1122,
									"end": 1196,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 1078,
									"end": 1206,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 1245,
									"end": 1247,
									"name": "PUSH",
									"source": 6,
									"value": "20"
								},
								{
									"begin": 1271,
									"end": 1335,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "30"
								},
								{
									"begin": 1327,
									"end": 1334,
									"name": "DUP6",
									"source": 6
								},
								{
									"begin": 1318,
									"end": 1324,
									"name": "DUP3",
									"source": 6
								},
								{
									"begin": 1307,
									"end": 1316,
									"name": "DUP7",
									"source": 6
								},
								{
									"begin": 1303,
									"end": 1325,
									"name": "ADD",
									"source": 6
								},
								{
									"begin": 1271,
									"end": 1335,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "13"
								},
								{
									"begin": 1271,
									"end": 1335,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 6
								},
								{
									"begin": 1271,
									"end": 1335,
									"name": "tag",
									"source": 6,
									"value": "30"
								},
								{
									"begin": 1271,
									"end": 1335,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 1261,
									"end": 1335,
									"name": "SWAP2",
									"source": 6
								},
								{
									"begin": 1261,
									"end": 1335,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 1216,
									"end": 1345,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 845,
									"end": 1352,
									"name": "SWAP3",
									"source": 6
								},
								{
									"begin": 845,
									"end": 1352,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 845,
									"end": 1352,
									"name": "SWAP3",
									"source": 6
								},
								{
									"begin": 845,
									"end": 1352,
									"name": "SWAP1",
									"source": 6
								},
								{
									"begin": 845,
									"end": 1352,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 845,
									"end": 1352,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 6
								},
								{
									"begin": 235,
									"end": 2357,
									"name": "tag",
									"source": 4,
									"value": "6"
								},
								{
									"begin": 235,
									"end": 2357,
									"name": "JUMPDEST",
									"source": 4
								},
								{
									"begin": 235,
									"end": 2357,
									"name": "PUSH #[$]",
									"source": 4,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 235,
									"end": 2357,
									"name": "DUP1",
									"source": 4
								},
								{
									"begin": 235,
									"end": 2357,
									"name": "PUSH [$]",
									"source": 4,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 235,
									"end": 2357,
									"name": "PUSH",
									"source": 4,
									"value": "0"
								},
								{
									"begin": 235,
									"end": 2357,
									"name": "CODECOPY",
									"source": 4
								},
								{
									"begin": 235,
									"end": 2357,
									"name": "PUSH",
									"source": 4,
									"value": "0"
								},
								{
									"begin": 235,
									"end": 2357,
									"name": "RETURN",
									"source": 4
								}
							],
							".data": {
								"0": {
									".auxdata": "a264697066735822122058d0f50dc30d4707425dac32d3c3e1ca64397edfa86b19614d73b705a1a8c53f64736f6c63430008110033",
									".code": [
										{
											"begin": 235,
											"end": 2357,
											"name": "PUSH",
											"source": 4,
											"value": "80"
										},
										{
											"begin": 235,
											"end": 2357,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 235,
											"end": 2357,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 235,
											"end": 2357,
											"name": "PUSH",
											"source": 4,
											"value": "4"
										},
										{
											"begin": 235,
											"end": 2357,
											"name": "CALLDATASIZE",
											"source": 4
										},
										{
											"begin": 235,
											"end": 2357,
											"name": "LT",
											"source": 4
										},
										{
											"begin": 235,
											"end": 2357,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "1"
										},
										{
											"begin": 235,
											"end": 2357,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 235,
											"end": 2357,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 235,
											"end": 2357,
											"name": "CALLDATALOAD",
											"source": 4
										},
										{
											"begin": 235,
											"end": 2357,
											"name": "PUSH",
											"source": 4,
											"value": "E0"
										},
										{
											"begin": 235,
											"end": 2357,
											"name": "SHR",
											"source": 4
										},
										{
											"begin": 235,
											"end": 2357,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 235,
											"end": 2357,
											"name": "PUSH",
											"source": 4,
											"value": "7EE83A1"
										},
										{
											"begin": 235,
											"end": 2357,
											"name": "EQ",
											"source": 4
										},
										{
											"begin": 235,
											"end": 2357,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "2"
										},
										{
											"begin": 235,
											"end": 2357,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 235,
											"end": 2357,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 235,
											"end": 2357,
											"name": "PUSH",
											"source": 4,
											"value": "3FC8CEF3"
										},
										{
											"begin": 235,
											"end": 2357,
											"name": "EQ",
											"source": 4
										},
										{
											"begin": 235,
											"end": 2357,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "3"
										},
										{
											"begin": 235,
											"end": 2357,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 235,
											"end": 2357,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 235,
											"end": 2357,
											"name": "PUSH",
											"source": 4,
											"value": "7D17FF3D"
										},
										{
											"begin": 235,
											"end": 2357,
											"name": "EQ",
											"source": 4
										},
										{
											"begin": 235,
											"end": 2357,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "4"
										},
										{
											"begin": 235,
											"end": 2357,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 235,
											"end": 2357,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 235,
											"end": 2357,
											"name": "PUSH",
											"source": 4,
											"value": "839DA792"
										},
										{
											"begin": 235,
											"end": 2357,
											"name": "EQ",
											"source": 4
										},
										{
											"begin": 235,
											"end": 2357,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "5"
										},
										{
											"begin": 235,
											"end": 2357,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 235,
											"end": 2357,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 235,
											"end": 2357,
											"name": "PUSH",
											"source": 4,
											"value": "B4688DC8"
										},
										{
											"begin": 235,
											"end": 2357,
											"name": "EQ",
											"source": 4
										},
										{
											"begin": 235,
											"end": 2357,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "6"
										},
										{
											"begin": 235,
											"end": 2357,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 235,
											"end": 2357,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 235,
											"end": 2357,
											"name": "PUSH",
											"source": 4,
											"value": "F887EA40"
										},
										{
											"begin": 235,
											"end": 2357,
											"name": "EQ",
											"source": 4
										},
										{
											"begin": 235,
											"end": 2357,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "7"
										},
										{
											"begin": 235,
											"end": 2357,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 235,
											"end": 2357,
											"name": "tag",
											"source": 4,
											"value": "1"
										},
										{
											"begin": 235,
											"end": 2357,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 235,
											"end": 2357,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 235,
											"end": 2357,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 235,
											"end": 2357,
											"name": "REVERT",
											"source": 4
										},
										{
											"begin": 1005,
											"end": 1517,
											"name": "tag",
											"source": 4,
											"value": "2"
										},
										{
											"begin": 1005,
											"end": 1517,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 1005,
											"end": 1517,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "8"
										},
										{
											"begin": 1005,
											"end": 1517,
											"name": "PUSH",
											"source": 4,
											"value": "4"
										},
										{
											"begin": 1005,
											"end": 1517,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 1005,
											"end": 1517,
											"name": "CALLDATASIZE",
											"source": 4
										},
										{
											"begin": 1005,
											"end": 1517,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 1005,
											"end": 1517,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 1005,
											"end": 1517,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 1005,
											"end": 1517,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 1005,
											"end": 1517,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "9"
										},
										{
											"begin": 1005,
											"end": 1517,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 1005,
											"end": 1517,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 1005,
											"end": 1517,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "10"
										},
										{
											"begin": 1005,
											"end": 1517,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 1005,
											"end": 1517,
											"name": "tag",
											"source": 4,
											"value": "9"
										},
										{
											"begin": 1005,
											"end": 1517,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 1005,
											"end": 1517,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "11"
										},
										{
											"begin": 1005,
											"end": 1517,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 1005,
											"end": 1517,
											"name": "tag",
											"source": 4,
											"value": "8"
										},
										{
											"begin": 1005,
											"end": 1517,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 1005,
											"end": 1517,
											"name": "STOP",
											"source": 4
										},
										{
											"begin": 324,
											"end": 343,
											"name": "tag",
											"source": 4,
											"value": "3"
										},
										{
											"begin": 324,
											"end": 343,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 324,
											"end": 343,
											"name": "CALLVALUE",
											"source": 4
										},
										{
											"begin": 324,
											"end": 343,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 324,
											"end": 343,
											"name": "ISZERO",
											"source": 4
										},
										{
											"begin": 324,
											"end": 343,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "12"
										},
										{
											"begin": 324,
											"end": 343,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 324,
											"end": 343,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 324,
											"end": 343,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 324,
											"end": 343,
											"name": "REVERT",
											"source": 4
										},
										{
											"begin": 324,
											"end": 343,
											"name": "tag",
											"source": 4,
											"value": "12"
										},
										{
											"begin": 324,
											"end": 343,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 324,
											"end": 343,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 324,
											"end": 343,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "13"
										},
										{
											"begin": 324,
											"end": 343,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "14"
										},
										{
											"begin": 324,
											"end": 343,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 324,
											"end": 343,
											"name": "tag",
											"source": 4,
											"value": "13"
										},
										{
											"begin": 324,
											"end": 343,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 324,
											"end": 343,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 324,
											"end": 343,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 324,
											"end": 343,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "15"
										},
										{
											"begin": 324,
											"end": 343,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 324,
											"end": 343,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 324,
											"end": 343,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "16"
										},
										{
											"begin": 324,
											"end": 343,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 324,
											"end": 343,
											"name": "tag",
											"source": 4,
											"value": "15"
										},
										{
											"begin": 324,
											"end": 343,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 324,
											"end": 343,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 324,
											"end": 343,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 324,
											"end": 343,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 324,
											"end": 343,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 324,
											"end": 343,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 324,
											"end": 343,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 324,
											"end": 343,
											"name": "RETURN",
											"source": 4
										},
										{
											"begin": 1898,
											"end": 2354,
											"name": "tag",
											"source": 4,
											"value": "4"
										},
										{
											"begin": 1898,
											"end": 2354,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 1898,
											"end": 2354,
											"name": "CALLVALUE",
											"source": 4
										},
										{
											"begin": 1898,
											"end": 2354,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 1898,
											"end": 2354,
											"name": "ISZERO",
											"source": 4
										},
										{
											"begin": 1898,
											"end": 2354,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "17"
										},
										{
											"begin": 1898,
											"end": 2354,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 1898,
											"end": 2354,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 1898,
											"end": 2354,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 1898,
											"end": 2354,
											"name": "REVERT",
											"source": 4
										},
										{
											"begin": 1898,
											"end": 2354,
											"name": "tag",
											"source": 4,
											"value": "17"
										},
										{
											"begin": 1898,
											"end": 2354,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 1898,
											"end": 2354,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 1898,
											"end": 2354,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "18"
										},
										{
											"begin": 1898,
											"end": 2354,
											"name": "PUSH",
											"source": 4,
											"value": "4"
										},
										{
											"begin": 1898,
											"end": 2354,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 1898,
											"end": 2354,
											"name": "CALLDATASIZE",
											"source": 4
										},
										{
											"begin": 1898,
											"end": 2354,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 1898,
											"end": 2354,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 1898,
											"end": 2354,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 1898,
											"end": 2354,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 1898,
											"end": 2354,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "19"
										},
										{
											"begin": 1898,
											"end": 2354,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 1898,
											"end": 2354,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 1898,
											"end": 2354,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 1898,
											"end": 2354,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 1898,
											"end": 2354,
											"name": "tag",
											"source": 4,
											"value": "19"
										},
										{
											"begin": 1898,
											"end": 2354,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 1898,
											"end": 2354,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "21"
										},
										{
											"begin": 1898,
											"end": 2354,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 1898,
											"end": 2354,
											"name": "tag",
											"source": 4,
											"value": "18"
										},
										{
											"begin": 1898,
											"end": 2354,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 1898,
											"end": 2354,
											"name": "STOP",
											"source": 4
										},
										{
											"begin": 494,
											"end": 957,
											"name": "tag",
											"source": 4,
											"value": "5"
										},
										{
											"begin": 494,
											"end": 957,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 494,
											"end": 957,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "22"
										},
										{
											"begin": 494,
											"end": 957,
											"name": "PUSH",
											"source": 4,
											"value": "4"
										},
										{
											"begin": 494,
											"end": 957,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 494,
											"end": 957,
											"name": "CALLDATASIZE",
											"source": 4
										},
										{
											"begin": 494,
											"end": 957,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 494,
											"end": 957,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 494,
											"end": 957,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 494,
											"end": 957,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 494,
											"end": 957,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "23"
										},
										{
											"begin": 494,
											"end": 957,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 494,
											"end": 957,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 494,
											"end": 957,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "24"
										},
										{
											"begin": 494,
											"end": 957,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 494,
											"end": 957,
											"name": "tag",
											"source": 4,
											"value": "23"
										},
										{
											"begin": 494,
											"end": 957,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 494,
											"end": 957,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "25"
										},
										{
											"begin": 494,
											"end": 957,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 494,
											"end": 957,
											"name": "tag",
											"source": 4,
											"value": "22"
										},
										{
											"begin": 494,
											"end": 957,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 494,
											"end": 957,
											"name": "STOP",
											"source": 4
										},
										{
											"begin": 1551,
											"end": 1861,
											"name": "tag",
											"source": 4,
											"value": "6"
										},
										{
											"begin": 1551,
											"end": 1861,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 1551,
											"end": 1861,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "26"
										},
										{
											"begin": 1551,
											"end": 1861,
											"name": "PUSH",
											"source": 4,
											"value": "4"
										},
										{
											"begin": 1551,
											"end": 1861,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 1551,
											"end": 1861,
											"name": "CALLDATASIZE",
											"source": 4
										},
										{
											"begin": 1551,
											"end": 1861,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 1551,
											"end": 1861,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 1551,
											"end": 1861,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 1551,
											"end": 1861,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 1551,
											"end": 1861,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "27"
										},
										{
											"begin": 1551,
											"end": 1861,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 1551,
											"end": 1861,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 1551,
											"end": 1861,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "24"
										},
										{
											"begin": 1551,
											"end": 1861,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 1551,
											"end": 1861,
											"name": "tag",
											"source": 4,
											"value": "27"
										},
										{
											"begin": 1551,
											"end": 1861,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 1551,
											"end": 1861,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "28"
										},
										{
											"begin": 1551,
											"end": 1861,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 1551,
											"end": 1861,
											"name": "tag",
											"source": 4,
											"value": "26"
										},
										{
											"begin": 1551,
											"end": 1861,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 1551,
											"end": 1861,
											"name": "STOP",
											"source": 4
										},
										{
											"begin": 297,
											"end": 318,
											"name": "tag",
											"source": 4,
											"value": "7"
										},
										{
											"begin": 297,
											"end": 318,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 297,
											"end": 318,
											"name": "CALLVALUE",
											"source": 4
										},
										{
											"begin": 297,
											"end": 318,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 297,
											"end": 318,
											"name": "ISZERO",
											"source": 4
										},
										{
											"begin": 297,
											"end": 318,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "29"
										},
										{
											"begin": 297,
											"end": 318,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 297,
											"end": 318,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 297,
											"end": 318,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 297,
											"end": 318,
											"name": "REVERT",
											"source": 4
										},
										{
											"begin": 297,
											"end": 318,
											"name": "tag",
											"source": 4,
											"value": "29"
										},
										{
											"begin": 297,
											"end": 318,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 297,
											"end": 318,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 297,
											"end": 318,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "30"
										},
										{
											"begin": 297,
											"end": 318,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "31"
										},
										{
											"begin": 297,
											"end": 318,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 297,
											"end": 318,
											"name": "tag",
											"source": 4,
											"value": "30"
										},
										{
											"begin": 297,
											"end": 318,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 297,
											"end": 318,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 297,
											"end": 318,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 297,
											"end": 318,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "32"
										},
										{
											"begin": 297,
											"end": 318,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 297,
											"end": 318,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 297,
											"end": 318,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "16"
										},
										{
											"begin": 297,
											"end": 318,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 297,
											"end": 318,
											"name": "tag",
											"source": 4,
											"value": "32"
										},
										{
											"begin": 297,
											"end": 318,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 297,
											"end": 318,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 297,
											"end": 318,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 297,
											"end": 318,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 297,
											"end": 318,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 297,
											"end": 318,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 297,
											"end": 318,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 297,
											"end": 318,
											"name": "RETURN",
											"source": 4
										},
										{
											"begin": 1005,
											"end": 1517,
											"name": "tag",
											"source": 4,
											"value": "11"
										},
										{
											"begin": 1005,
											"end": 1517,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 1111,
											"end": 1178,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "34"
										},
										{
											"begin": 1143,
											"end": 1153,
											"name": "CALLER",
											"source": 4
										},
										{
											"begin": 1163,
											"end": 1167,
											"name": "ADDRESS",
											"source": 4
										},
										{
											"begin": 1170,
											"end": 1177,
											"name": "DUP6",
											"source": 4
										},
										{
											"begin": 1118,
											"end": 1124,
											"name": "DUP8",
											"source": 4
										},
										{
											"begin": 1111,
											"end": 1142,
											"name": "PUSH",
											"source": 4,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1111,
											"end": 1142,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 1111,
											"end": 1142,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "35"
										},
										{
											"begin": 1111,
											"end": 1142,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 1111,
											"end": 1178,
											"name": "SWAP4",
											"source": 4
										},
										{
											"begin": 1111,
											"end": 1178,
											"name": "SWAP3",
											"source": 4
										},
										{
											"begin": 1111,
											"end": 1178,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 1111,
											"end": 1178,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 1111,
											"end": 1178,
											"name": "PUSH",
											"source": 4,
											"value": "FFFFFFFF"
										},
										{
											"begin": 1111,
											"end": 1178,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 1111,
											"end": 1178,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 1111,
											"end": 1178,
											"name": "tag",
											"source": 4,
											"value": "34"
										},
										{
											"begin": 1111,
											"end": 1178,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 1188,
											"end": 1231,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "36"
										},
										{
											"begin": 1215,
											"end": 1221,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 1215,
											"end": 1221,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 1215,
											"end": 1221,
											"name": "SLOAD",
											"source": 4
										},
										{
											"begin": 1215,
											"end": 1221,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 1215,
											"end": 1221,
											"name": "PUSH",
											"source": 4,
											"value": "100"
										},
										{
											"begin": 1215,
											"end": 1221,
											"name": "EXP",
											"source": 4
										},
										{
											"begin": 1215,
											"end": 1221,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 1215,
											"end": 1221,
											"name": "DIV",
											"source": 4
										},
										{
											"begin": 1215,
											"end": 1221,
											"name": "PUSH",
											"source": 4,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1215,
											"end": 1221,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 1223,
											"end": 1230,
											"name": "DUP5",
											"source": 4
										},
										{
											"begin": 1195,
											"end": 1201,
											"name": "DUP7",
											"source": 4
										},
										{
											"begin": 1188,
											"end": 1214,
											"name": "PUSH",
											"source": 4,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1188,
											"end": 1214,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 1188,
											"end": 1214,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "37"
										},
										{
											"begin": 1188,
											"end": 1214,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 1188,
											"end": 1231,
											"name": "SWAP3",
											"source": 4
										},
										{
											"begin": 1188,
											"end": 1231,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 1188,
											"end": 1231,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 1188,
											"end": 1231,
											"name": "PUSH",
											"source": 4,
											"value": "FFFFFFFF"
										},
										{
											"begin": 1188,
											"end": 1231,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 1188,
											"end": 1231,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 1188,
											"end": 1231,
											"name": "tag",
											"source": 4,
											"value": "36"
										},
										{
											"begin": 1188,
											"end": 1231,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 1242,
											"end": 1309,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "38"
										},
										{
											"begin": 1274,
											"end": 1284,
											"name": "CALLER",
											"source": 4
										},
										{
											"begin": 1294,
											"end": 1298,
											"name": "ADDRESS",
											"source": 4
										},
										{
											"begin": 1301,
											"end": 1308,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 1249,
											"end": 1255,
											"name": "DUP6",
											"source": 4
										},
										{
											"begin": 1242,
											"end": 1273,
											"name": "PUSH",
											"source": 4,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1242,
											"end": 1273,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 1242,
											"end": 1273,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "35"
										},
										{
											"begin": 1242,
											"end": 1273,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 1242,
											"end": 1309,
											"name": "SWAP4",
											"source": 4
										},
										{
											"begin": 1242,
											"end": 1309,
											"name": "SWAP3",
											"source": 4
										},
										{
											"begin": 1242,
											"end": 1309,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 1242,
											"end": 1309,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 1242,
											"end": 1309,
											"name": "PUSH",
											"source": 4,
											"value": "FFFFFFFF"
										},
										{
											"begin": 1242,
											"end": 1309,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 1242,
											"end": 1309,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 1242,
											"end": 1309,
											"name": "tag",
											"source": 4,
											"value": "38"
										},
										{
											"begin": 1242,
											"end": 1309,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 1319,
											"end": 1362,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "39"
										},
										{
											"begin": 1346,
											"end": 1352,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 1346,
											"end": 1352,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 1346,
											"end": 1352,
											"name": "SLOAD",
											"source": 4
										},
										{
											"begin": 1346,
											"end": 1352,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 1346,
											"end": 1352,
											"name": "PUSH",
											"source": 4,
											"value": "100"
										},
										{
											"begin": 1346,
											"end": 1352,
											"name": "EXP",
											"source": 4
										},
										{
											"begin": 1346,
											"end": 1352,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 1346,
											"end": 1352,
											"name": "DIV",
											"source": 4
										},
										{
											"begin": 1346,
											"end": 1352,
											"name": "PUSH",
											"source": 4,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1346,
											"end": 1352,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 1354,
											"end": 1361,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 1326,
											"end": 1332,
											"name": "DUP5",
											"source": 4
										},
										{
											"begin": 1319,
											"end": 1345,
											"name": "PUSH",
											"source": 4,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1319,
											"end": 1345,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 1319,
											"end": 1345,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "37"
										},
										{
											"begin": 1319,
											"end": 1345,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 1319,
											"end": 1362,
											"name": "SWAP3",
											"source": 4
										},
										{
											"begin": 1319,
											"end": 1362,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 1319,
											"end": 1362,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 1319,
											"end": 1362,
											"name": "PUSH",
											"source": 4,
											"value": "FFFFFFFF"
										},
										{
											"begin": 1319,
											"end": 1362,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 1319,
											"end": 1362,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 1319,
											"end": 1362,
											"name": "tag",
											"source": 4,
											"value": "39"
										},
										{
											"begin": 1319,
											"end": 1362,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 1392,
											"end": 1398,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 1392,
											"end": 1398,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 1392,
											"end": 1398,
											"name": "SLOAD",
											"source": 4
										},
										{
											"begin": 1392,
											"end": 1398,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 1392,
											"end": 1398,
											"name": "PUSH",
											"source": 4,
											"value": "100"
										},
										{
											"begin": 1392,
											"end": 1398,
											"name": "EXP",
											"source": 4
										},
										{
											"begin": 1392,
											"end": 1398,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 1392,
											"end": 1398,
											"name": "DIV",
											"source": 4
										},
										{
											"begin": 1392,
											"end": 1398,
											"name": "PUSH",
											"source": 4,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1392,
											"end": 1398,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 1373,
											"end": 1412,
											"name": "PUSH",
											"source": 4,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1373,
											"end": 1412,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 1373,
											"end": 1412,
											"name": "PUSH",
											"source": 4,
											"value": "E8E33700"
										},
										{
											"begin": 1413,
											"end": 1419,
											"name": "DUP6",
											"source": 4
										},
										{
											"begin": 1421,
											"end": 1427,
											"name": "DUP5",
											"source": 4
										},
										{
											"begin": 1429,
											"end": 1436,
											"name": "DUP7",
											"source": 4
										},
										{
											"begin": 1438,
											"end": 1445,
											"name": "DUP6",
											"source": 4
										},
										{
											"begin": 1447,
											"end": 1448,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 1450,
											"end": 1451,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 1453,
											"end": 1463,
											"name": "CALLER",
											"source": 4
										},
										{
											"begin": 1465,
											"end": 1480,
											"name": "TIMESTAMP",
											"source": 4
										},
										{
											"begin": 1373,
											"end": 1481,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 1373,
											"end": 1481,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 1373,
											"end": 1481,
											"name": "DUP10",
											"source": 4
										},
										{
											"begin": 1373,
											"end": 1481,
											"name": "PUSH",
											"source": 4,
											"value": "FFFFFFFF"
										},
										{
											"begin": 1373,
											"end": 1481,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 1373,
											"end": 1481,
											"name": "PUSH",
											"source": 4,
											"value": "E0"
										},
										{
											"begin": 1373,
											"end": 1481,
											"name": "SHL",
											"source": 4
										},
										{
											"begin": 1373,
											"end": 1481,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 1373,
											"end": 1481,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 1373,
											"end": 1481,
											"name": "PUSH",
											"source": 4,
											"value": "4"
										},
										{
											"begin": 1373,
											"end": 1481,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 1373,
											"end": 1481,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 1373,
											"end": 1481,
											"name": "SWAP9",
											"source": 4
										},
										{
											"begin": 1373,
											"end": 1481,
											"name": "SWAP8",
											"source": 4
										},
										{
											"begin": 1373,
											"end": 1481,
											"name": "SWAP7",
											"source": 4
										},
										{
											"begin": 1373,
											"end": 1481,
											"name": "SWAP6",
											"source": 4
										},
										{
											"begin": 1373,
											"end": 1481,
											"name": "SWAP5",
											"source": 4
										},
										{
											"begin": 1373,
											"end": 1481,
											"name": "SWAP4",
											"source": 4
										},
										{
											"begin": 1373,
											"end": 1481,
											"name": "SWAP3",
											"source": 4
										},
										{
											"begin": 1373,
											"end": 1481,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 1373,
											"end": 1481,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 1373,
											"end": 1481,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "41"
										},
										{
											"begin": 1373,
											"end": 1481,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 1373,
											"end": 1481,
											"name": "tag",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 1373,
											"end": 1481,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 1373,
											"end": 1481,
											"name": "PUSH",
											"source": 4,
											"value": "60"
										},
										{
											"begin": 1373,
											"end": 1481,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 1373,
											"end": 1481,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 1373,
											"end": 1481,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 1373,
											"end": 1481,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 1373,
											"end": 1481,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 1373,
											"end": 1481,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 1373,
											"end": 1481,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 1373,
											"end": 1481,
											"name": "DUP8",
											"source": 4
										},
										{
											"begin": 1373,
											"end": 1481,
											"name": "GAS",
											"source": 4
										},
										{
											"begin": 1373,
											"end": 1481,
											"name": "CALL",
											"source": 4
										},
										{
											"begin": 1373,
											"end": 1481,
											"name": "ISZERO",
											"source": 4
										},
										{
											"begin": 1373,
											"end": 1481,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 1373,
											"end": 1481,
											"name": "ISZERO",
											"source": 4
										},
										{
											"begin": 1373,
											"end": 1481,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "43"
										},
										{
											"begin": 1373,
											"end": 1481,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 1373,
											"end": 1481,
											"name": "RETURNDATASIZE",
											"source": 4
										},
										{
											"begin": 1373,
											"end": 1481,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 1373,
											"end": 1481,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 1373,
											"end": 1481,
											"name": "RETURNDATACOPY",
											"source": 4
										},
										{
											"begin": 1373,
											"end": 1481,
											"name": "RETURNDATASIZE",
											"source": 4
										},
										{
											"begin": 1373,
											"end": 1481,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 1373,
											"end": 1481,
											"name": "REVERT",
											"source": 4
										},
										{
											"begin": 1373,
											"end": 1481,
											"name": "tag",
											"source": 4,
											"value": "43"
										},
										{
											"begin": 1373,
											"end": 1481,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 1373,
											"end": 1481,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 1373,
											"end": 1481,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 1373,
											"end": 1481,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 1373,
											"end": 1481,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 1373,
											"end": 1481,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 1373,
											"end": 1481,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 1373,
											"end": 1481,
											"name": "RETURNDATASIZE",
											"source": 4
										},
										{
											"begin": 1373,
											"end": 1481,
											"name": "PUSH",
											"source": 4,
											"value": "1F"
										},
										{
											"begin": 1373,
											"end": 1481,
											"name": "NOT",
											"source": 4
										},
										{
											"begin": 1373,
											"end": 1481,
											"name": "PUSH",
											"source": 4,
											"value": "1F"
										},
										{
											"begin": 1373,
											"end": 1481,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 1373,
											"end": 1481,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 1373,
											"end": 1481,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 1373,
											"end": 1481,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 1373,
											"end": 1481,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 1373,
											"end": 1481,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 1373,
											"end": 1481,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 1373,
											"end": 1481,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 1373,
											"end": 1481,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 1373,
											"end": 1481,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 1373,
											"end": 1481,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 1373,
											"end": 1481,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 1373,
											"end": 1481,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "44"
										},
										{
											"begin": 1373,
											"end": 1481,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 1373,
											"end": 1481,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 1373,
											"end": 1481,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "45"
										},
										{
											"begin": 1373,
											"end": 1481,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 1373,
											"end": 1481,
											"name": "tag",
											"source": 4,
											"value": "44"
										},
										{
											"begin": 1373,
											"end": 1481,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 1373,
											"end": 1481,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 1373,
											"end": 1481,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 1373,
											"end": 1481,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 1005,
											"end": 1517,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 1005,
											"end": 1517,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 1005,
											"end": 1517,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 1005,
											"end": 1517,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 1005,
											"end": 1517,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 324,
											"end": 343,
											"name": "tag",
											"source": 4,
											"value": "14"
										},
										{
											"begin": 324,
											"end": 343,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 324,
											"end": 343,
											"name": "PUSH",
											"source": 4,
											"value": "1"
										},
										{
											"begin": 324,
											"end": 343,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 324,
											"end": 343,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 324,
											"end": 343,
											"name": "SLOAD",
											"source": 4
										},
										{
											"begin": 324,
											"end": 343,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 324,
											"end": 343,
											"name": "PUSH",
											"source": 4,
											"value": "100"
										},
										{
											"begin": 324,
											"end": 343,
											"name": "EXP",
											"source": 4
										},
										{
											"begin": 324,
											"end": 343,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 324,
											"end": 343,
											"name": "DIV",
											"source": 4
										},
										{
											"begin": 324,
											"end": 343,
											"name": "PUSH",
											"source": 4,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 324,
											"end": 343,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 324,
											"end": 343,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 324,
											"end": 343,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 1898,
											"end": 2354,
											"name": "tag",
											"source": 4,
											"value": "21"
										},
										{
											"begin": 1898,
											"end": 2354,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 2001,
											"end": 2022,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 2039,
											"end": 2040,
											"name": "PUSH",
											"source": 4,
											"value": "2"
										},
										{
											"begin": 2025,
											"end": 2041,
											"name": "PUSH",
											"source": 4,
											"value": "FFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2025,
											"end": 2041,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 2025,
											"end": 2041,
											"name": "GT",
											"source": 4
										},
										{
											"begin": 2025,
											"end": 2041,
											"name": "ISZERO",
											"source": 4
										},
										{
											"begin": 2025,
											"end": 2041,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "47"
										},
										{
											"begin": 2025,
											"end": 2041,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 2025,
											"end": 2041,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "48"
										},
										{
											"begin": 2025,
											"end": 2041,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "49"
										},
										{
											"begin": 2025,
											"end": 2041,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 2025,
											"end": 2041,
											"name": "tag",
											"source": 4,
											"value": "48"
										},
										{
											"begin": 2025,
											"end": 2041,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 2025,
											"end": 2041,
											"name": "tag",
											"source": 4,
											"value": "47"
										},
										{
											"begin": 2025,
											"end": 2041,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 2025,
											"end": 2041,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 2025,
											"end": 2041,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 2025,
											"end": 2041,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 2025,
											"end": 2041,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 2025,
											"end": 2041,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 2025,
											"end": 2041,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 2025,
											"end": 2041,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 2025,
											"end": 2041,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 2025,
											"end": 2041,
											"name": "MUL",
											"source": 4
										},
										{
											"begin": 2025,
											"end": 2041,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 2025,
											"end": 2041,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 2025,
											"end": 2041,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 2025,
											"end": 2041,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 2025,
											"end": 2041,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 2025,
											"end": 2041,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 2025,
											"end": 2041,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 2025,
											"end": 2041,
											"name": "ISZERO",
											"source": 4
										},
										{
											"begin": 2025,
											"end": 2041,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "50"
										},
										{
											"begin": 2025,
											"end": 2041,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 2025,
											"end": 2041,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 2025,
											"end": 2041,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 2025,
											"end": 2041,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 2025,
											"end": 2041,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 2025,
											"end": 2041,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 2025,
											"end": 2041,
											"name": "MUL",
											"source": 4
										},
										{
											"begin": 2025,
											"end": 2041,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 2025,
											"end": 2041,
											"name": "CALLDATASIZE",
											"source": 4
										},
										{
											"begin": 2025,
											"end": 2041,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 2025,
											"end": 2041,
											"name": "CALLDATACOPY",
											"source": 4
										},
										{
											"begin": 2025,
											"end": 2041,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 2025,
											"end": 2041,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 2025,
											"end": 2041,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 2025,
											"end": 2041,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 2025,
											"end": 2041,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 2025,
											"end": 2041,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 2025,
											"end": 2041,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 2025,
											"end": 2041,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 2025,
											"end": 2041,
											"name": "tag",
											"source": 4,
											"value": "50"
										},
										{
											"begin": 2025,
											"end": 2041,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 2025,
											"end": 2041,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 2001,
											"end": 2041,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 2001,
											"end": 2041,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 2061,
											"end": 2067,
											"name": "DUP5",
											"source": 4
										},
										{
											"begin": 2051,
											"end": 2055,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 2056,
											"end": 2057,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 2051,
											"end": 2058,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 2051,
											"end": 2058,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 2051,
											"end": 2058,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 2051,
											"end": 2058,
											"name": "LT",
											"source": 4
										},
										{
											"begin": 2051,
											"end": 2058,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "51"
										},
										{
											"begin": 2051,
											"end": 2058,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 2051,
											"end": 2058,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "52"
										},
										{
											"begin": 2051,
											"end": 2058,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "53"
										},
										{
											"begin": 2051,
											"end": 2058,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 2051,
											"end": 2058,
											"name": "tag",
											"source": 4,
											"value": "52"
										},
										{
											"begin": 2051,
											"end": 2058,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 2051,
											"end": 2058,
											"name": "tag",
											"source": 4,
											"value": "51"
										},
										{
											"begin": 2051,
											"end": 2058,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 2051,
											"end": 2058,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 2051,
											"end": 2058,
											"name": "MUL",
											"source": 4
										},
										{
											"begin": 2051,
											"end": 2058,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 2051,
											"end": 2058,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 2051,
											"end": 2058,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 2051,
											"end": 2067,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 2051,
											"end": 2067,
											"name": "PUSH",
											"source": 4,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2051,
											"end": 2067,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 2051,
											"end": 2067,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 2051,
											"end": 2067,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 2051,
											"end": 2067,
											"name": "PUSH",
											"source": 4,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2051,
											"end": 2067,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 2051,
											"end": 2067,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 2051,
											"end": 2067,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 2051,
											"end": 2067,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 2051,
											"end": 2067,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 2087,
											"end": 2093,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 2077,
											"end": 2081,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 2082,
											"end": 2083,
											"name": "PUSH",
											"source": 4,
											"value": "1"
										},
										{
											"begin": 2077,
											"end": 2084,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 2077,
											"end": 2084,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 2077,
											"end": 2084,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 2077,
											"end": 2084,
											"name": "LT",
											"source": 4
										},
										{
											"begin": 2077,
											"end": 2084,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "54"
										},
										{
											"begin": 2077,
											"end": 2084,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 2077,
											"end": 2084,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "55"
										},
										{
											"begin": 2077,
											"end": 2084,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "53"
										},
										{
											"begin": 2077,
											"end": 2084,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 2077,
											"end": 2084,
											"name": "tag",
											"source": 4,
											"value": "55"
										},
										{
											"begin": 2077,
											"end": 2084,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 2077,
											"end": 2084,
											"name": "tag",
											"source": 4,
											"value": "54"
										},
										{
											"begin": 2077,
											"end": 2084,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 2077,
											"end": 2084,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 2077,
											"end": 2084,
											"name": "MUL",
											"source": 4
										},
										{
											"begin": 2077,
											"end": 2084,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 2077,
											"end": 2084,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 2077,
											"end": 2084,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 2077,
											"end": 2093,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 2077,
											"end": 2093,
											"name": "PUSH",
											"source": 4,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2077,
											"end": 2093,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 2077,
											"end": 2093,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 2077,
											"end": 2093,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 2077,
											"end": 2093,
											"name": "PUSH",
											"source": 4,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2077,
											"end": 2093,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 2077,
											"end": 2093,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 2077,
											"end": 2093,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 2077,
											"end": 2093,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 2077,
											"end": 2093,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 2103,
											"end": 2171,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "56"
										},
										{
											"begin": 2135,
											"end": 2145,
											"name": "CALLER",
											"source": 4
										},
										{
											"begin": 2155,
											"end": 2159,
											"name": "ADDRESS",
											"source": 4
										},
										{
											"begin": 2162,
											"end": 2170,
											"name": "DUP6",
											"source": 4
										},
										{
											"begin": 2110,
											"end": 2116,
											"name": "DUP9",
											"source": 4
										},
										{
											"begin": 2103,
											"end": 2134,
											"name": "PUSH",
											"source": 4,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2103,
											"end": 2134,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 2103,
											"end": 2134,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "35"
										},
										{
											"begin": 2103,
											"end": 2134,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 2103,
											"end": 2171,
											"name": "SWAP4",
											"source": 4
										},
										{
											"begin": 2103,
											"end": 2171,
											"name": "SWAP3",
											"source": 4
										},
										{
											"begin": 2103,
											"end": 2171,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 2103,
											"end": 2171,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 2103,
											"end": 2171,
											"name": "PUSH",
											"source": 4,
											"value": "FFFFFFFF"
										},
										{
											"begin": 2103,
											"end": 2171,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 2103,
											"end": 2171,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 2103,
											"end": 2171,
											"name": "tag",
											"source": 4,
											"value": "56"
										},
										{
											"begin": 2103,
											"end": 2171,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 2181,
											"end": 2225,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "57"
										},
										{
											"begin": 2208,
											"end": 2214,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 2208,
											"end": 2214,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 2208,
											"end": 2214,
											"name": "SLOAD",
											"source": 4
										},
										{
											"begin": 2208,
											"end": 2214,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 2208,
											"end": 2214,
											"name": "PUSH",
											"source": 4,
											"value": "100"
										},
										{
											"begin": 2208,
											"end": 2214,
											"name": "EXP",
											"source": 4
										},
										{
											"begin": 2208,
											"end": 2214,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 2208,
											"end": 2214,
											"name": "DIV",
											"source": 4
										},
										{
											"begin": 2208,
											"end": 2214,
											"name": "PUSH",
											"source": 4,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2208,
											"end": 2214,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 2216,
											"end": 2224,
											"name": "DUP5",
											"source": 4
										},
										{
											"begin": 2188,
											"end": 2194,
											"name": "DUP8",
											"source": 4
										},
										{
											"begin": 2181,
											"end": 2207,
											"name": "PUSH",
											"source": 4,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2181,
											"end": 2207,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 2181,
											"end": 2207,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "37"
										},
										{
											"begin": 2181,
											"end": 2207,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 2181,
											"end": 2225,
											"name": "SWAP3",
											"source": 4
										},
										{
											"begin": 2181,
											"end": 2225,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 2181,
											"end": 2225,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 2181,
											"end": 2225,
											"name": "PUSH",
											"source": 4,
											"value": "FFFFFFFF"
										},
										{
											"begin": 2181,
											"end": 2225,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 2181,
											"end": 2225,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 2181,
											"end": 2225,
											"name": "tag",
											"source": 4,
											"value": "57"
										},
										{
											"begin": 2181,
											"end": 2225,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 2254,
											"end": 2260,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 2254,
											"end": 2260,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 2254,
											"end": 2260,
											"name": "SLOAD",
											"source": 4
										},
										{
											"begin": 2254,
											"end": 2260,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 2254,
											"end": 2260,
											"name": "PUSH",
											"source": 4,
											"value": "100"
										},
										{
											"begin": 2254,
											"end": 2260,
											"name": "EXP",
											"source": 4
										},
										{
											"begin": 2254,
											"end": 2260,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 2254,
											"end": 2260,
											"name": "DIV",
											"source": 4
										},
										{
											"begin": 2254,
											"end": 2260,
											"name": "PUSH",
											"source": 4,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2254,
											"end": 2260,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 2235,
											"end": 2286,
											"name": "PUSH",
											"source": 4,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2235,
											"end": 2286,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 2235,
											"end": 2286,
											"name": "PUSH",
											"source": 4,
											"value": "38ED1739"
										},
										{
											"begin": 2287,
											"end": 2295,
											"name": "DUP5",
											"source": 4
										},
										{
											"begin": 2297,
											"end": 2311,
											"name": "DUP5",
											"source": 4
										},
										{
											"begin": 2313,
											"end": 2317,
											"name": "DUP5",
											"source": 4
										},
										{
											"begin": 2319,
											"end": 2329,
											"name": "CALLER",
											"source": 4
										},
										{
											"begin": 2331,
											"end": 2346,
											"name": "TIMESTAMP",
											"source": 4
										},
										{
											"begin": 2235,
											"end": 2347,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 2235,
											"end": 2347,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 2235,
											"end": 2347,
											"name": "DUP7",
											"source": 4
										},
										{
											"begin": 2235,
											"end": 2347,
											"name": "PUSH",
											"source": 4,
											"value": "FFFFFFFF"
										},
										{
											"begin": 2235,
											"end": 2347,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 2235,
											"end": 2347,
											"name": "PUSH",
											"source": 4,
											"value": "E0"
										},
										{
											"begin": 2235,
											"end": 2347,
											"name": "SHL",
											"source": 4
										},
										{
											"begin": 2235,
											"end": 2347,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 2235,
											"end": 2347,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 2235,
											"end": 2347,
											"name": "PUSH",
											"source": 4,
											"value": "4"
										},
										{
											"begin": 2235,
											"end": 2347,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 2235,
											"end": 2347,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "58"
										},
										{
											"begin": 2235,
											"end": 2347,
											"name": "SWAP6",
											"source": 4
										},
										{
											"begin": 2235,
											"end": 2347,
											"name": "SWAP5",
											"source": 4
										},
										{
											"begin": 2235,
											"end": 2347,
											"name": "SWAP4",
											"source": 4
										},
										{
											"begin": 2235,
											"end": 2347,
											"name": "SWAP3",
											"source": 4
										},
										{
											"begin": 2235,
											"end": 2347,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 2235,
											"end": 2347,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 2235,
											"end": 2347,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "59"
										},
										{
											"begin": 2235,
											"end": 2347,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 2235,
											"end": 2347,
											"name": "tag",
											"source": 4,
											"value": "58"
										},
										{
											"begin": 2235,
											"end": 2347,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 2235,
											"end": 2347,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 2235,
											"end": 2347,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 2235,
											"end": 2347,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 2235,
											"end": 2347,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 2235,
											"end": 2347,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 2235,
											"end": 2347,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 2235,
											"end": 2347,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 2235,
											"end": 2347,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 2235,
											"end": 2347,
											"name": "DUP8",
											"source": 4
										},
										{
											"begin": 2235,
											"end": 2347,
											"name": "GAS",
											"source": 4
										},
										{
											"begin": 2235,
											"end": 2347,
											"name": "CALL",
											"source": 4
										},
										{
											"begin": 2235,
											"end": 2347,
											"name": "ISZERO",
											"source": 4
										},
										{
											"begin": 2235,
											"end": 2347,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 2235,
											"end": 2347,
											"name": "ISZERO",
											"source": 4
										},
										{
											"begin": 2235,
											"end": 2347,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "61"
										},
										{
											"begin": 2235,
											"end": 2347,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 2235,
											"end": 2347,
											"name": "RETURNDATASIZE",
											"source": 4
										},
										{
											"begin": 2235,
											"end": 2347,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 2235,
											"end": 2347,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 2235,
											"end": 2347,
											"name": "RETURNDATACOPY",
											"source": 4
										},
										{
											"begin": 2235,
											"end": 2347,
											"name": "RETURNDATASIZE",
											"source": 4
										},
										{
											"begin": 2235,
											"end": 2347,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 2235,
											"end": 2347,
											"name": "REVERT",
											"source": 4
										},
										{
											"begin": 2235,
											"end": 2347,
											"name": "tag",
											"source": 4,
											"value": "61"
										},
										{
											"begin": 2235,
											"end": 2347,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 2235,
											"end": 2347,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 2235,
											"end": 2347,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 2235,
											"end": 2347,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 2235,
											"end": 2347,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 2235,
											"end": 2347,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 2235,
											"end": 2347,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 2235,
											"end": 2347,
											"name": "RETURNDATASIZE",
											"source": 4
										},
										{
											"begin": 2235,
											"end": 2347,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 2235,
											"end": 2347,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 2235,
											"end": 2347,
											"name": "RETURNDATACOPY",
											"source": 4
										},
										{
											"begin": 2235,
											"end": 2347,
											"name": "RETURNDATASIZE",
											"source": 4
										},
										{
											"begin": 2235,
											"end": 2347,
											"name": "PUSH",
											"source": 4,
											"value": "1F"
										},
										{
											"begin": 2235,
											"end": 2347,
											"name": "NOT",
											"source": 4
										},
										{
											"begin": 2235,
											"end": 2347,
											"name": "PUSH",
											"source": 4,
											"value": "1F"
										},
										{
											"begin": 2235,
											"end": 2347,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 2235,
											"end": 2347,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 2235,
											"end": 2347,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 2235,
											"end": 2347,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 2235,
											"end": 2347,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 2235,
											"end": 2347,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 2235,
											"end": 2347,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 2235,
											"end": 2347,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 2235,
											"end": 2347,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 2235,
											"end": 2347,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 2235,
											"end": 2347,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 2235,
											"end": 2347,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 2235,
											"end": 2347,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "62"
										},
										{
											"begin": 2235,
											"end": 2347,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 2235,
											"end": 2347,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 2235,
											"end": 2347,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "63"
										},
										{
											"begin": 2235,
											"end": 2347,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 2235,
											"end": 2347,
											"name": "tag",
											"source": 4,
											"value": "62"
										},
										{
											"begin": 2235,
											"end": 2347,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 2235,
											"end": 2347,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 1991,
											"end": 2354,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 1898,
											"end": 2354,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 1898,
											"end": 2354,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 1898,
											"end": 2354,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 1898,
											"end": 2354,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 1898,
											"end": 2354,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 494,
											"end": 957,
											"name": "tag",
											"source": 4,
											"value": "25"
										},
										{
											"begin": 494,
											"end": 957,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 577,
											"end": 646,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "65"
										},
										{
											"begin": 608,
											"end": 618,
											"name": "CALLER",
											"source": 4
										},
										{
											"begin": 628,
											"end": 632,
											"name": "ADDRESS",
											"source": 4
										},
										{
											"begin": 634,
											"end": 645,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 584,
											"end": 589,
											"name": "DUP6",
											"source": 4
										},
										{
											"begin": 577,
											"end": 607,
											"name": "PUSH",
											"source": 4,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 577,
											"end": 607,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 577,
											"end": 607,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "35"
										},
										{
											"begin": 577,
											"end": 607,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 577,
											"end": 646,
											"name": "SWAP4",
											"source": 4
										},
										{
											"begin": 577,
											"end": 646,
											"name": "SWAP3",
											"source": 4
										},
										{
											"begin": 577,
											"end": 646,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 577,
											"end": 646,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 577,
											"end": 646,
											"name": "PUSH",
											"source": 4,
											"value": "FFFFFFFF"
										},
										{
											"begin": 577,
											"end": 646,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 577,
											"end": 646,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 577,
											"end": 646,
											"name": "tag",
											"source": 4,
											"value": "65"
										},
										{
											"begin": 577,
											"end": 646,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 656,
											"end": 702,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "66"
										},
										{
											"begin": 682,
											"end": 688,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 682,
											"end": 688,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 682,
											"end": 688,
											"name": "SLOAD",
											"source": 4
										},
										{
											"begin": 682,
											"end": 688,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 682,
											"end": 688,
											"name": "PUSH",
											"source": 4,
											"value": "100"
										},
										{
											"begin": 682,
											"end": 688,
											"name": "EXP",
											"source": 4
										},
										{
											"begin": 682,
											"end": 688,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 682,
											"end": 688,
											"name": "DIV",
											"source": 4
										},
										{
											"begin": 682,
											"end": 688,
											"name": "PUSH",
											"source": 4,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 682,
											"end": 688,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 690,
											"end": 701,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 663,
											"end": 668,
											"name": "DUP5",
											"source": 4
										},
										{
											"begin": 656,
											"end": 681,
											"name": "PUSH",
											"source": 4,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 656,
											"end": 681,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 656,
											"end": 681,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "37"
										},
										{
											"begin": 656,
											"end": 681,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 656,
											"end": 702,
											"name": "SWAP3",
											"source": 4
										},
										{
											"begin": 656,
											"end": 702,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 656,
											"end": 702,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 656,
											"end": 702,
											"name": "PUSH",
											"source": 4,
											"value": "FFFFFFFF"
										},
										{
											"begin": 656,
											"end": 702,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 656,
											"end": 702,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 656,
											"end": 702,
											"name": "tag",
											"source": 4,
											"value": "66"
										},
										{
											"begin": 656,
											"end": 702,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 825,
											"end": 831,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 825,
											"end": 831,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 825,
											"end": 831,
											"name": "SLOAD",
											"source": 4
										},
										{
											"begin": 825,
											"end": 831,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 825,
											"end": 831,
											"name": "PUSH",
											"source": 4,
											"value": "100"
										},
										{
											"begin": 825,
											"end": 831,
											"name": "EXP",
											"source": 4
										},
										{
											"begin": 825,
											"end": 831,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 825,
											"end": 831,
											"name": "DIV",
											"source": 4
										},
										{
											"begin": 825,
											"end": 831,
											"name": "PUSH",
											"source": 4,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 825,
											"end": 831,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 806,
											"end": 848,
											"name": "PUSH",
											"source": 4,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 806,
											"end": 848,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 806,
											"end": 848,
											"name": "PUSH",
											"source": 4,
											"value": "F305D719"
										},
										{
											"begin": 856,
											"end": 865,
											"name": "CALLVALUE",
											"source": 4
										},
										{
											"begin": 867,
											"end": 872,
											"name": "DUP5",
											"source": 4
										},
										{
											"begin": 874,
											"end": 885,
											"name": "DUP5",
											"source": 4
										},
										{
											"begin": 887,
											"end": 888,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 890,
											"end": 891,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 893,
											"end": 903,
											"name": "CALLER",
											"source": 4
										},
										{
											"begin": 905,
											"end": 920,
											"name": "TIMESTAMP",
											"source": 4
										},
										{
											"begin": 806,
											"end": 921,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 806,
											"end": 921,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 806,
											"end": 921,
											"name": "DUP9",
											"source": 4
										},
										{
											"begin": 806,
											"end": 921,
											"name": "PUSH",
											"source": 4,
											"value": "FFFFFFFF"
										},
										{
											"begin": 806,
											"end": 921,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 806,
											"end": 921,
											"name": "PUSH",
											"source": 4,
											"value": "E0"
										},
										{
											"begin": 806,
											"end": 921,
											"name": "SHL",
											"source": 4
										},
										{
											"begin": 806,
											"end": 921,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 806,
											"end": 921,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 806,
											"end": 921,
											"name": "PUSH",
											"source": 4,
											"value": "4"
										},
										{
											"begin": 806,
											"end": 921,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 806,
											"end": 921,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "67"
										},
										{
											"begin": 806,
											"end": 921,
											"name": "SWAP7",
											"source": 4
										},
										{
											"begin": 806,
											"end": 921,
											"name": "SWAP6",
											"source": 4
										},
										{
											"begin": 806,
											"end": 921,
											"name": "SWAP5",
											"source": 4
										},
										{
											"begin": 806,
											"end": 921,
											"name": "SWAP4",
											"source": 4
										},
										{
											"begin": 806,
											"end": 921,
											"name": "SWAP3",
											"source": 4
										},
										{
											"begin": 806,
											"end": 921,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 806,
											"end": 921,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 806,
											"end": 921,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "68"
										},
										{
											"begin": 806,
											"end": 921,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 806,
											"end": 921,
											"name": "tag",
											"source": 4,
											"value": "67"
										},
										{
											"begin": 806,
											"end": 921,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 806,
											"end": 921,
											"name": "PUSH",
											"source": 4,
											"value": "60"
										},
										{
											"begin": 806,
											"end": 921,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 806,
											"end": 921,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 806,
											"end": 921,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 806,
											"end": 921,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 806,
											"end": 921,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 806,
											"end": 921,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 806,
											"end": 921,
											"name": "DUP6",
											"source": 4
										},
										{
											"begin": 806,
											"end": 921,
											"name": "DUP9",
											"source": 4
										},
										{
											"begin": 806,
											"end": 921,
											"name": "GAS",
											"source": 4
										},
										{
											"begin": 806,
											"end": 921,
											"name": "CALL",
											"source": 4
										},
										{
											"begin": 806,
											"end": 921,
											"name": "ISZERO",
											"source": 4
										},
										{
											"begin": 806,
											"end": 921,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 806,
											"end": 921,
											"name": "ISZERO",
											"source": 4
										},
										{
											"begin": 806,
											"end": 921,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "70"
										},
										{
											"begin": 806,
											"end": 921,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 806,
											"end": 921,
											"name": "RETURNDATASIZE",
											"source": 4
										},
										{
											"begin": 806,
											"end": 921,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 806,
											"end": 921,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 806,
											"end": 921,
											"name": "RETURNDATACOPY",
											"source": 4
										},
										{
											"begin": 806,
											"end": 921,
											"name": "RETURNDATASIZE",
											"source": 4
										},
										{
											"begin": 806,
											"end": 921,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 806,
											"end": 921,
											"name": "REVERT",
											"source": 4
										},
										{
											"begin": 806,
											"end": 921,
											"name": "tag",
											"source": 4,
											"value": "70"
										},
										{
											"begin": 806,
											"end": 921,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 806,
											"end": 921,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 806,
											"end": 921,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 806,
											"end": 921,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 806,
											"end": 921,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 806,
											"end": 921,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 806,
											"end": 921,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 806,
											"end": 921,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 806,
											"end": 921,
											"name": "RETURNDATASIZE",
											"source": 4
										},
										{
											"begin": 806,
											"end": 921,
											"name": "PUSH",
											"source": 4,
											"value": "1F"
										},
										{
											"begin": 806,
											"end": 921,
											"name": "NOT",
											"source": 4
										},
										{
											"begin": 806,
											"end": 921,
											"name": "PUSH",
											"source": 4,
											"value": "1F"
										},
										{
											"begin": 806,
											"end": 921,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 806,
											"end": 921,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 806,
											"end": 921,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 806,
											"end": 921,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 806,
											"end": 921,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 806,
											"end": 921,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 806,
											"end": 921,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 806,
											"end": 921,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 806,
											"end": 921,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 806,
											"end": 921,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 806,
											"end": 921,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 806,
											"end": 921,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 806,
											"end": 921,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "71"
										},
										{
											"begin": 806,
											"end": 921,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 806,
											"end": 921,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 806,
											"end": 921,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "45"
										},
										{
											"begin": 806,
											"end": 921,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 806,
											"end": 921,
											"name": "tag",
											"source": 4,
											"value": "71"
										},
										{
											"begin": 806,
											"end": 921,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 806,
											"end": 921,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 806,
											"end": 921,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 806,
											"end": 921,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 494,
											"end": 957,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 494,
											"end": 957,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 494,
											"end": 957,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 1551,
											"end": 1861,
											"name": "tag",
											"source": 4,
											"value": "28"
										},
										{
											"begin": 1551,
											"end": 1861,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 1637,
											"end": 1658,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 1675,
											"end": 1676,
											"name": "PUSH",
											"source": 4,
											"value": "2"
										},
										{
											"begin": 1661,
											"end": 1677,
											"name": "PUSH",
											"source": 4,
											"value": "FFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1661,
											"end": 1677,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 1661,
											"end": 1677,
											"name": "GT",
											"source": 4
										},
										{
											"begin": 1661,
											"end": 1677,
											"name": "ISZERO",
											"source": 4
										},
										{
											"begin": 1661,
											"end": 1677,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "73"
										},
										{
											"begin": 1661,
											"end": 1677,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 1661,
											"end": 1677,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "74"
										},
										{
											"begin": 1661,
											"end": 1677,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "49"
										},
										{
											"begin": 1661,
											"end": 1677,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 1661,
											"end": 1677,
											"name": "tag",
											"source": 4,
											"value": "74"
										},
										{
											"begin": 1661,
											"end": 1677,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 1661,
											"end": 1677,
											"name": "tag",
											"source": 4,
											"value": "73"
										},
										{
											"begin": 1661,
											"end": 1677,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 1661,
											"end": 1677,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 1661,
											"end": 1677,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 1661,
											"end": 1677,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 1661,
											"end": 1677,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 1661,
											"end": 1677,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 1661,
											"end": 1677,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 1661,
											"end": 1677,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 1661,
											"end": 1677,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 1661,
											"end": 1677,
											"name": "MUL",
											"source": 4
										},
										{
											"begin": 1661,
											"end": 1677,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 1661,
											"end": 1677,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 1661,
											"end": 1677,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 1661,
											"end": 1677,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 1661,
											"end": 1677,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 1661,
											"end": 1677,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 1661,
											"end": 1677,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 1661,
											"end": 1677,
											"name": "ISZERO",
											"source": 4
										},
										{
											"begin": 1661,
											"end": 1677,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "75"
										},
										{
											"begin": 1661,
											"end": 1677,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 1661,
											"end": 1677,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 1661,
											"end": 1677,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 1661,
											"end": 1677,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 1661,
											"end": 1677,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 1661,
											"end": 1677,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 1661,
											"end": 1677,
											"name": "MUL",
											"source": 4
										},
										{
											"begin": 1661,
											"end": 1677,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 1661,
											"end": 1677,
											"name": "CALLDATASIZE",
											"source": 4
										},
										{
											"begin": 1661,
											"end": 1677,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 1661,
											"end": 1677,
											"name": "CALLDATACOPY",
											"source": 4
										},
										{
											"begin": 1661,
											"end": 1677,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 1661,
											"end": 1677,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 1661,
											"end": 1677,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 1661,
											"end": 1677,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 1661,
											"end": 1677,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 1661,
											"end": 1677,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 1661,
											"end": 1677,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 1661,
											"end": 1677,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 1661,
											"end": 1677,
											"name": "tag",
											"source": 4,
											"value": "75"
										},
										{
											"begin": 1661,
											"end": 1677,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 1661,
											"end": 1677,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 1637,
											"end": 1677,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 1637,
											"end": 1677,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 1697,
											"end": 1701,
											"name": "PUSH",
											"source": 4,
											"value": "1"
										},
										{
											"begin": 1697,
											"end": 1701,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 1697,
											"end": 1701,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 1697,
											"end": 1701,
											"name": "SLOAD",
											"source": 4
										},
										{
											"begin": 1697,
											"end": 1701,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 1697,
											"end": 1701,
											"name": "PUSH",
											"source": 4,
											"value": "100"
										},
										{
											"begin": 1697,
											"end": 1701,
											"name": "EXP",
											"source": 4
										},
										{
											"begin": 1697,
											"end": 1701,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 1697,
											"end": 1701,
											"name": "DIV",
											"source": 4
										},
										{
											"begin": 1697,
											"end": 1701,
											"name": "PUSH",
											"source": 4,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1697,
											"end": 1701,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 1687,
											"end": 1691,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 1692,
											"end": 1693,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 1687,
											"end": 1694,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 1687,
											"end": 1694,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 1687,
											"end": 1694,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 1687,
											"end": 1694,
											"name": "LT",
											"source": 4
										},
										{
											"begin": 1687,
											"end": 1694,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "76"
										},
										{
											"begin": 1687,
											"end": 1694,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 1687,
											"end": 1694,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "77"
										},
										{
											"begin": 1687,
											"end": 1694,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "53"
										},
										{
											"begin": 1687,
											"end": 1694,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 1687,
											"end": 1694,
											"name": "tag",
											"source": 4,
											"value": "77"
										},
										{
											"begin": 1687,
											"end": 1694,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 1687,
											"end": 1694,
											"name": "tag",
											"source": 4,
											"value": "76"
										},
										{
											"begin": 1687,
											"end": 1694,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 1687,
											"end": 1694,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 1687,
											"end": 1694,
											"name": "MUL",
											"source": 4
										},
										{
											"begin": 1687,
											"end": 1694,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 1687,
											"end": 1694,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 1687,
											"end": 1694,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 1687,
											"end": 1701,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 1687,
											"end": 1701,
											"name": "PUSH",
											"source": 4,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1687,
											"end": 1701,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 1687,
											"end": 1701,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 1687,
											"end": 1701,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 1687,
											"end": 1701,
											"name": "PUSH",
											"source": 4,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1687,
											"end": 1701,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 1687,
											"end": 1701,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 1687,
											"end": 1701,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 1687,
											"end": 1701,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 1687,
											"end": 1701,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 1721,
											"end": 1726,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 1711,
											"end": 1715,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 1716,
											"end": 1717,
											"name": "PUSH",
											"source": 4,
											"value": "1"
										},
										{
											"begin": 1711,
											"end": 1718,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 1711,
											"end": 1718,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 1711,
											"end": 1718,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 1711,
											"end": 1718,
											"name": "LT",
											"source": 4
										},
										{
											"begin": 1711,
											"end": 1718,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "78"
										},
										{
											"begin": 1711,
											"end": 1718,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 1711,
											"end": 1718,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "79"
										},
										{
											"begin": 1711,
											"end": 1718,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "53"
										},
										{
											"begin": 1711,
											"end": 1718,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 1711,
											"end": 1718,
											"name": "tag",
											"source": 4,
											"value": "79"
										},
										{
											"begin": 1711,
											"end": 1718,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 1711,
											"end": 1718,
											"name": "tag",
											"source": 4,
											"value": "78"
										},
										{
											"begin": 1711,
											"end": 1718,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 1711,
											"end": 1718,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 1711,
											"end": 1718,
											"name": "MUL",
											"source": 4
										},
										{
											"begin": 1711,
											"end": 1718,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 1711,
											"end": 1718,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 1711,
											"end": 1718,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 1711,
											"end": 1726,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 1711,
											"end": 1726,
											"name": "PUSH",
											"source": 4,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1711,
											"end": 1726,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 1711,
											"end": 1726,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 1711,
											"end": 1726,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 1711,
											"end": 1726,
											"name": "PUSH",
											"source": 4,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1711,
											"end": 1726,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 1711,
											"end": 1726,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 1711,
											"end": 1726,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 1711,
											"end": 1726,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 1711,
											"end": 1726,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 1755,
											"end": 1761,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 1755,
											"end": 1761,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 1755,
											"end": 1761,
											"name": "SLOAD",
											"source": 4
										},
										{
											"begin": 1755,
											"end": 1761,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 1755,
											"end": 1761,
											"name": "PUSH",
											"source": 4,
											"value": "100"
										},
										{
											"begin": 1755,
											"end": 1761,
											"name": "EXP",
											"source": 4
										},
										{
											"begin": 1755,
											"end": 1761,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 1755,
											"end": 1761,
											"name": "DIV",
											"source": 4
										},
										{
											"begin": 1755,
											"end": 1761,
											"name": "PUSH",
											"source": 4,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1755,
											"end": 1761,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 1736,
											"end": 1784,
											"name": "PUSH",
											"source": 4,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1736,
											"end": 1784,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 1736,
											"end": 1784,
											"name": "PUSH",
											"source": 4,
											"value": "7FF36AB5"
										},
										{
											"begin": 1793,
											"end": 1802,
											"name": "CALLVALUE",
											"source": 4
										},
										{
											"begin": 1804,
											"end": 1818,
											"name": "DUP5",
											"source": 4
										},
										{
											"begin": 1820,
											"end": 1824,
											"name": "DUP5",
											"source": 4
										},
										{
											"begin": 1826,
											"end": 1836,
											"name": "CALLER",
											"source": 4
										},
										{
											"begin": 1838,
											"end": 1853,
											"name": "TIMESTAMP",
											"source": 4
										},
										{
											"begin": 1736,
											"end": 1854,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 1736,
											"end": 1854,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 1736,
											"end": 1854,
											"name": "DUP7",
											"source": 4
										},
										{
											"begin": 1736,
											"end": 1854,
											"name": "PUSH",
											"source": 4,
											"value": "FFFFFFFF"
										},
										{
											"begin": 1736,
											"end": 1854,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 1736,
											"end": 1854,
											"name": "PUSH",
											"source": 4,
											"value": "E0"
										},
										{
											"begin": 1736,
											"end": 1854,
											"name": "SHL",
											"source": 4
										},
										{
											"begin": 1736,
											"end": 1854,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 1736,
											"end": 1854,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 1736,
											"end": 1854,
											"name": "PUSH",
											"source": 4,
											"value": "4"
										},
										{
											"begin": 1736,
											"end": 1854,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 1736,
											"end": 1854,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "80"
										},
										{
											"begin": 1736,
											"end": 1854,
											"name": "SWAP5",
											"source": 4
										},
										{
											"begin": 1736,
											"end": 1854,
											"name": "SWAP4",
											"source": 4
										},
										{
											"begin": 1736,
											"end": 1854,
											"name": "SWAP3",
											"source": 4
										},
										{
											"begin": 1736,
											"end": 1854,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 1736,
											"end": 1854,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 1736,
											"end": 1854,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "81"
										},
										{
											"begin": 1736,
											"end": 1854,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 1736,
											"end": 1854,
											"name": "tag",
											"source": 4,
											"value": "80"
										},
										{
											"begin": 1736,
											"end": 1854,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 1736,
											"end": 1854,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 1736,
											"end": 1854,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 1736,
											"end": 1854,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 1736,
											"end": 1854,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 1736,
											"end": 1854,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 1736,
											"end": 1854,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 1736,
											"end": 1854,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 1736,
											"end": 1854,
											"name": "DUP6",
											"source": 4
										},
										{
											"begin": 1736,
											"end": 1854,
											"name": "DUP9",
											"source": 4
										},
										{
											"begin": 1736,
											"end": 1854,
											"name": "GAS",
											"source": 4
										},
										{
											"begin": 1736,
											"end": 1854,
											"name": "CALL",
											"source": 4
										},
										{
											"begin": 1736,
											"end": 1854,
											"name": "ISZERO",
											"source": 4
										},
										{
											"begin": 1736,
											"end": 1854,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 1736,
											"end": 1854,
											"name": "ISZERO",
											"source": 4
										},
										{
											"begin": 1736,
											"end": 1854,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "83"
										},
										{
											"begin": 1736,
											"end": 1854,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 1736,
											"end": 1854,
											"name": "RETURNDATASIZE",
											"source": 4
										},
										{
											"begin": 1736,
											"end": 1854,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 1736,
											"end": 1854,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 1736,
											"end": 1854,
											"name": "RETURNDATACOPY",
											"source": 4
										},
										{
											"begin": 1736,
											"end": 1854,
											"name": "RETURNDATASIZE",
											"source": 4
										},
										{
											"begin": 1736,
											"end": 1854,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 1736,
											"end": 1854,
											"name": "REVERT",
											"source": 4
										},
										{
											"begin": 1736,
											"end": 1854,
											"name": "tag",
											"source": 4,
											"value": "83"
										},
										{
											"begin": 1736,
											"end": 1854,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 1736,
											"end": 1854,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 1736,
											"end": 1854,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 1736,
											"end": 1854,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 1736,
											"end": 1854,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 1736,
											"end": 1854,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 1736,
											"end": 1854,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 1736,
											"end": 1854,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 1736,
											"end": 1854,
											"name": "RETURNDATASIZE",
											"source": 4
										},
										{
											"begin": 1736,
											"end": 1854,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 1736,
											"end": 1854,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 1736,
											"end": 1854,
											"name": "RETURNDATACOPY",
											"source": 4
										},
										{
											"begin": 1736,
											"end": 1854,
											"name": "RETURNDATASIZE",
											"source": 4
										},
										{
											"begin": 1736,
											"end": 1854,
											"name": "PUSH",
											"source": 4,
											"value": "1F"
										},
										{
											"begin": 1736,
											"end": 1854,
											"name": "NOT",
											"source": 4
										},
										{
											"begin": 1736,
											"end": 1854,
											"name": "PUSH",
											"source": 4,
											"value": "1F"
										},
										{
											"begin": 1736,
											"end": 1854,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 1736,
											"end": 1854,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 1736,
											"end": 1854,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 1736,
											"end": 1854,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 1736,
											"end": 1854,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 1736,
											"end": 1854,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 1736,
											"end": 1854,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 1736,
											"end": 1854,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 1736,
											"end": 1854,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 1736,
											"end": 1854,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 1736,
											"end": 1854,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 1736,
											"end": 1854,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 1736,
											"end": 1854,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "84"
										},
										{
											"begin": 1736,
											"end": 1854,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 1736,
											"end": 1854,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 1736,
											"end": 1854,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "63"
										},
										{
											"begin": 1736,
											"end": 1854,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 1736,
											"end": 1854,
											"name": "tag",
											"source": 4,
											"value": "84"
										},
										{
											"begin": 1736,
											"end": 1854,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 1736,
											"end": 1854,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 1627,
											"end": 1861,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 1551,
											"end": 1861,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 1551,
											"end": 1861,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 1551,
											"end": 1861,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 297,
											"end": 318,
											"name": "tag",
											"source": 4,
											"value": "31"
										},
										{
											"begin": 297,
											"end": 318,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 297,
											"end": 318,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 297,
											"end": 318,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 297,
											"end": 318,
											"name": "SLOAD",
											"source": 4
										},
										{
											"begin": 297,
											"end": 318,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 297,
											"end": 318,
											"name": "PUSH",
											"source": 4,
											"value": "100"
										},
										{
											"begin": 297,
											"end": 318,
											"name": "EXP",
											"source": 4
										},
										{
											"begin": 297,
											"end": 318,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 297,
											"end": 318,
											"name": "DIV",
											"source": 4
										},
										{
											"begin": 297,
											"end": 318,
											"name": "PUSH",
											"source": 4,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 297,
											"end": 318,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 297,
											"end": 318,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 297,
											"end": 318,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 974,
											"end": 1215,
											"name": "tag",
											"source": 2,
											"value": "35"
										},
										{
											"begin": 974,
											"end": 1215,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1112,
											"end": 1208,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "86"
										},
										{
											"begin": 1132,
											"end": 1137,
											"name": "DUP5",
											"source": 2
										},
										{
											"begin": 1162,
											"end": 1189,
											"name": "PUSH",
											"source": 2,
											"value": "23B872DD"
										},
										{
											"begin": 1162,
											"end": 1189,
											"name": "PUSH",
											"source": 2,
											"value": "E0"
										},
										{
											"begin": 1162,
											"end": 1189,
											"name": "SHL",
											"source": 2
										},
										{
											"begin": 1191,
											"end": 1195,
											"name": "DUP6",
											"source": 2
										},
										{
											"begin": 1197,
											"end": 1199,
											"name": "DUP6",
											"source": 2
										},
										{
											"begin": 1201,
											"end": 1206,
											"name": "DUP6",
											"source": 2
										},
										{
											"begin": 1139,
											"end": 1207,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 1139,
											"end": 1207,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 1139,
											"end": 1207,
											"name": "PUSH",
											"source": 2,
											"value": "24"
										},
										{
											"begin": 1139,
											"end": 1207,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 1139,
											"end": 1207,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "87"
										},
										{
											"begin": 1139,
											"end": 1207,
											"name": "SWAP4",
											"source": 2
										},
										{
											"begin": 1139,
											"end": 1207,
											"name": "SWAP3",
											"source": 2
										},
										{
											"begin": 1139,
											"end": 1207,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 1139,
											"end": 1207,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1139,
											"end": 1207,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "88"
										},
										{
											"begin": 1139,
											"end": 1207,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 1139,
											"end": 1207,
											"name": "tag",
											"source": 2,
											"value": "87"
										},
										{
											"begin": 1139,
											"end": 1207,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1139,
											"end": 1207,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 1139,
											"end": 1207,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 1139,
											"end": 1207,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 1139,
											"end": 1207,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 1139,
											"end": 1207,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 1139,
											"end": 1207,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 1139,
											"end": 1207,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 1139,
											"end": 1207,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 1139,
											"end": 1207,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 1139,
											"end": 1207,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1139,
											"end": 1207,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 1139,
											"end": 1207,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 1139,
											"end": 1207,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1139,
											"end": 1207,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1139,
											"end": 1207,
											"name": "NOT",
											"source": 2
										},
										{
											"begin": 1139,
											"end": 1207,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 1139,
											"end": 1207,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 1139,
											"end": 1207,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 1139,
											"end": 1207,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 1139,
											"end": 1207,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 1139,
											"end": 1207,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 1139,
											"end": 1207,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1139,
											"end": 1207,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 1139,
											"end": 1207,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 1139,
											"end": 1207,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 1139,
											"end": 1207,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 1139,
											"end": 1207,
											"name": "OR",
											"source": 2
										},
										{
											"begin": 1139,
											"end": 1207,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 1139,
											"end": 1207,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 1139,
											"end": 1207,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 1139,
											"end": 1207,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 1139,
											"end": 1207,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 1139,
											"end": 1207,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 1112,
											"end": 1131,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "89"
										},
										{
											"begin": 1112,
											"end": 1208,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 1112,
											"end": 1208,
											"name": "tag",
											"source": 2,
											"value": "86"
										},
										{
											"begin": 1112,
											"end": 1208,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 974,
											"end": 1215,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 974,
											"end": 1215,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 974,
											"end": 1215,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 974,
											"end": 1215,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 974,
											"end": 1215,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 1475,
											"end": 2078,
											"name": "tag",
											"source": 2,
											"value": "37"
										},
										{
											"begin": 1475,
											"end": 2078,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1839,
											"end": 1840,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 1830,
											"end": 1835,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 1830,
											"end": 1840,
											"name": "EQ",
											"source": 2
										},
										{
											"begin": 1829,
											"end": 1891,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 1829,
											"end": 1891,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "91"
										},
										{
											"begin": 1829,
											"end": 1891,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 1829,
											"end": 1891,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 1889,
											"end": 1890,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 1846,
											"end": 1851,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 1846,
											"end": 1861,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1846,
											"end": 1861,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 1846,
											"end": 1861,
											"name": "PUSH",
											"source": 2,
											"value": "DD62ED3E"
										},
										{
											"begin": 1870,
											"end": 1874,
											"name": "ADDRESS",
											"source": 2
										},
										{
											"begin": 1877,
											"end": 1884,
											"name": "DUP6",
											"source": 2
										},
										{
											"begin": 1846,
											"end": 1885,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 1846,
											"end": 1885,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 1846,
											"end": 1885,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 1846,
											"end": 1885,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFF"
										},
										{
											"begin": 1846,
											"end": 1885,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 1846,
											"end": 1885,
											"name": "PUSH",
											"source": 2,
											"value": "E0"
										},
										{
											"begin": 1846,
											"end": 1885,
											"name": "SHL",
											"source": 2
										},
										{
											"begin": 1846,
											"end": 1885,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 1846,
											"end": 1885,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 1846,
											"end": 1885,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 1846,
											"end": 1885,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 1846,
											"end": 1885,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "92"
										},
										{
											"begin": 1846,
											"end": 1885,
											"name": "SWAP3",
											"source": 2
										},
										{
											"begin": 1846,
											"end": 1885,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 1846,
											"end": 1885,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1846,
											"end": 1885,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "93"
										},
										{
											"begin": 1846,
											"end": 1885,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 1846,
											"end": 1885,
											"name": "tag",
											"source": 2,
											"value": "92"
										},
										{
											"begin": 1846,
											"end": 1885,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1846,
											"end": 1885,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 1846,
											"end": 1885,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 1846,
											"end": 1885,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 1846,
											"end": 1885,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 1846,
											"end": 1885,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 1846,
											"end": 1885,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 1846,
											"end": 1885,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 1846,
											"end": 1885,
											"name": "DUP7",
											"source": 2
										},
										{
											"begin": 1846,
											"end": 1885,
											"name": "GAS",
											"source": 2
										},
										{
											"begin": 1846,
											"end": 1885,
											"name": "STATICCALL",
											"source": 2
										},
										{
											"begin": 1846,
											"end": 1885,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 1846,
											"end": 1885,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 1846,
											"end": 1885,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 1846,
											"end": 1885,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "95"
										},
										{
											"begin": 1846,
											"end": 1885,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 1846,
											"end": 1885,
											"name": "RETURNDATASIZE",
											"source": 2
										},
										{
											"begin": 1846,
											"end": 1885,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 1846,
											"end": 1885,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 1846,
											"end": 1885,
											"name": "RETURNDATACOPY",
											"source": 2
										},
										{
											"begin": 1846,
											"end": 1885,
											"name": "RETURNDATASIZE",
											"source": 2
										},
										{
											"begin": 1846,
											"end": 1885,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 1846,
											"end": 1885,
											"name": "REVERT",
											"source": 2
										},
										{
											"begin": 1846,
											"end": 1885,
											"name": "tag",
											"source": 2,
											"value": "95"
										},
										{
											"begin": 1846,
											"end": 1885,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1846,
											"end": 1885,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 1846,
											"end": 1885,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 1846,
											"end": 1885,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 1846,
											"end": 1885,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 1846,
											"end": 1885,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 1846,
											"end": 1885,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 1846,
											"end": 1885,
											"name": "RETURNDATASIZE",
											"source": 2
										},
										{
											"begin": 1846,
											"end": 1885,
											"name": "PUSH",
											"source": 2,
											"value": "1F"
										},
										{
											"begin": 1846,
											"end": 1885,
											"name": "NOT",
											"source": 2
										},
										{
											"begin": 1846,
											"end": 1885,
											"name": "PUSH",
											"source": 2,
											"value": "1F"
										},
										{
											"begin": 1846,
											"end": 1885,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 1846,
											"end": 1885,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 1846,
											"end": 1885,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 1846,
											"end": 1885,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 1846,
											"end": 1885,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 1846,
											"end": 1885,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 1846,
											"end": 1885,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 1846,
											"end": 1885,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 1846,
											"end": 1885,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 1846,
											"end": 1885,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 1846,
											"end": 1885,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 1846,
											"end": 1885,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1846,
											"end": 1885,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "96"
										},
										{
											"begin": 1846,
											"end": 1885,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 1846,
											"end": 1885,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1846,
											"end": 1885,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "97"
										},
										{
											"begin": 1846,
											"end": 1885,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 1846,
											"end": 1885,
											"name": "tag",
											"source": 2,
											"value": "96"
										},
										{
											"begin": 1846,
											"end": 1885,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1846,
											"end": 1890,
											"name": "EQ",
											"source": 2
										},
										{
											"begin": 1829,
											"end": 1891,
											"name": "tag",
											"source": 2,
											"value": "91"
										},
										{
											"begin": 1829,
											"end": 1891,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1808,
											"end": 1971,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "98"
										},
										{
											"begin": 1808,
											"end": 1971,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 1808,
											"end": 1971,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 1808,
											"end": 1971,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 1808,
											"end": 1971,
											"name": "PUSH",
											"source": 2,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 1808,
											"end": 1971,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 1808,
											"end": 1971,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 1808,
											"end": 1971,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 1808,
											"end": 1971,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 1808,
											"end": 1971,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "99"
										},
										{
											"begin": 1808,
											"end": 1971,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1808,
											"end": 1971,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "100"
										},
										{
											"begin": 1808,
											"end": 1971,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 1808,
											"end": 1971,
											"name": "tag",
											"source": 2,
											"value": "99"
										},
										{
											"begin": 1808,
											"end": 1971,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1808,
											"end": 1971,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 1808,
											"end": 1971,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 1808,
											"end": 1971,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 1808,
											"end": 1971,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 1808,
											"end": 1971,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 1808,
											"end": 1971,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1808,
											"end": 1971,
											"name": "REVERT",
											"source": 2
										},
										{
											"begin": 1808,
											"end": 1971,
											"name": "tag",
											"source": 2,
											"value": "98"
										},
										{
											"begin": 1808,
											"end": 1971,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1981,
											"end": 2071,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "101"
										},
										{
											"begin": 2001,
											"end": 2006,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 2031,
											"end": 2053,
											"name": "PUSH",
											"source": 2,
											"value": "95EA7B3"
										},
										{
											"begin": 2031,
											"end": 2053,
											"name": "PUSH",
											"source": 2,
											"value": "E0"
										},
										{
											"begin": 2031,
											"end": 2053,
											"name": "SHL",
											"source": 2
										},
										{
											"begin": 2055,
											"end": 2062,
											"name": "DUP5",
											"source": 2
										},
										{
											"begin": 2064,
											"end": 2069,
											"name": "DUP5",
											"source": 2
										},
										{
											"begin": 2008,
											"end": 2070,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 2008,
											"end": 2070,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 2008,
											"end": 2070,
											"name": "PUSH",
											"source": 2,
											"value": "24"
										},
										{
											"begin": 2008,
											"end": 2070,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 2008,
											"end": 2070,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "102"
										},
										{
											"begin": 2008,
											"end": 2070,
											"name": "SWAP3",
											"source": 2
										},
										{
											"begin": 2008,
											"end": 2070,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 2008,
											"end": 2070,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2008,
											"end": 2070,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "103"
										},
										{
											"begin": 2008,
											"end": 2070,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 2008,
											"end": 2070,
											"name": "tag",
											"source": 2,
											"value": "102"
										},
										{
											"begin": 2008,
											"end": 2070,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2008,
											"end": 2070,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 2008,
											"end": 2070,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 2008,
											"end": 2070,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 2008,
											"end": 2070,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 2008,
											"end": 2070,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 2008,
											"end": 2070,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 2008,
											"end": 2070,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 2008,
											"end": 2070,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 2008,
											"end": 2070,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 2008,
											"end": 2070,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2008,
											"end": 2070,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 2008,
											"end": 2070,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 2008,
											"end": 2070,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2008,
											"end": 2070,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2008,
											"end": 2070,
											"name": "NOT",
											"source": 2
										},
										{
											"begin": 2008,
											"end": 2070,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 2008,
											"end": 2070,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 2008,
											"end": 2070,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 2008,
											"end": 2070,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 2008,
											"end": 2070,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 2008,
											"end": 2070,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 2008,
											"end": 2070,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2008,
											"end": 2070,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 2008,
											"end": 2070,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 2008,
											"end": 2070,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 2008,
											"end": 2070,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 2008,
											"end": 2070,
											"name": "OR",
											"source": 2
										},
										{
											"begin": 2008,
											"end": 2070,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 2008,
											"end": 2070,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 2008,
											"end": 2070,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 2008,
											"end": 2070,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 2008,
											"end": 2070,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 2008,
											"end": 2070,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 1981,
											"end": 2000,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "89"
										},
										{
											"begin": 1981,
											"end": 2071,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 1981,
											"end": 2071,
											"name": "tag",
											"source": 2,
											"value": "101"
										},
										{
											"begin": 1981,
											"end": 2071,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1475,
											"end": 2078,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 1475,
											"end": 2078,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 1475,
											"end": 2078,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 1475,
											"end": 2078,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 3747,
											"end": 4453,
											"name": "tag",
											"source": 2,
											"value": "89"
										},
										{
											"begin": 3747,
											"end": 4453,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 4166,
											"end": 4189,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 4192,
											"end": 4261,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "105"
										},
										{
											"begin": 4220,
											"end": 4224,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 4192,
											"end": 4261,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 4192,
											"end": 4261,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 4192,
											"end": 4261,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 4192,
											"end": 4261,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 4192,
											"end": 4261,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 4192,
											"end": 4261,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 4192,
											"end": 4261,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 4192,
											"end": 4261,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 4192,
											"end": 4261,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 4192,
											"end": 4261,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 4192,
											"end": 4261,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 4192,
											"end": 4261,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 4192,
											"end": 4261,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 4192,
											"end": 4261,
											"name": "PUSH",
											"source": 2,
											"value": "5361666545524332303A206C6F772D6C6576656C2063616C6C206661696C6564"
										},
										{
											"begin": 4192,
											"end": 4261,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 4192,
											"end": 4261,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 4192,
											"end": 4261,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 4200,
											"end": 4205,
											"name": "DUP6",
											"source": 2
										},
										{
											"begin": 4192,
											"end": 4219,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 4192,
											"end": 4219,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 4192,
											"end": 4219,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "106"
										},
										{
											"begin": 4192,
											"end": 4219,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 4192,
											"end": 4261,
											"name": "SWAP3",
											"source": 2
										},
										{
											"begin": 4192,
											"end": 4261,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 4192,
											"end": 4261,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 4192,
											"end": 4261,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFF"
										},
										{
											"begin": 4192,
											"end": 4261,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 4192,
											"end": 4261,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 4192,
											"end": 4261,
											"name": "tag",
											"source": 2,
											"value": "105"
										},
										{
											"begin": 4192,
											"end": 4261,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 4166,
											"end": 4261,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 4166,
											"end": 4261,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 4295,
											"end": 4296,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 4275,
											"end": 4285,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 4275,
											"end": 4292,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 4275,
											"end": 4296,
											"name": "GT",
											"source": 2
										},
										{
											"begin": 4271,
											"end": 4447,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 4271,
											"end": 4447,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "107"
										},
										{
											"begin": 4271,
											"end": 4447,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 4370,
											"end": 4380,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 4359,
											"end": 4389,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 4359,
											"end": 4389,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 4359,
											"end": 4389,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 4359,
											"end": 4389,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 4359,
											"end": 4389,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 4359,
											"end": 4389,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 4359,
											"end": 4389,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 4359,
											"end": 4389,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 4359,
											"end": 4389,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "108"
										},
										{
											"begin": 4359,
											"end": 4389,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 4359,
											"end": 4389,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 4359,
											"end": 4389,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "109"
										},
										{
											"begin": 4359,
											"end": 4389,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 4359,
											"end": 4389,
											"name": "tag",
											"source": 2,
											"value": "108"
										},
										{
											"begin": 4359,
											"end": 4389,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 4351,
											"end": 4436,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "110"
										},
										{
											"begin": 4351,
											"end": 4436,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 4351,
											"end": 4436,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 4351,
											"end": 4436,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 4351,
											"end": 4436,
											"name": "PUSH",
											"source": 2,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 4351,
											"end": 4436,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 4351,
											"end": 4436,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 4351,
											"end": 4436,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 4351,
											"end": 4436,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 4351,
											"end": 4436,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "111"
										},
										{
											"begin": 4351,
											"end": 4436,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 4351,
											"end": 4436,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "112"
										},
										{
											"begin": 4351,
											"end": 4436,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 4351,
											"end": 4436,
											"name": "tag",
											"source": 2,
											"value": "111"
										},
										{
											"begin": 4351,
											"end": 4436,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 4351,
											"end": 4436,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 4351,
											"end": 4436,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 4351,
											"end": 4436,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 4351,
											"end": 4436,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 4351,
											"end": 4436,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 4351,
											"end": 4436,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 4351,
											"end": 4436,
											"name": "REVERT",
											"source": 2
										},
										{
											"begin": 4351,
											"end": 4436,
											"name": "tag",
											"source": 2,
											"value": "110"
										},
										{
											"begin": 4351,
											"end": 4436,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 4271,
											"end": 4447,
											"name": "tag",
											"source": 2,
											"value": "107"
										},
										{
											"begin": 4271,
											"end": 4447,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 3817,
											"end": 4453,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 3747,
											"end": 4453,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 3747,
											"end": 4453,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 3747,
											"end": 4453,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 3873,
											"end": 4096,
											"name": "tag",
											"source": 3,
											"value": "106"
										},
										{
											"begin": 3873,
											"end": 4096,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 4006,
											"end": 4018,
											"name": "PUSH",
											"source": 3,
											"value": "60"
										},
										{
											"begin": 4037,
											"end": 4089,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "114"
										},
										{
											"begin": 4059,
											"end": 4065,
											"name": "DUP5",
											"source": 3
										},
										{
											"begin": 4067,
											"end": 4071,
											"name": "DUP5",
											"source": 3
										},
										{
											"begin": 4073,
											"end": 4074,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 4076,
											"end": 4088,
											"name": "DUP6",
											"source": 3
										},
										{
											"begin": 4037,
											"end": 4058,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "115"
										},
										{
											"begin": 4037,
											"end": 4089,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 4037,
											"end": 4089,
											"name": "tag",
											"source": 3,
											"value": "114"
										},
										{
											"begin": 4037,
											"end": 4089,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 4030,
											"end": 4089,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 4030,
											"end": 4089,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 3873,
											"end": 4096,
											"name": "SWAP4",
											"source": 3
										},
										{
											"begin": 3873,
											"end": 4096,
											"name": "SWAP3",
											"source": 3
										},
										{
											"begin": 3873,
											"end": 4096,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 3873,
											"end": 4096,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 3873,
											"end": 4096,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 3873,
											"end": 4096,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 4960,
											"end": 5406,
											"name": "tag",
											"source": 3,
											"value": "115"
										},
										{
											"begin": 4960,
											"end": 5406,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 5125,
											"end": 5137,
											"name": "PUSH",
											"source": 3,
											"value": "60"
										},
										{
											"begin": 5182,
											"end": 5187,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 5157,
											"end": 5178,
											"name": "SELFBALANCE",
											"source": 3
										},
										{
											"begin": 5157,
											"end": 5187,
											"name": "LT",
											"source": 3
										},
										{
											"begin": 5157,
											"end": 5187,
											"name": "ISZERO",
											"source": 3
										},
										{
											"begin": 5149,
											"end": 5230,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "117"
										},
										{
											"begin": 5149,
											"end": 5230,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 5149,
											"end": 5230,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 5149,
											"end": 5230,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 5149,
											"end": 5230,
											"name": "PUSH",
											"source": 3,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 5149,
											"end": 5230,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 5149,
											"end": 5230,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 5149,
											"end": 5230,
											"name": "PUSH",
											"source": 3,
											"value": "4"
										},
										{
											"begin": 5149,
											"end": 5230,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 5149,
											"end": 5230,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "118"
										},
										{
											"begin": 5149,
											"end": 5230,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 5149,
											"end": 5230,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "119"
										},
										{
											"begin": 5149,
											"end": 5230,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 5149,
											"end": 5230,
											"name": "tag",
											"source": 3,
											"value": "118"
										},
										{
											"begin": 5149,
											"end": 5230,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 5149,
											"end": 5230,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 5149,
											"end": 5230,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 5149,
											"end": 5230,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 5149,
											"end": 5230,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 5149,
											"end": 5230,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 5149,
											"end": 5230,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 5149,
											"end": 5230,
											"name": "REVERT",
											"source": 3
										},
										{
											"begin": 5149,
											"end": 5230,
											"name": "tag",
											"source": 3,
											"value": "117"
										},
										{
											"begin": 5149,
											"end": 5230,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 5241,
											"end": 5253,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 5255,
											"end": 5278,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 5282,
											"end": 5288,
											"name": "DUP7",
											"source": 3
										},
										{
											"begin": 5282,
											"end": 5293,
											"name": "PUSH",
											"source": 3,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 5282,
											"end": 5293,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 5301,
											"end": 5306,
											"name": "DUP6",
											"source": 3
										},
										{
											"begin": 5308,
											"end": 5312,
											"name": "DUP8",
											"source": 3
										},
										{
											"begin": 5282,
											"end": 5313,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 5282,
											"end": 5313,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 5282,
											"end": 5313,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "120"
										},
										{
											"begin": 5282,
											"end": 5313,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 5282,
											"end": 5313,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 5282,
											"end": 5313,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "121"
										},
										{
											"begin": 5282,
											"end": 5313,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 5282,
											"end": 5313,
											"name": "tag",
											"source": 3,
											"value": "120"
										},
										{
											"begin": 5282,
											"end": 5313,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 5282,
											"end": 5313,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 5282,
											"end": 5313,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 5282,
											"end": 5313,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 5282,
											"end": 5313,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 5282,
											"end": 5313,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 5282,
											"end": 5313,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 5282,
											"end": 5313,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 5282,
											"end": 5313,
											"name": "DUP6",
											"source": 3
										},
										{
											"begin": 5282,
											"end": 5313,
											"name": "DUP8",
											"source": 3
										},
										{
											"begin": 5282,
											"end": 5313,
											"name": "GAS",
											"source": 3
										},
										{
											"begin": 5282,
											"end": 5313,
											"name": "CALL",
											"source": 3
										},
										{
											"begin": 5282,
											"end": 5313,
											"name": "SWAP3",
											"source": 3
										},
										{
											"begin": 5282,
											"end": 5313,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 5282,
											"end": 5313,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 5282,
											"end": 5313,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 5282,
											"end": 5313,
											"name": "RETURNDATASIZE",
											"source": 3
										},
										{
											"begin": 5282,
											"end": 5313,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 5282,
											"end": 5313,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 5282,
											"end": 5313,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 5282,
											"end": 5313,
											"name": "EQ",
											"source": 3
										},
										{
											"begin": 5282,
											"end": 5313,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "124"
										},
										{
											"begin": 5282,
											"end": 5313,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 5282,
											"end": 5313,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 5282,
											"end": 5313,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 5282,
											"end": 5313,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 5282,
											"end": 5313,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 5282,
											"end": 5313,
											"name": "PUSH",
											"source": 3,
											"value": "1F"
										},
										{
											"begin": 5282,
											"end": 5313,
											"name": "NOT",
											"source": 3
										},
										{
											"begin": 5282,
											"end": 5313,
											"name": "PUSH",
											"source": 3,
											"value": "3F"
										},
										{
											"begin": 5282,
											"end": 5313,
											"name": "RETURNDATASIZE",
											"source": 3
										},
										{
											"begin": 5282,
											"end": 5313,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 5282,
											"end": 5313,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 5282,
											"end": 5313,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 5282,
											"end": 5313,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 5282,
											"end": 5313,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 5282,
											"end": 5313,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 5282,
											"end": 5313,
											"name": "RETURNDATASIZE",
											"source": 3
										},
										{
											"begin": 5282,
											"end": 5313,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 5282,
											"end": 5313,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 5282,
											"end": 5313,
											"name": "RETURNDATASIZE",
											"source": 3
										},
										{
											"begin": 5282,
											"end": 5313,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 5282,
											"end": 5313,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 5282,
											"end": 5313,
											"name": "DUP5",
											"source": 3
										},
										{
											"begin": 5282,
											"end": 5313,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 5282,
											"end": 5313,
											"name": "RETURNDATACOPY",
											"source": 3
										},
										{
											"begin": 5282,
											"end": 5313,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "123"
										},
										{
											"begin": 5282,
											"end": 5313,
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 5282,
											"end": 5313,
											"name": "tag",
											"source": 3,
											"value": "124"
										},
										{
											"begin": 5282,
											"end": 5313,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 5282,
											"end": 5313,
											"name": "PUSH",
											"source": 3,
											"value": "60"
										},
										{
											"begin": 5282,
											"end": 5313,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 5282,
											"end": 5313,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 5282,
											"end": 5313,
											"name": "tag",
											"source": 3,
											"value": "123"
										},
										{
											"begin": 5282,
											"end": 5313,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 5282,
											"end": 5313,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 5240,
											"end": 5313,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 5240,
											"end": 5313,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 5240,
											"end": 5313,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 5240,
											"end": 5313,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 5330,
											"end": 5399,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "125"
										},
										{
											"begin": 5357,
											"end": 5363,
											"name": "DUP8",
											"source": 3
										},
										{
											"begin": 5365,
											"end": 5372,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 5374,
											"end": 5384,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 5386,
											"end": 5398,
											"name": "DUP8",
											"source": 3
										},
										{
											"begin": 5330,
											"end": 5356,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "126"
										},
										{
											"begin": 5330,
											"end": 5399,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 5330,
											"end": 5399,
											"name": "tag",
											"source": 3,
											"value": "125"
										},
										{
											"begin": 5330,
											"end": 5399,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 5323,
											"end": 5399,
											"name": "SWAP3",
											"source": 3
										},
										{
											"begin": 5323,
											"end": 5399,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 5323,
											"end": 5399,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 5323,
											"end": 5399,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 4960,
											"end": 5406,
											"name": "SWAP5",
											"source": 3
										},
										{
											"begin": 4960,
											"end": 5406,
											"name": "SWAP4",
											"source": 3
										},
										{
											"begin": 4960,
											"end": 5406,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 4960,
											"end": 5406,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 4960,
											"end": 5406,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 4960,
											"end": 5406,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 4960,
											"end": 5406,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 7466,
											"end": 8094,
											"name": "tag",
											"source": 3,
											"value": "126"
										},
										{
											"begin": 7466,
											"end": 8094,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 7646,
											"end": 7658,
											"name": "PUSH",
											"source": 3,
											"value": "60"
										},
										{
											"begin": 7674,
											"end": 7681,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 7670,
											"end": 8088,
											"name": "ISZERO",
											"source": 3
										},
										{
											"begin": 7670,
											"end": 8088,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "128"
										},
										{
											"begin": 7670,
											"end": 8088,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 7722,
											"end": 7723,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 7701,
											"end": 7711,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 7701,
											"end": 7718,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 7701,
											"end": 7723,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 7697,
											"end": 7983,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "129"
										},
										{
											"begin": 7697,
											"end": 7983,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 7916,
											"end": 7934,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "130"
										},
										{
											"begin": 7927,
											"end": 7933,
											"name": "DUP6",
											"source": 3
										},
										{
											"begin": 7916,
											"end": 7926,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "131"
										},
										{
											"begin": 7916,
											"end": 7934,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 7916,
											"end": 7934,
											"name": "tag",
											"source": 3,
											"value": "130"
										},
										{
											"begin": 7916,
											"end": 7934,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 7908,
											"end": 7968,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "132"
										},
										{
											"begin": 7908,
											"end": 7968,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 7908,
											"end": 7968,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 7908,
											"end": 7968,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 7908,
											"end": 7968,
											"name": "PUSH",
											"source": 3,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 7908,
											"end": 7968,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 7908,
											"end": 7968,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 7908,
											"end": 7968,
											"name": "PUSH",
											"source": 3,
											"value": "4"
										},
										{
											"begin": 7908,
											"end": 7968,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 7908,
											"end": 7968,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "133"
										},
										{
											"begin": 7908,
											"end": 7968,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 7908,
											"end": 7968,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "134"
										},
										{
											"begin": 7908,
											"end": 7968,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 7908,
											"end": 7968,
											"name": "tag",
											"source": 3,
											"value": "133"
										},
										{
											"begin": 7908,
											"end": 7968,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 7908,
											"end": 7968,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 7908,
											"end": 7968,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 7908,
											"end": 7968,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 7908,
											"end": 7968,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 7908,
											"end": 7968,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 7908,
											"end": 7968,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 7908,
											"end": 7968,
											"name": "REVERT",
											"source": 3
										},
										{
											"begin": 7908,
											"end": 7968,
											"name": "tag",
											"source": 3,
											"value": "132"
										},
										{
											"begin": 7908,
											"end": 7968,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 7697,
											"end": 7983,
											"name": "tag",
											"source": 3,
											"value": "129"
										},
										{
											"begin": 7697,
											"end": 7983,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 8003,
											"end": 8013,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 7996,
											"end": 8013,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 7996,
											"end": 8013,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 7996,
											"end": 8013,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "127"
										},
										{
											"begin": 7996,
											"end": 8013,
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 7670,
											"end": 8088,
											"name": "tag",
											"source": 3,
											"value": "128"
										},
										{
											"begin": 7670,
											"end": 8088,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 8044,
											"end": 8077,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "136"
										},
										{
											"begin": 8052,
											"end": 8062,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 8064,
											"end": 8076,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 8044,
											"end": 8051,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "137"
										},
										{
											"begin": 8044,
											"end": 8077,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 8044,
											"end": 8077,
											"name": "tag",
											"source": 3,
											"value": "136"
										},
										{
											"begin": 8044,
											"end": 8077,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 7466,
											"end": 8094,
											"name": "tag",
											"source": 3,
											"value": "127"
										},
										{
											"begin": 7466,
											"end": 8094,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 7466,
											"end": 8094,
											"name": "SWAP5",
											"source": 3
										},
										{
											"begin": 7466,
											"end": 8094,
											"name": "SWAP4",
											"source": 3
										},
										{
											"begin": 7466,
											"end": 8094,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 7466,
											"end": 8094,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 7466,
											"end": 8094,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 7466,
											"end": 8094,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 7466,
											"end": 8094,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 1175,
											"end": 1495,
											"name": "tag",
											"source": 3,
											"value": "131"
										},
										{
											"begin": 1175,
											"end": 1495,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 1235,
											"end": 1239,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 1487,
											"end": 1488,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 1465,
											"end": 1472,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 1465,
											"end": 1484,
											"name": "PUSH",
											"source": 3,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1465,
											"end": 1484,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 1465,
											"end": 1484,
											"name": "EXTCODESIZE",
											"source": 3
										},
										{
											"begin": 1465,
											"end": 1488,
											"name": "GT",
											"source": 3
										},
										{
											"begin": 1458,
											"end": 1488,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 1458,
											"end": 1488,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 1175,
											"end": 1495,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 1175,
											"end": 1495,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 1175,
											"end": 1495,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 1175,
											"end": 1495,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 8616,
											"end": 9156,
											"name": "tag",
											"source": 3,
											"value": "137"
										},
										{
											"begin": 8616,
											"end": 9156,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 8795,
											"end": 8796,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 8775,
											"end": 8785,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 8775,
											"end": 8792,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 8775,
											"end": 8796,
											"name": "GT",
											"source": 3
										},
										{
											"begin": 8771,
											"end": 9150,
											"name": "ISZERO",
											"source": 3
										},
										{
											"begin": 8771,
											"end": 9150,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "140"
										},
										{
											"begin": 8771,
											"end": 9150,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 9003,
											"end": 9013,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 8997,
											"end": 9014,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 9059,
											"end": 9074,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 9046,
											"end": 9056,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 9042,
											"end": 9044,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 9038,
											"end": 9057,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 9031,
											"end": 9075,
											"name": "REVERT",
											"source": 3
										},
										{
											"begin": 8771,
											"end": 9150,
											"name": "tag",
											"source": 3,
											"value": "140"
										},
										{
											"begin": 8771,
											"end": 9150,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 9126,
											"end": 9138,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 9119,
											"end": 9139,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 9119,
											"end": 9139,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 9119,
											"end": 9139,
											"name": "PUSH",
											"source": 3,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 9119,
											"end": 9139,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 9119,
											"end": 9139,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 9119,
											"end": 9139,
											"name": "PUSH",
											"source": 3,
											"value": "4"
										},
										{
											"begin": 9119,
											"end": 9139,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 9119,
											"end": 9139,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "142"
										},
										{
											"begin": 9119,
											"end": 9139,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 9119,
											"end": 9139,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 9119,
											"end": 9139,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "143"
										},
										{
											"begin": 9119,
											"end": 9139,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 9119,
											"end": 9139,
											"name": "tag",
											"source": 3,
											"value": "142"
										},
										{
											"begin": 9119,
											"end": 9139,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 9119,
											"end": 9139,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 9119,
											"end": 9139,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 9119,
											"end": 9139,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 9119,
											"end": 9139,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 9119,
											"end": 9139,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 9119,
											"end": 9139,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 9119,
											"end": 9139,
											"name": "REVERT",
											"source": 3
										},
										{
											"begin": 7,
											"end": 82,
											"name": "tag",
											"source": 6,
											"value": "144"
										},
										{
											"begin": 7,
											"end": 82,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 40,
											"end": 46,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 73,
											"end": 75,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 67,
											"end": 76,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 57,
											"end": 76,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 57,
											"end": 76,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 7,
											"end": 82,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 7,
											"end": 82,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 88,
											"end": 205,
											"name": "tag",
											"source": 6,
											"value": "145"
										},
										{
											"begin": 88,
											"end": 205,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 197,
											"end": 198,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 194,
											"end": 195,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 187,
											"end": 199,
											"name": "REVERT",
											"source": 6
										},
										{
											"begin": 211,
											"end": 328,
											"name": "tag",
											"source": 6,
											"value": "146"
										},
										{
											"begin": 211,
											"end": 328,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 320,
											"end": 321,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 317,
											"end": 318,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 310,
											"end": 322,
											"name": "REVERT",
											"source": 6
										},
										{
											"begin": 334,
											"end": 460,
											"name": "tag",
											"source": 6,
											"value": "147"
										},
										{
											"begin": 334,
											"end": 460,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 371,
											"end": 378,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 411,
											"end": 453,
											"name": "PUSH",
											"source": 6,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 404,
											"end": 409,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 400,
											"end": 454,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 389,
											"end": 454,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 389,
											"end": 454,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 334,
											"end": 460,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 334,
											"end": 460,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 334,
											"end": 460,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 334,
											"end": 460,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 466,
											"end": 562,
											"name": "tag",
											"source": 6,
											"value": "148"
										},
										{
											"begin": 466,
											"end": 562,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 503,
											"end": 510,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 532,
											"end": 556,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "200"
										},
										{
											"begin": 550,
											"end": 555,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 532,
											"end": 556,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "147"
										},
										{
											"begin": 532,
											"end": 556,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 532,
											"end": 556,
											"name": "tag",
											"source": 6,
											"value": "200"
										},
										{
											"begin": 532,
											"end": 556,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 521,
											"end": 556,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 521,
											"end": 556,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 466,
											"end": 562,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 466,
											"end": 562,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 466,
											"end": 562,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 466,
											"end": 562,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 568,
											"end": 690,
											"name": "tag",
											"source": 6,
											"value": "149"
										},
										{
											"begin": 568,
											"end": 690,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 641,
											"end": 665,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "202"
										},
										{
											"begin": 659,
											"end": 664,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 641,
											"end": 665,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "148"
										},
										{
											"begin": 641,
											"end": 665,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 641,
											"end": 665,
											"name": "tag",
											"source": 6,
											"value": "202"
										},
										{
											"begin": 641,
											"end": 665,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 634,
											"end": 639,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 631,
											"end": 666,
											"name": "EQ",
											"source": 6
										},
										{
											"begin": 621,
											"end": 684,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "203"
										},
										{
											"begin": 621,
											"end": 684,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 680,
											"end": 681,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 677,
											"end": 678,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 670,
											"end": 682,
											"name": "REVERT",
											"source": 6
										},
										{
											"begin": 621,
											"end": 684,
											"name": "tag",
											"source": 6,
											"value": "203"
										},
										{
											"begin": 621,
											"end": 684,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 568,
											"end": 690,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 568,
											"end": 690,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 696,
											"end": 835,
											"name": "tag",
											"source": 6,
											"value": "150"
										},
										{
											"begin": 696,
											"end": 835,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 742,
											"end": 747,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 780,
											"end": 786,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 767,
											"end": 787,
											"name": "CALLDATALOAD",
											"source": 6
										},
										{
											"begin": 758,
											"end": 787,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 758,
											"end": 787,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 796,
											"end": 829,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "205"
										},
										{
											"begin": 823,
											"end": 828,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 796,
											"end": 829,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "149"
										},
										{
											"begin": 796,
											"end": 829,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 796,
											"end": 829,
											"name": "tag",
											"source": 6,
											"value": "205"
										},
										{
											"begin": 796,
											"end": 829,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 696,
											"end": 835,
											"name": "SWAP3",
											"source": 6
										},
										{
											"begin": 696,
											"end": 835,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 696,
											"end": 835,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 696,
											"end": 835,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 696,
											"end": 835,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 841,
											"end": 918,
											"name": "tag",
											"source": 6,
											"value": "151"
										},
										{
											"begin": 841,
											"end": 918,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 878,
											"end": 885,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 907,
											"end": 912,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 896,
											"end": 912,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 896,
											"end": 912,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 841,
											"end": 918,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 841,
											"end": 918,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 841,
											"end": 918,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 841,
											"end": 918,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 924,
											"end": 1046,
											"name": "tag",
											"source": 6,
											"value": "152"
										},
										{
											"begin": 924,
											"end": 1046,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 997,
											"end": 1021,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "208"
										},
										{
											"begin": 1015,
											"end": 1020,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 997,
											"end": 1021,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "151"
										},
										{
											"begin": 997,
											"end": 1021,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 997,
											"end": 1021,
											"name": "tag",
											"source": 6,
											"value": "208"
										},
										{
											"begin": 997,
											"end": 1021,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 990,
											"end": 995,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 987,
											"end": 1022,
											"name": "EQ",
											"source": 6
										},
										{
											"begin": 977,
											"end": 1040,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "209"
										},
										{
											"begin": 977,
											"end": 1040,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 1036,
											"end": 1037,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 1033,
											"end": 1034,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 1026,
											"end": 1038,
											"name": "REVERT",
											"source": 6
										},
										{
											"begin": 977,
											"end": 1040,
											"name": "tag",
											"source": 6,
											"value": "209"
										},
										{
											"begin": 977,
											"end": 1040,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 924,
											"end": 1046,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 924,
											"end": 1046,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 1052,
											"end": 1191,
											"name": "tag",
											"source": 6,
											"value": "153"
										},
										{
											"begin": 1052,
											"end": 1191,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 1098,
											"end": 1103,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 1136,
											"end": 1142,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 1123,
											"end": 1143,
											"name": "CALLDATALOAD",
											"source": 6
										},
										{
											"begin": 1114,
											"end": 1143,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 1114,
											"end": 1143,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 1152,
											"end": 1185,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "211"
										},
										{
											"begin": 1179,
											"end": 1184,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 1152,
											"end": 1185,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "152"
										},
										{
											"begin": 1152,
											"end": 1185,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 1152,
											"end": 1185,
											"name": "tag",
											"source": 6,
											"value": "211"
										},
										{
											"begin": 1152,
											"end": 1185,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 1052,
											"end": 1191,
											"name": "SWAP3",
											"source": 6
										},
										{
											"begin": 1052,
											"end": 1191,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 1052,
											"end": 1191,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 1052,
											"end": 1191,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 1052,
											"end": 1191,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 1197,
											"end": 1962,
											"name": "tag",
											"source": 6,
											"value": "10"
										},
										{
											"begin": 1197,
											"end": 1962,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 1283,
											"end": 1289,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 1291,
											"end": 1297,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 1299,
											"end": 1305,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 1307,
											"end": 1313,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 1356,
											"end": 1359,
											"name": "PUSH",
											"source": 6,
											"value": "80"
										},
										{
											"begin": 1344,
											"end": 1353,
											"name": "DUP6",
											"source": 6
										},
										{
											"begin": 1335,
											"end": 1342,
											"name": "DUP8",
											"source": 6
										},
										{
											"begin": 1331,
											"end": 1354,
											"name": "SUB",
											"source": 6
										},
										{
											"begin": 1327,
											"end": 1360,
											"name": "SLT",
											"source": 6
										},
										{
											"begin": 1324,
											"end": 1444,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 1324,
											"end": 1444,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "213"
										},
										{
											"begin": 1324,
											"end": 1444,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 1363,
											"end": 1442,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "214"
										},
										{
											"begin": 1363,
											"end": 1442,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "145"
										},
										{
											"begin": 1363,
											"end": 1442,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 1363,
											"end": 1442,
											"name": "tag",
											"source": 6,
											"value": "214"
										},
										{
											"begin": 1363,
											"end": 1442,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 1324,
											"end": 1444,
											"name": "tag",
											"source": 6,
											"value": "213"
										},
										{
											"begin": 1324,
											"end": 1444,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 1483,
											"end": 1484,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 1508,
											"end": 1561,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "215"
										},
										{
											"begin": 1553,
											"end": 1560,
											"name": "DUP8",
											"source": 6
										},
										{
											"begin": 1544,
											"end": 1550,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 1533,
											"end": 1542,
											"name": "DUP9",
											"source": 6
										},
										{
											"begin": 1529,
											"end": 1551,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 1508,
											"end": 1561,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "150"
										},
										{
											"begin": 1508,
											"end": 1561,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 1508,
											"end": 1561,
											"name": "tag",
											"source": 6,
											"value": "215"
										},
										{
											"begin": 1508,
											"end": 1561,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 1498,
											"end": 1561,
											"name": "SWAP5",
											"source": 6
										},
										{
											"begin": 1498,
											"end": 1561,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 1454,
											"end": 1571,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 1610,
											"end": 1612,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 1636,
											"end": 1689,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "216"
										},
										{
											"begin": 1681,
											"end": 1688,
											"name": "DUP8",
											"source": 6
										},
										{
											"begin": 1672,
											"end": 1678,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 1661,
											"end": 1670,
											"name": "DUP9",
											"source": 6
										},
										{
											"begin": 1657,
											"end": 1679,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 1636,
											"end": 1689,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "153"
										},
										{
											"begin": 1636,
											"end": 1689,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 1636,
											"end": 1689,
											"name": "tag",
											"source": 6,
											"value": "216"
										},
										{
											"begin": 1636,
											"end": 1689,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 1626,
											"end": 1689,
											"name": "SWAP4",
											"source": 6
										},
										{
											"begin": 1626,
											"end": 1689,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 1581,
											"end": 1699,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 1738,
											"end": 1740,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 1764,
											"end": 1817,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "217"
										},
										{
											"begin": 1809,
											"end": 1816,
											"name": "DUP8",
											"source": 6
										},
										{
											"begin": 1800,
											"end": 1806,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 1789,
											"end": 1798,
											"name": "DUP9",
											"source": 6
										},
										{
											"begin": 1785,
											"end": 1807,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 1764,
											"end": 1817,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "150"
										},
										{
											"begin": 1764,
											"end": 1817,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 1764,
											"end": 1817,
											"name": "tag",
											"source": 6,
											"value": "217"
										},
										{
											"begin": 1764,
											"end": 1817,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 1754,
											"end": 1817,
											"name": "SWAP3",
											"source": 6
										},
										{
											"begin": 1754,
											"end": 1817,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 1709,
											"end": 1827,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 1866,
											"end": 1868,
											"name": "PUSH",
											"source": 6,
											"value": "60"
										},
										{
											"begin": 1892,
											"end": 1945,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "218"
										},
										{
											"begin": 1937,
											"end": 1944,
											"name": "DUP8",
											"source": 6
										},
										{
											"begin": 1928,
											"end": 1934,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 1917,
											"end": 1926,
											"name": "DUP9",
											"source": 6
										},
										{
											"begin": 1913,
											"end": 1935,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 1892,
											"end": 1945,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "153"
										},
										{
											"begin": 1892,
											"end": 1945,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 1892,
											"end": 1945,
											"name": "tag",
											"source": 6,
											"value": "218"
										},
										{
											"begin": 1892,
											"end": 1945,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 1882,
											"end": 1945,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 1882,
											"end": 1945,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 1837,
											"end": 1955,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 1197,
											"end": 1962,
											"name": "SWAP3",
											"source": 6
										},
										{
											"begin": 1197,
											"end": 1962,
											"name": "SWAP6",
											"source": 6
										},
										{
											"begin": 1197,
											"end": 1962,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 1197,
											"end": 1962,
											"name": "SWAP5",
											"source": 6
										},
										{
											"begin": 1197,
											"end": 1962,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 1197,
											"end": 1962,
											"name": "SWAP3",
											"source": 6
										},
										{
											"begin": 1197,
											"end": 1962,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 1197,
											"end": 1962,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 1968,
											"end": 2086,
											"name": "tag",
											"source": 6,
											"value": "154"
										},
										{
											"begin": 1968,
											"end": 2086,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 2055,
											"end": 2079,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "220"
										},
										{
											"begin": 2073,
											"end": 2078,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 2055,
											"end": 2079,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "148"
										},
										{
											"begin": 2055,
											"end": 2079,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 2055,
											"end": 2079,
											"name": "tag",
											"source": 6,
											"value": "220"
										},
										{
											"begin": 2055,
											"end": 2079,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 2050,
											"end": 2053,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 2043,
											"end": 2080,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 1968,
											"end": 2086,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 1968,
											"end": 2086,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 1968,
											"end": 2086,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 2092,
											"end": 2314,
											"name": "tag",
											"source": 6,
											"value": "16"
										},
										{
											"begin": 2092,
											"end": 2314,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 2185,
											"end": 2189,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 2223,
											"end": 2225,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 2212,
											"end": 2221,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 2208,
											"end": 2226,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 2200,
											"end": 2226,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 2200,
											"end": 2226,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 2236,
											"end": 2307,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "222"
										},
										{
											"begin": 2304,
											"end": 2305,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 2293,
											"end": 2302,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 2289,
											"end": 2306,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 2280,
											"end": 2286,
											"name": "DUP5",
											"source": 6
										},
										{
											"begin": 2236,
											"end": 2307,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "154"
										},
										{
											"begin": 2236,
											"end": 2307,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 2236,
											"end": 2307,
											"name": "tag",
											"source": 6,
											"value": "222"
										},
										{
											"begin": 2236,
											"end": 2307,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 2092,
											"end": 2314,
											"name": "SWAP3",
											"source": 6
										},
										{
											"begin": 2092,
											"end": 2314,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 2092,
											"end": 2314,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 2092,
											"end": 2314,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 2092,
											"end": 2314,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 2320,
											"end": 3085,
											"name": "tag",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 2320,
											"end": 3085,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 2406,
											"end": 2412,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 2414,
											"end": 2420,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 2422,
											"end": 2428,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 2430,
											"end": 2436,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 2479,
											"end": 2482,
											"name": "PUSH",
											"source": 6,
											"value": "80"
										},
										{
											"begin": 2467,
											"end": 2476,
											"name": "DUP6",
											"source": 6
										},
										{
											"begin": 2458,
											"end": 2465,
											"name": "DUP8",
											"source": 6
										},
										{
											"begin": 2454,
											"end": 2477,
											"name": "SUB",
											"source": 6
										},
										{
											"begin": 2450,
											"end": 2483,
											"name": "SLT",
											"source": 6
										},
										{
											"begin": 2447,
											"end": 2567,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 2447,
											"end": 2567,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "224"
										},
										{
											"begin": 2447,
											"end": 2567,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 2486,
											"end": 2565,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "225"
										},
										{
											"begin": 2486,
											"end": 2565,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "145"
										},
										{
											"begin": 2486,
											"end": 2565,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 2486,
											"end": 2565,
											"name": "tag",
											"source": 6,
											"value": "225"
										},
										{
											"begin": 2486,
											"end": 2565,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 2447,
											"end": 2567,
											"name": "tag",
											"source": 6,
											"value": "224"
										},
										{
											"begin": 2447,
											"end": 2567,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 2606,
											"end": 2607,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 2631,
											"end": 2684,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "226"
										},
										{
											"begin": 2676,
											"end": 2683,
											"name": "DUP8",
											"source": 6
										},
										{
											"begin": 2667,
											"end": 2673,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 2656,
											"end": 2665,
											"name": "DUP9",
											"source": 6
										},
										{
											"begin": 2652,
											"end": 2674,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 2631,
											"end": 2684,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "150"
										},
										{
											"begin": 2631,
											"end": 2684,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 2631,
											"end": 2684,
											"name": "tag",
											"source": 6,
											"value": "226"
										},
										{
											"begin": 2631,
											"end": 2684,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 2621,
											"end": 2684,
											"name": "SWAP5",
											"source": 6
										},
										{
											"begin": 2621,
											"end": 2684,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 2577,
											"end": 2694,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 2733,
											"end": 2735,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 2759,
											"end": 2812,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "227"
										},
										{
											"begin": 2804,
											"end": 2811,
											"name": "DUP8",
											"source": 6
										},
										{
											"begin": 2795,
											"end": 2801,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 2784,
											"end": 2793,
											"name": "DUP9",
											"source": 6
										},
										{
											"begin": 2780,
											"end": 2802,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 2759,
											"end": 2812,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "150"
										},
										{
											"begin": 2759,
											"end": 2812,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 2759,
											"end": 2812,
											"name": "tag",
											"source": 6,
											"value": "227"
										},
										{
											"begin": 2759,
											"end": 2812,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 2749,
											"end": 2812,
											"name": "SWAP4",
											"source": 6
										},
										{
											"begin": 2749,
											"end": 2812,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 2704,
											"end": 2822,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 2861,
											"end": 2863,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 2887,
											"end": 2940,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "228"
										},
										{
											"begin": 2932,
											"end": 2939,
											"name": "DUP8",
											"source": 6
										},
										{
											"begin": 2923,
											"end": 2929,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 2912,
											"end": 2921,
											"name": "DUP9",
											"source": 6
										},
										{
											"begin": 2908,
											"end": 2930,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 2887,
											"end": 2940,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "153"
										},
										{
											"begin": 2887,
											"end": 2940,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 2887,
											"end": 2940,
											"name": "tag",
											"source": 6,
											"value": "228"
										},
										{
											"begin": 2887,
											"end": 2940,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 2877,
											"end": 2940,
											"name": "SWAP3",
											"source": 6
										},
										{
											"begin": 2877,
											"end": 2940,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 2832,
											"end": 2950,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 2989,
											"end": 2991,
											"name": "PUSH",
											"source": 6,
											"value": "60"
										},
										{
											"begin": 3015,
											"end": 3068,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "229"
										},
										{
											"begin": 3060,
											"end": 3067,
											"name": "DUP8",
											"source": 6
										},
										{
											"begin": 3051,
											"end": 3057,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 3040,
											"end": 3049,
											"name": "DUP9",
											"source": 6
										},
										{
											"begin": 3036,
											"end": 3058,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 3015,
											"end": 3068,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "153"
										},
										{
											"begin": 3015,
											"end": 3068,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 3015,
											"end": 3068,
											"name": "tag",
											"source": 6,
											"value": "229"
										},
										{
											"begin": 3015,
											"end": 3068,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 3005,
											"end": 3068,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 3005,
											"end": 3068,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 2960,
											"end": 3078,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 2320,
											"end": 3085,
											"name": "SWAP3",
											"source": 6
										},
										{
											"begin": 2320,
											"end": 3085,
											"name": "SWAP6",
											"source": 6
										},
										{
											"begin": 2320,
											"end": 3085,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 2320,
											"end": 3085,
											"name": "SWAP5",
											"source": 6
										},
										{
											"begin": 2320,
											"end": 3085,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 2320,
											"end": 3085,
											"name": "SWAP3",
											"source": 6
										},
										{
											"begin": 2320,
											"end": 3085,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 2320,
											"end": 3085,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 3091,
											"end": 3565,
											"name": "tag",
											"source": 6,
											"value": "24"
										},
										{
											"begin": 3091,
											"end": 3565,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 3159,
											"end": 3165,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 3167,
											"end": 3173,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 3216,
											"end": 3218,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 3204,
											"end": 3213,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 3195,
											"end": 3202,
											"name": "DUP6",
											"source": 6
										},
										{
											"begin": 3191,
											"end": 3214,
											"name": "SUB",
											"source": 6
										},
										{
											"begin": 3187,
											"end": 3219,
											"name": "SLT",
											"source": 6
										},
										{
											"begin": 3184,
											"end": 3303,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 3184,
											"end": 3303,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "231"
										},
										{
											"begin": 3184,
											"end": 3303,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 3222,
											"end": 3301,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "232"
										},
										{
											"begin": 3222,
											"end": 3301,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "145"
										},
										{
											"begin": 3222,
											"end": 3301,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 3222,
											"end": 3301,
											"name": "tag",
											"source": 6,
											"value": "232"
										},
										{
											"begin": 3222,
											"end": 3301,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 3184,
											"end": 3303,
											"name": "tag",
											"source": 6,
											"value": "231"
										},
										{
											"begin": 3184,
											"end": 3303,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 3342,
											"end": 3343,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 3367,
											"end": 3420,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "233"
										},
										{
											"begin": 3412,
											"end": 3419,
											"name": "DUP6",
											"source": 6
										},
										{
											"begin": 3403,
											"end": 3409,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 3392,
											"end": 3401,
											"name": "DUP7",
											"source": 6
										},
										{
											"begin": 3388,
											"end": 3410,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 3367,
											"end": 3420,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "150"
										},
										{
											"begin": 3367,
											"end": 3420,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 3367,
											"end": 3420,
											"name": "tag",
											"source": 6,
											"value": "233"
										},
										{
											"begin": 3367,
											"end": 3420,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 3357,
											"end": 3420,
											"name": "SWAP3",
											"source": 6
										},
										{
											"begin": 3357,
											"end": 3420,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 3313,
											"end": 3430,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 3469,
											"end": 3471,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 3495,
											"end": 3548,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "234"
										},
										{
											"begin": 3540,
											"end": 3547,
											"name": "DUP6",
											"source": 6
										},
										{
											"begin": 3531,
											"end": 3537,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 3520,
											"end": 3529,
											"name": "DUP7",
											"source": 6
										},
										{
											"begin": 3516,
											"end": 3538,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 3495,
											"end": 3548,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "153"
										},
										{
											"begin": 3495,
											"end": 3548,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 3495,
											"end": 3548,
											"name": "tag",
											"source": 6,
											"value": "234"
										},
										{
											"begin": 3495,
											"end": 3548,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 3485,
											"end": 3548,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 3485,
											"end": 3548,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 3440,
											"end": 3558,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 3091,
											"end": 3565,
											"name": "SWAP3",
											"source": 6
										},
										{
											"begin": 3091,
											"end": 3565,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 3091,
											"end": 3565,
											"name": "SWAP3",
											"source": 6
										},
										{
											"begin": 3091,
											"end": 3565,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 3091,
											"end": 3565,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 3091,
											"end": 3565,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 3571,
											"end": 3689,
											"name": "tag",
											"source": 6,
											"value": "155"
										},
										{
											"begin": 3571,
											"end": 3689,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 3658,
											"end": 3682,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "236"
										},
										{
											"begin": 3676,
											"end": 3681,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 3658,
											"end": 3682,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "151"
										},
										{
											"begin": 3658,
											"end": 3682,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 3658,
											"end": 3682,
											"name": "tag",
											"source": 6,
											"value": "236"
										},
										{
											"begin": 3658,
											"end": 3682,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 3653,
											"end": 3656,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 3646,
											"end": 3683,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 3571,
											"end": 3689,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 3571,
											"end": 3689,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 3571,
											"end": 3689,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 3695,
											"end": 3780,
											"name": "tag",
											"source": 6,
											"value": "156"
										},
										{
											"begin": 3695,
											"end": 3780,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 3740,
											"end": 3747,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 3769,
											"end": 3774,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 3758,
											"end": 3774,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 3758,
											"end": 3774,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 3695,
											"end": 3780,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 3695,
											"end": 3780,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 3695,
											"end": 3780,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 3695,
											"end": 3780,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 3786,
											"end": 3846,
											"name": "tag",
											"source": 6,
											"value": "157"
										},
										{
											"begin": 3786,
											"end": 3846,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 3814,
											"end": 3817,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 3835,
											"end": 3840,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 3828,
											"end": 3840,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 3828,
											"end": 3840,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 3786,
											"end": 3846,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 3786,
											"end": 3846,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 3786,
											"end": 3846,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 3786,
											"end": 3846,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 3852,
											"end": 4010,
											"name": "tag",
											"source": 6,
											"value": "158"
										},
										{
											"begin": 3852,
											"end": 4010,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 3910,
											"end": 3919,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 3943,
											"end": 4004,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "240"
										},
										{
											"begin": 3961,
											"end": 4003,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "241"
										},
										{
											"begin": 3970,
											"end": 4002,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "242"
										},
										{
											"begin": 3996,
											"end": 4001,
											"name": "DUP5",
											"source": 6
										},
										{
											"begin": 3970,
											"end": 4002,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "156"
										},
										{
											"begin": 3970,
											"end": 4002,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 3970,
											"end": 4002,
											"name": "tag",
											"source": 6,
											"value": "242"
										},
										{
											"begin": 3970,
											"end": 4002,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 3961,
											"end": 4003,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "157"
										},
										{
											"begin": 3961,
											"end": 4003,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 3961,
											"end": 4003,
											"name": "tag",
											"source": 6,
											"value": "241"
										},
										{
											"begin": 3961,
											"end": 4003,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 3943,
											"end": 4004,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "151"
										},
										{
											"begin": 3943,
											"end": 4004,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 3943,
											"end": 4004,
											"name": "tag",
											"source": 6,
											"value": "240"
										},
										{
											"begin": 3943,
											"end": 4004,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 3930,
											"end": 4004,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 3930,
											"end": 4004,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 3852,
											"end": 4010,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 3852,
											"end": 4010,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 3852,
											"end": 4010,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 3852,
											"end": 4010,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 4016,
											"end": 4163,
											"name": "tag",
											"source": 6,
											"value": "159"
										},
										{
											"begin": 4016,
											"end": 4163,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 4111,
											"end": 4156,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "244"
										},
										{
											"begin": 4150,
											"end": 4155,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 4111,
											"end": 4156,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "158"
										},
										{
											"begin": 4111,
											"end": 4156,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 4111,
											"end": 4156,
											"name": "tag",
											"source": 6,
											"value": "244"
										},
										{
											"begin": 4111,
											"end": 4156,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 4106,
											"end": 4109,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 4099,
											"end": 4157,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 4016,
											"end": 4163,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 4016,
											"end": 4163,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 4016,
											"end": 4163,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 4169,
											"end": 5198,
											"name": "tag",
											"source": 6,
											"value": "41"
										},
										{
											"begin": 4169,
											"end": 5198,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 4474,
											"end": 4478,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 4512,
											"end": 4515,
											"name": "PUSH",
											"source": 6,
											"value": "100"
										},
										{
											"begin": 4501,
											"end": 4510,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 4497,
											"end": 4516,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 4489,
											"end": 4516,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 4489,
											"end": 4516,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 4526,
											"end": 4597,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "246"
										},
										{
											"begin": 4594,
											"end": 4595,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 4583,
											"end": 4592,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 4579,
											"end": 4596,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 4570,
											"end": 4576,
											"name": "DUP12",
											"source": 6
										},
										{
											"begin": 4526,
											"end": 4597,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "154"
										},
										{
											"begin": 4526,
											"end": 4597,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 4526,
											"end": 4597,
											"name": "tag",
											"source": 6,
											"value": "246"
										},
										{
											"begin": 4526,
											"end": 4597,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 4607,
											"end": 4679,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "247"
										},
										{
											"begin": 4675,
											"end": 4677,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 4664,
											"end": 4673,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 4660,
											"end": 4678,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 4651,
											"end": 4657,
											"name": "DUP11",
											"source": 6
										},
										{
											"begin": 4607,
											"end": 4679,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "154"
										},
										{
											"begin": 4607,
											"end": 4679,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 4607,
											"end": 4679,
											"name": "tag",
											"source": 6,
											"value": "247"
										},
										{
											"begin": 4607,
											"end": 4679,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 4689,
											"end": 4761,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "248"
										},
										{
											"begin": 4757,
											"end": 4759,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 4746,
											"end": 4755,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 4742,
											"end": 4760,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 4733,
											"end": 4739,
											"name": "DUP10",
											"source": 6
										},
										{
											"begin": 4689,
											"end": 4761,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "155"
										},
										{
											"begin": 4689,
											"end": 4761,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 4689,
											"end": 4761,
											"name": "tag",
											"source": 6,
											"value": "248"
										},
										{
											"begin": 4689,
											"end": 4761,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 4771,
											"end": 4843,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "249"
										},
										{
											"begin": 4839,
											"end": 4841,
											"name": "PUSH",
											"source": 6,
											"value": "60"
										},
										{
											"begin": 4828,
											"end": 4837,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 4824,
											"end": 4842,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 4815,
											"end": 4821,
											"name": "DUP9",
											"source": 6
										},
										{
											"begin": 4771,
											"end": 4843,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "155"
										},
										{
											"begin": 4771,
											"end": 4843,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 4771,
											"end": 4843,
											"name": "tag",
											"source": 6,
											"value": "249"
										},
										{
											"begin": 4771,
											"end": 4843,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 4853,
											"end": 4934,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "250"
										},
										{
											"begin": 4929,
											"end": 4932,
											"name": "PUSH",
											"source": 6,
											"value": "80"
										},
										{
											"begin": 4918,
											"end": 4927,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 4914,
											"end": 4933,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 4905,
											"end": 4911,
											"name": "DUP8",
											"source": 6
										},
										{
											"begin": 4853,
											"end": 4934,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "159"
										},
										{
											"begin": 4853,
											"end": 4934,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 4853,
											"end": 4934,
											"name": "tag",
											"source": 6,
											"value": "250"
										},
										{
											"begin": 4853,
											"end": 4934,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 4944,
											"end": 5025,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "251"
										},
										{
											"begin": 5020,
											"end": 5023,
											"name": "PUSH",
											"source": 6,
											"value": "A0"
										},
										{
											"begin": 5009,
											"end": 5018,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 5005,
											"end": 5024,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 4996,
											"end": 5002,
											"name": "DUP7",
											"source": 6
										},
										{
											"begin": 4944,
											"end": 5025,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "159"
										},
										{
											"begin": 4944,
											"end": 5025,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 4944,
											"end": 5025,
											"name": "tag",
											"source": 6,
											"value": "251"
										},
										{
											"begin": 4944,
											"end": 5025,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 5035,
											"end": 5108,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "252"
										},
										{
											"begin": 5103,
											"end": 5106,
											"name": "PUSH",
											"source": 6,
											"value": "C0"
										},
										{
											"begin": 5092,
											"end": 5101,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 5088,
											"end": 5107,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 5079,
											"end": 5085,
											"name": "DUP6",
											"source": 6
										},
										{
											"begin": 5035,
											"end": 5108,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "154"
										},
										{
											"begin": 5035,
											"end": 5108,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 5035,
											"end": 5108,
											"name": "tag",
											"source": 6,
											"value": "252"
										},
										{
											"begin": 5035,
											"end": 5108,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 5118,
											"end": 5191,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "253"
										},
										{
											"begin": 5186,
											"end": 5189,
											"name": "PUSH",
											"source": 6,
											"value": "E0"
										},
										{
											"begin": 5175,
											"end": 5184,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 5171,
											"end": 5190,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 5162,
											"end": 5168,
											"name": "DUP5",
											"source": 6
										},
										{
											"begin": 5118,
											"end": 5191,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "155"
										},
										{
											"begin": 5118,
											"end": 5191,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 5118,
											"end": 5191,
											"name": "tag",
											"source": 6,
											"value": "253"
										},
										{
											"begin": 5118,
											"end": 5191,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 4169,
											"end": 5198,
											"name": "SWAP10",
											"source": 6
										},
										{
											"begin": 4169,
											"end": 5198,
											"name": "SWAP9",
											"source": 6
										},
										{
											"begin": 4169,
											"end": 5198,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 4169,
											"end": 5198,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 4169,
											"end": 5198,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 4169,
											"end": 5198,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 4169,
											"end": 5198,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 4169,
											"end": 5198,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 4169,
											"end": 5198,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 4169,
											"end": 5198,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 4169,
											"end": 5198,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 4169,
											"end": 5198,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 5204,
											"end": 5347,
											"name": "tag",
											"source": 6,
											"value": "160"
										},
										{
											"begin": 5204,
											"end": 5347,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 5261,
											"end": 5266,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 5292,
											"end": 5298,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 5286,
											"end": 5299,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 5277,
											"end": 5299,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 5277,
											"end": 5299,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 5308,
											"end": 5341,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "255"
										},
										{
											"begin": 5335,
											"end": 5340,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 5308,
											"end": 5341,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "152"
										},
										{
											"begin": 5308,
											"end": 5341,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 5308,
											"end": 5341,
											"name": "tag",
											"source": 6,
											"value": "255"
										},
										{
											"begin": 5308,
											"end": 5341,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 5204,
											"end": 5347,
											"name": "SWAP3",
											"source": 6
										},
										{
											"begin": 5204,
											"end": 5347,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 5204,
											"end": 5347,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 5204,
											"end": 5347,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 5204,
											"end": 5347,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 5353,
											"end": 6016,
											"name": "tag",
											"source": 6,
											"value": "45"
										},
										{
											"begin": 5353,
											"end": 6016,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 5441,
											"end": 5447,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 5449,
											"end": 5455,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 5457,
											"end": 5463,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 5506,
											"end": 5508,
											"name": "PUSH",
											"source": 6,
											"value": "60"
										},
										{
											"begin": 5494,
											"end": 5503,
											"name": "DUP5",
											"source": 6
										},
										{
											"begin": 5485,
											"end": 5492,
											"name": "DUP7",
											"source": 6
										},
										{
											"begin": 5481,
											"end": 5504,
											"name": "SUB",
											"source": 6
										},
										{
											"begin": 5477,
											"end": 5509,
											"name": "SLT",
											"source": 6
										},
										{
											"begin": 5474,
											"end": 5593,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 5474,
											"end": 5593,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "257"
										},
										{
											"begin": 5474,
											"end": 5593,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 5512,
											"end": 5591,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "258"
										},
										{
											"begin": 5512,
											"end": 5591,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "145"
										},
										{
											"begin": 5512,
											"end": 5591,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 5512,
											"end": 5591,
											"name": "tag",
											"source": 6,
											"value": "258"
										},
										{
											"begin": 5512,
											"end": 5591,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 5474,
											"end": 5593,
											"name": "tag",
											"source": 6,
											"value": "257"
										},
										{
											"begin": 5474,
											"end": 5593,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 5632,
											"end": 5633,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 5657,
											"end": 5721,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "259"
										},
										{
											"begin": 5713,
											"end": 5720,
											"name": "DUP7",
											"source": 6
										},
										{
											"begin": 5704,
											"end": 5710,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 5693,
											"end": 5702,
											"name": "DUP8",
											"source": 6
										},
										{
											"begin": 5689,
											"end": 5711,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 5657,
											"end": 5721,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "160"
										},
										{
											"begin": 5657,
											"end": 5721,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 5657,
											"end": 5721,
											"name": "tag",
											"source": 6,
											"value": "259"
										},
										{
											"begin": 5657,
											"end": 5721,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 5647,
											"end": 5721,
											"name": "SWAP4",
											"source": 6
										},
										{
											"begin": 5647,
											"end": 5721,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 5603,
											"end": 5731,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 5770,
											"end": 5772,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 5796,
											"end": 5860,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "260"
										},
										{
											"begin": 5852,
											"end": 5859,
											"name": "DUP7",
											"source": 6
										},
										{
											"begin": 5843,
											"end": 5849,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 5832,
											"end": 5841,
											"name": "DUP8",
											"source": 6
										},
										{
											"begin": 5828,
											"end": 5850,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 5796,
											"end": 5860,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "160"
										},
										{
											"begin": 5796,
											"end": 5860,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 5796,
											"end": 5860,
											"name": "tag",
											"source": 6,
											"value": "260"
										},
										{
											"begin": 5796,
											"end": 5860,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 5786,
											"end": 5860,
											"name": "SWAP3",
											"source": 6
										},
										{
											"begin": 5786,
											"end": 5860,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 5741,
											"end": 5870,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 5909,
											"end": 5911,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 5935,
											"end": 5999,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "261"
										},
										{
											"begin": 5991,
											"end": 5998,
											"name": "DUP7",
											"source": 6
										},
										{
											"begin": 5982,
											"end": 5988,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 5971,
											"end": 5980,
											"name": "DUP8",
											"source": 6
										},
										{
											"begin": 5967,
											"end": 5989,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 5935,
											"end": 5999,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "160"
										},
										{
											"begin": 5935,
											"end": 5999,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 5935,
											"end": 5999,
											"name": "tag",
											"source": 6,
											"value": "261"
										},
										{
											"begin": 5935,
											"end": 5999,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 5925,
											"end": 5999,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 5925,
											"end": 5999,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 5880,
											"end": 6009,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 5353,
											"end": 6016,
											"name": "SWAP3",
											"source": 6
										},
										{
											"begin": 5353,
											"end": 6016,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 5353,
											"end": 6016,
											"name": "SWAP3",
											"source": 6
										},
										{
											"begin": 5353,
											"end": 6016,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 5353,
											"end": 6016,
											"name": "SWAP3",
											"source": 6
										},
										{
											"begin": 5353,
											"end": 6016,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 6022,
											"end": 6202,
											"name": "tag",
											"source": 6,
											"value": "49"
										},
										{
											"begin": 6022,
											"end": 6202,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 6070,
											"end": 6147,
											"name": "PUSH",
											"source": 6,
											"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 6067,
											"end": 6068,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 6060,
											"end": 6148,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 6167,
											"end": 6171,
											"name": "PUSH",
											"source": 6,
											"value": "41"
										},
										{
											"begin": 6164,
											"end": 6165,
											"name": "PUSH",
											"source": 6,
											"value": "4"
										},
										{
											"begin": 6157,
											"end": 6172,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 6191,
											"end": 6195,
											"name": "PUSH",
											"source": 6,
											"value": "24"
										},
										{
											"begin": 6188,
											"end": 6189,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 6181,
											"end": 6196,
											"name": "REVERT",
											"source": 6
										},
										{
											"begin": 6208,
											"end": 6388,
											"name": "tag",
											"source": 6,
											"value": "53"
										},
										{
											"begin": 6208,
											"end": 6388,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 6256,
											"end": 6333,
											"name": "PUSH",
											"source": 6,
											"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 6253,
											"end": 6254,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 6246,
											"end": 6334,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 6353,
											"end": 6357,
											"name": "PUSH",
											"source": 6,
											"value": "32"
										},
										{
											"begin": 6350,
											"end": 6351,
											"name": "PUSH",
											"source": 6,
											"value": "4"
										},
										{
											"begin": 6343,
											"end": 6358,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 6377,
											"end": 6381,
											"name": "PUSH",
											"source": 6,
											"value": "24"
										},
										{
											"begin": 6374,
											"end": 6375,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 6367,
											"end": 6382,
											"name": "REVERT",
											"source": 6
										},
										{
											"begin": 6394,
											"end": 6508,
											"name": "tag",
											"source": 6,
											"value": "161"
										},
										{
											"begin": 6394,
											"end": 6508,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 6461,
											"end": 6467,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 6495,
											"end": 6500,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 6489,
											"end": 6501,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 6479,
											"end": 6501,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 6479,
											"end": 6501,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 6394,
											"end": 6508,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 6394,
											"end": 6508,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 6394,
											"end": 6508,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 6394,
											"end": 6508,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 6514,
											"end": 6698,
											"name": "tag",
											"source": 6,
											"value": "162"
										},
										{
											"begin": 6514,
											"end": 6698,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 6613,
											"end": 6624,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 6647,
											"end": 6653,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 6642,
											"end": 6645,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 6635,
											"end": 6654,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 6687,
											"end": 6691,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 6682,
											"end": 6685,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 6678,
											"end": 6692,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 6663,
											"end": 6692,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 6663,
											"end": 6692,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 6514,
											"end": 6698,
											"name": "SWAP3",
											"source": 6
										},
										{
											"begin": 6514,
											"end": 6698,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 6514,
											"end": 6698,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 6514,
											"end": 6698,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 6514,
											"end": 6698,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 6704,
											"end": 6836,
											"name": "tag",
											"source": 6,
											"value": "163"
										},
										{
											"begin": 6704,
											"end": 6836,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 6771,
											"end": 6775,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 6794,
											"end": 6797,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 6786,
											"end": 6797,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 6786,
											"end": 6797,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 6824,
											"end": 6828,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 6819,
											"end": 6822,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 6815,
											"end": 6829,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 6807,
											"end": 6829,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 6807,
											"end": 6829,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 6704,
											"end": 6836,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 6704,
											"end": 6836,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 6704,
											"end": 6836,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 6704,
											"end": 6836,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 6842,
											"end": 6950,
											"name": "tag",
											"source": 6,
											"value": "164"
										},
										{
											"begin": 6842,
											"end": 6950,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 6919,
											"end": 6943,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "268"
										},
										{
											"begin": 6937,
											"end": 6942,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 6919,
											"end": 6943,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "148"
										},
										{
											"begin": 6919,
											"end": 6943,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 6919,
											"end": 6943,
											"name": "tag",
											"source": 6,
											"value": "268"
										},
										{
											"begin": 6919,
											"end": 6943,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 6914,
											"end": 6917,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 6907,
											"end": 6944,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 6842,
											"end": 6950,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 6842,
											"end": 6950,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 6842,
											"end": 6950,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 6956,
											"end": 7135,
											"name": "tag",
											"source": 6,
											"value": "165"
										},
										{
											"begin": 6956,
											"end": 7135,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 7025,
											"end": 7035,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 7046,
											"end": 7092,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "270"
										},
										{
											"begin": 7088,
											"end": 7091,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 7080,
											"end": 7086,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 7046,
											"end": 7092,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "164"
										},
										{
											"begin": 7046,
											"end": 7092,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 7046,
											"end": 7092,
											"name": "tag",
											"source": 6,
											"value": "270"
										},
										{
											"begin": 7046,
											"end": 7092,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 7124,
											"end": 7128,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 7119,
											"end": 7122,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 7115,
											"end": 7129,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 7101,
											"end": 7129,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 7101,
											"end": 7129,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 6956,
											"end": 7135,
											"name": "SWAP3",
											"source": 6
										},
										{
											"begin": 6956,
											"end": 7135,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 6956,
											"end": 7135,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 6956,
											"end": 7135,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 6956,
											"end": 7135,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 7141,
											"end": 7254,
											"name": "tag",
											"source": 6,
											"value": "166"
										},
										{
											"begin": 7141,
											"end": 7254,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 7211,
											"end": 7215,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 7243,
											"end": 7247,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 7238,
											"end": 7241,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 7234,
											"end": 7248,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 7226,
											"end": 7248,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 7226,
											"end": 7248,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 7141,
											"end": 7254,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 7141,
											"end": 7254,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 7141,
											"end": 7254,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 7141,
											"end": 7254,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 7290,
											"end": 8022,
											"name": "tag",
											"source": 6,
											"value": "167"
										},
										{
											"begin": 7290,
											"end": 8022,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 7409,
											"end": 7412,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 7438,
											"end": 7492,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "273"
										},
										{
											"begin": 7486,
											"end": 7491,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 7438,
											"end": 7492,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "161"
										},
										{
											"begin": 7438,
											"end": 7492,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 7438,
											"end": 7492,
											"name": "tag",
											"source": 6,
											"value": "273"
										},
										{
											"begin": 7438,
											"end": 7492,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 7508,
											"end": 7594,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "274"
										},
										{
											"begin": 7587,
											"end": 7593,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 7582,
											"end": 7585,
											"name": "DUP6",
											"source": 6
										},
										{
											"begin": 7508,
											"end": 7594,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "162"
										},
										{
											"begin": 7508,
											"end": 7594,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 7508,
											"end": 7594,
											"name": "tag",
											"source": 6,
											"value": "274"
										},
										{
											"begin": 7508,
											"end": 7594,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 7501,
											"end": 7594,
											"name": "SWAP4",
											"source": 6
										},
										{
											"begin": 7501,
											"end": 7594,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 7618,
											"end": 7674,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "275"
										},
										{
											"begin": 7668,
											"end": 7673,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 7618,
											"end": 7674,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "163"
										},
										{
											"begin": 7618,
											"end": 7674,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 7618,
											"end": 7674,
											"name": "tag",
											"source": 6,
											"value": "275"
										},
										{
											"begin": 7618,
											"end": 7674,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 7697,
											"end": 7704,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 7728,
											"end": 7729,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 7713,
											"end": 7997,
											"name": "tag",
											"source": 6,
											"value": "276"
										},
										{
											"begin": 7713,
											"end": 7997,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 7738,
											"end": 7744,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 7735,
											"end": 7736,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 7732,
											"end": 7745,
											"name": "LT",
											"source": 6
										},
										{
											"begin": 7713,
											"end": 7997,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 7713,
											"end": 7997,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "278"
										},
										{
											"begin": 7713,
											"end": 7997,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 7814,
											"end": 7820,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 7808,
											"end": 7821,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 7841,
											"end": 7904,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "279"
										},
										{
											"begin": 7900,
											"end": 7903,
											"name": "DUP9",
											"source": 6
										},
										{
											"begin": 7885,
											"end": 7898,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 7841,
											"end": 7904,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "165"
										},
										{
											"begin": 7841,
											"end": 7904,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 7841,
											"end": 7904,
											"name": "tag",
											"source": 6,
											"value": "279"
										},
										{
											"begin": 7841,
											"end": 7904,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 7834,
											"end": 7904,
											"name": "SWAP8",
											"source": 6
										},
										{
											"begin": 7834,
											"end": 7904,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 7927,
											"end": 7987,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "280"
										},
										{
											"begin": 7980,
											"end": 7986,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 7927,
											"end": 7987,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "166"
										},
										{
											"begin": 7927,
											"end": 7987,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 7927,
											"end": 7987,
											"name": "tag",
											"source": 6,
											"value": "280"
										},
										{
											"begin": 7927,
											"end": 7987,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 7917,
											"end": 7987,
											"name": "SWAP3",
											"source": 6
										},
										{
											"begin": 7917,
											"end": 7987,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 7773,
											"end": 7997,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 7760,
											"end": 7761,
											"name": "PUSH",
											"source": 6,
											"value": "1"
										},
										{
											"begin": 7757,
											"end": 7758,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 7753,
											"end": 7762,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 7748,
											"end": 7762,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 7748,
											"end": 7762,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 7713,
											"end": 7997,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "276"
										},
										{
											"begin": 7713,
											"end": 7997,
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 7713,
											"end": 7997,
											"name": "tag",
											"source": 6,
											"value": "278"
										},
										{
											"begin": 7713,
											"end": 7997,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 7717,
											"end": 7731,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 8013,
											"end": 8016,
											"name": "DUP6",
											"source": 6
										},
										{
											"begin": 8006,
											"end": 8016,
											"name": "SWAP4",
											"source": 6
										},
										{
											"begin": 8006,
											"end": 8016,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 7414,
											"end": 8022,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 7414,
											"end": 8022,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 7414,
											"end": 8022,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 7290,
											"end": 8022,
											"name": "SWAP3",
											"source": 6
										},
										{
											"begin": 7290,
											"end": 8022,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 7290,
											"end": 8022,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 7290,
											"end": 8022,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 7290,
											"end": 8022,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 8028,
											"end": 8843,
											"name": "tag",
											"source": 6,
											"value": "59"
										},
										{
											"begin": 8028,
											"end": 8843,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 8283,
											"end": 8287,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 8321,
											"end": 8324,
											"name": "PUSH",
											"source": 6,
											"value": "A0"
										},
										{
											"begin": 8310,
											"end": 8319,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 8306,
											"end": 8325,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 8298,
											"end": 8325,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 8298,
											"end": 8325,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 8335,
											"end": 8406,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "282"
										},
										{
											"begin": 8403,
											"end": 8404,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 8392,
											"end": 8401,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 8388,
											"end": 8405,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 8379,
											"end": 8385,
											"name": "DUP9",
											"source": 6
										},
										{
											"begin": 8335,
											"end": 8406,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "155"
										},
										{
											"begin": 8335,
											"end": 8406,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 8335,
											"end": 8406,
											"name": "tag",
											"source": 6,
											"value": "282"
										},
										{
											"begin": 8335,
											"end": 8406,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 8416,
											"end": 8488,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "283"
										},
										{
											"begin": 8484,
											"end": 8486,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 8473,
											"end": 8482,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 8469,
											"end": 8487,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 8460,
											"end": 8466,
											"name": "DUP8",
											"source": 6
										},
										{
											"begin": 8416,
											"end": 8488,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "155"
										},
										{
											"begin": 8416,
											"end": 8488,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 8416,
											"end": 8488,
											"name": "tag",
											"source": 6,
											"value": "283"
										},
										{
											"begin": 8416,
											"end": 8488,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 8535,
											"end": 8544,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 8529,
											"end": 8533,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 8525,
											"end": 8545,
											"name": "SUB",
											"source": 6
										},
										{
											"begin": 8520,
											"end": 8522,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 8509,
											"end": 8518,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 8505,
											"end": 8523,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 8498,
											"end": 8546,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 8563,
											"end": 8671,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "284"
										},
										{
											"begin": 8666,
											"end": 8670,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 8657,
											"end": 8663,
											"name": "DUP7",
											"source": 6
										},
										{
											"begin": 8563,
											"end": 8671,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "167"
										},
										{
											"begin": 8563,
											"end": 8671,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 8563,
											"end": 8671,
											"name": "tag",
											"source": 6,
											"value": "284"
										},
										{
											"begin": 8563,
											"end": 8671,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 8555,
											"end": 8671,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 8555,
											"end": 8671,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 8681,
											"end": 8753,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "285"
										},
										{
											"begin": 8749,
											"end": 8751,
											"name": "PUSH",
											"source": 6,
											"value": "60"
										},
										{
											"begin": 8738,
											"end": 8747,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 8734,
											"end": 8752,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 8725,
											"end": 8731,
											"name": "DUP6",
											"source": 6
										},
										{
											"begin": 8681,
											"end": 8753,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "154"
										},
										{
											"begin": 8681,
											"end": 8753,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 8681,
											"end": 8753,
											"name": "tag",
											"source": 6,
											"value": "285"
										},
										{
											"begin": 8681,
											"end": 8753,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 8763,
											"end": 8836,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "286"
										},
										{
											"begin": 8831,
											"end": 8834,
											"name": "PUSH",
											"source": 6,
											"value": "80"
										},
										{
											"begin": 8820,
											"end": 8829,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 8816,
											"end": 8835,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 8807,
											"end": 8813,
											"name": "DUP5",
											"source": 6
										},
										{
											"begin": 8763,
											"end": 8836,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "155"
										},
										{
											"begin": 8763,
											"end": 8836,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 8763,
											"end": 8836,
											"name": "tag",
											"source": 6,
											"value": "286"
										},
										{
											"begin": 8763,
											"end": 8836,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 8028,
											"end": 8843,
											"name": "SWAP7",
											"source": 6
										},
										{
											"begin": 8028,
											"end": 8843,
											"name": "SWAP6",
											"source": 6
										},
										{
											"begin": 8028,
											"end": 8843,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 8028,
											"end": 8843,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 8028,
											"end": 8843,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 8028,
											"end": 8843,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 8028,
											"end": 8843,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 8028,
											"end": 8843,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 8028,
											"end": 8843,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 8849,
											"end": 8966,
											"name": "tag",
											"source": 6,
											"value": "168"
										},
										{
											"begin": 8849,
											"end": 8966,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 8958,
											"end": 8959,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 8955,
											"end": 8956,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 8948,
											"end": 8960,
											"name": "REVERT",
											"source": 6
										},
										{
											"begin": 8972,
											"end": 9074,
											"name": "tag",
											"source": 6,
											"value": "169"
										},
										{
											"begin": 8972,
											"end": 9074,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 9013,
											"end": 9019,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 9064,
											"end": 9066,
											"name": "PUSH",
											"source": 6,
											"value": "1F"
										},
										{
											"begin": 9060,
											"end": 9067,
											"name": "NOT",
											"source": 6
										},
										{
											"begin": 9055,
											"end": 9057,
											"name": "PUSH",
											"source": 6,
											"value": "1F"
										},
										{
											"begin": 9048,
											"end": 9053,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 9044,
											"end": 9058,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 9040,
											"end": 9068,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 9030,
											"end": 9068,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 9030,
											"end": 9068,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 8972,
											"end": 9074,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 8972,
											"end": 9074,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 8972,
											"end": 9074,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 8972,
											"end": 9074,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 9080,
											"end": 9361,
											"name": "tag",
											"source": 6,
											"value": "170"
										},
										{
											"begin": 9080,
											"end": 9361,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 9163,
											"end": 9190,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "290"
										},
										{
											"begin": 9185,
											"end": 9189,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 9163,
											"end": 9190,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "169"
										},
										{
											"begin": 9163,
											"end": 9190,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 9163,
											"end": 9190,
											"name": "tag",
											"source": 6,
											"value": "290"
										},
										{
											"begin": 9163,
											"end": 9190,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 9155,
											"end": 9161,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 9151,
											"end": 9191,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 9293,
											"end": 9299,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 9281,
											"end": 9291,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 9278,
											"end": 9300,
											"name": "LT",
											"source": 6
										},
										{
											"begin": 9257,
											"end": 9275,
											"name": "PUSH",
											"source": 6,
											"value": "FFFFFFFFFFFFFFFF"
										},
										{
											"begin": 9245,
											"end": 9255,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 9242,
											"end": 9276,
											"name": "GT",
											"source": 6
										},
										{
											"begin": 9239,
											"end": 9301,
											"name": "OR",
											"source": 6
										},
										{
											"begin": 9236,
											"end": 9324,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 9236,
											"end": 9324,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "291"
										},
										{
											"begin": 9236,
											"end": 9324,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 9304,
											"end": 9322,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "292"
										},
										{
											"begin": 9304,
											"end": 9322,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "49"
										},
										{
											"begin": 9304,
											"end": 9322,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 9304,
											"end": 9322,
											"name": "tag",
											"source": 6,
											"value": "292"
										},
										{
											"begin": 9304,
											"end": 9322,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 9236,
											"end": 9324,
											"name": "tag",
											"source": 6,
											"value": "291"
										},
										{
											"begin": 9236,
											"end": 9324,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 9344,
											"end": 9354,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 9340,
											"end": 9342,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 9333,
											"end": 9355,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 9123,
											"end": 9361,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 9080,
											"end": 9361,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 9080,
											"end": 9361,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 9080,
											"end": 9361,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 9367,
											"end": 9496,
											"name": "tag",
											"source": 6,
											"value": "171"
										},
										{
											"begin": 9367,
											"end": 9496,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 9401,
											"end": 9407,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 9428,
											"end": 9448,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "294"
										},
										{
											"begin": 9428,
											"end": 9448,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "144"
										},
										{
											"begin": 9428,
											"end": 9448,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 9428,
											"end": 9448,
											"name": "tag",
											"source": 6,
											"value": "294"
										},
										{
											"begin": 9428,
											"end": 9448,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 9418,
											"end": 9448,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 9418,
											"end": 9448,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 9457,
											"end": 9490,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "295"
										},
										{
											"begin": 9485,
											"end": 9489,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 9477,
											"end": 9483,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 9457,
											"end": 9490,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "170"
										},
										{
											"begin": 9457,
											"end": 9490,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 9457,
											"end": 9490,
											"name": "tag",
											"source": 6,
											"value": "295"
										},
										{
											"begin": 9457,
											"end": 9490,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 9367,
											"end": 9496,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 9367,
											"end": 9496,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 9367,
											"end": 9496,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 9367,
											"end": 9496,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 9502,
											"end": 9813,
											"name": "tag",
											"source": 6,
											"value": "172"
										},
										{
											"begin": 9502,
											"end": 9813,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 9579,
											"end": 9583,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 9669,
											"end": 9687,
											"name": "PUSH",
											"source": 6,
											"value": "FFFFFFFFFFFFFFFF"
										},
										{
											"begin": 9661,
											"end": 9667,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 9658,
											"end": 9688,
											"name": "GT",
											"source": 6
										},
										{
											"begin": 9655,
											"end": 9711,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 9655,
											"end": 9711,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "297"
										},
										{
											"begin": 9655,
											"end": 9711,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 9691,
											"end": 9709,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "298"
										},
										{
											"begin": 9691,
											"end": 9709,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "49"
										},
										{
											"begin": 9691,
											"end": 9709,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 9691,
											"end": 9709,
											"name": "tag",
											"source": 6,
											"value": "298"
										},
										{
											"begin": 9691,
											"end": 9709,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 9655,
											"end": 9711,
											"name": "tag",
											"source": 6,
											"value": "297"
										},
										{
											"begin": 9655,
											"end": 9711,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 9741,
											"end": 9745,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 9733,
											"end": 9739,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 9729,
											"end": 9746,
											"name": "MUL",
											"source": 6
										},
										{
											"begin": 9721,
											"end": 9746,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 9721,
											"end": 9746,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 9801,
											"end": 9805,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 9795,
											"end": 9799,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 9791,
											"end": 9806,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 9783,
											"end": 9806,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 9783,
											"end": 9806,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 9502,
											"end": 9813,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 9502,
											"end": 9813,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 9502,
											"end": 9813,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 9502,
											"end": 9813,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 9819,
											"end": 9936,
											"name": "tag",
											"source": 6,
											"value": "173"
										},
										{
											"begin": 9819,
											"end": 9936,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 9928,
											"end": 9929,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 9925,
											"end": 9926,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 9918,
											"end": 9930,
											"name": "REVERT",
											"source": 6
										},
										{
											"begin": 9959,
											"end": 10691,
											"name": "tag",
											"source": 6,
											"value": "174"
										},
										{
											"begin": 9959,
											"end": 10691,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 10066,
											"end": 10071,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 10091,
											"end": 10172,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "301"
										},
										{
											"begin": 10107,
											"end": 10171,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "302"
										},
										{
											"begin": 10164,
											"end": 10170,
											"name": "DUP5",
											"source": 6
										},
										{
											"begin": 10107,
											"end": 10171,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "172"
										},
										{
											"begin": 10107,
											"end": 10171,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 10107,
											"end": 10171,
											"name": "tag",
											"source": 6,
											"value": "302"
										},
										{
											"begin": 10107,
											"end": 10171,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 10091,
											"end": 10172,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "171"
										},
										{
											"begin": 10091,
											"end": 10172,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 10091,
											"end": 10172,
											"name": "tag",
											"source": 6,
											"value": "301"
										},
										{
											"begin": 10091,
											"end": 10172,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 10082,
											"end": 10172,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 10082,
											"end": 10172,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 10192,
											"end": 10197,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 10221,
											"end": 10227,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 10214,
											"end": 10219,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 10207,
											"end": 10228,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 10255,
											"end": 10259,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 10248,
											"end": 10253,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 10244,
											"end": 10260,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 10237,
											"end": 10260,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 10237,
											"end": 10260,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 10308,
											"end": 10312,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 10300,
											"end": 10306,
											"name": "DUP5",
											"source": 6
										},
										{
											"begin": 10296,
											"end": 10313,
											"name": "MUL",
											"source": 6
										},
										{
											"begin": 10288,
											"end": 10294,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 10284,
											"end": 10314,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 10337,
											"end": 10340,
											"name": "DUP6",
											"source": 6
										},
										{
											"begin": 10329,
											"end": 10335,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 10326,
											"end": 10341,
											"name": "GT",
											"source": 6
										},
										{
											"begin": 10323,
											"end": 10445,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 10323,
											"end": 10445,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "303"
										},
										{
											"begin": 10323,
											"end": 10445,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 10356,
											"end": 10435,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "304"
										},
										{
											"begin": 10356,
											"end": 10435,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "173"
										},
										{
											"begin": 10356,
											"end": 10435,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 10356,
											"end": 10435,
											"name": "tag",
											"source": 6,
											"value": "304"
										},
										{
											"begin": 10356,
											"end": 10435,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 10323,
											"end": 10445,
											"name": "tag",
											"source": 6,
											"value": "303"
										},
										{
											"begin": 10323,
											"end": 10445,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 10471,
											"end": 10477,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 10454,
											"end": 10685,
											"name": "tag",
											"source": 6,
											"value": "305"
										},
										{
											"begin": 10454,
											"end": 10685,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 10488,
											"end": 10494,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 10483,
											"end": 10486,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 10480,
											"end": 10495,
											"name": "LT",
											"source": 6
										},
										{
											"begin": 10454,
											"end": 10685,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 10454,
											"end": 10685,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "307"
										},
										{
											"begin": 10454,
											"end": 10685,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 10563,
											"end": 10566,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 10592,
											"end": 10640,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "308"
										},
										{
											"begin": 10636,
											"end": 10639,
											"name": "DUP9",
											"source": 6
										},
										{
											"begin": 10624,
											"end": 10634,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 10592,
											"end": 10640,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "160"
										},
										{
											"begin": 10592,
											"end": 10640,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 10592,
											"end": 10640,
											"name": "tag",
											"source": 6,
											"value": "308"
										},
										{
											"begin": 10592,
											"end": 10640,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 10587,
											"end": 10590,
											"name": "DUP5",
											"source": 6
										},
										{
											"begin": 10580,
											"end": 10641,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 10670,
											"end": 10674,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 10665,
											"end": 10668,
											"name": "DUP5",
											"source": 6
										},
										{
											"begin": 10661,
											"end": 10675,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 10654,
											"end": 10675,
											"name": "SWAP4",
											"source": 6
										},
										{
											"begin": 10654,
											"end": 10675,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 10530,
											"end": 10685,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 10514,
											"end": 10518,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 10509,
											"end": 10512,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 10505,
											"end": 10519,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 10498,
											"end": 10519,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 10498,
											"end": 10519,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 10454,
											"end": 10685,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "305"
										},
										{
											"begin": 10454,
											"end": 10685,
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 10454,
											"end": 10685,
											"name": "tag",
											"source": 6,
											"value": "307"
										},
										{
											"begin": 10454,
											"end": 10685,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 10458,
											"end": 10479,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 10072,
											"end": 10691,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 10072,
											"end": 10691,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 9959,
											"end": 10691,
											"name": "SWAP4",
											"source": 6
										},
										{
											"begin": 9959,
											"end": 10691,
											"name": "SWAP3",
											"source": 6
										},
										{
											"begin": 9959,
											"end": 10691,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 9959,
											"end": 10691,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 9959,
											"end": 10691,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 9959,
											"end": 10691,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 10714,
											"end": 11099,
											"name": "tag",
											"source": 6,
											"value": "175"
										},
										{
											"begin": 10714,
											"end": 11099,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 10796,
											"end": 10801,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 10845,
											"end": 10848,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 10838,
											"end": 10842,
											"name": "PUSH",
											"source": 6,
											"value": "1F"
										},
										{
											"begin": 10830,
											"end": 10836,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 10826,
											"end": 10843,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 10822,
											"end": 10849,
											"name": "SLT",
											"source": 6
										},
										{
											"begin": 10812,
											"end": 10934,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "310"
										},
										{
											"begin": 10812,
											"end": 10934,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 10853,
											"end": 10932,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "311"
										},
										{
											"begin": 10853,
											"end": 10932,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "168"
										},
										{
											"begin": 10853,
											"end": 10932,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 10853,
											"end": 10932,
											"name": "tag",
											"source": 6,
											"value": "311"
										},
										{
											"begin": 10853,
											"end": 10932,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 10812,
											"end": 10934,
											"name": "tag",
											"source": 6,
											"value": "310"
										},
										{
											"begin": 10812,
											"end": 10934,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 10963,
											"end": 10969,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 10957,
											"end": 10970,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 10988,
											"end": 11093,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "312"
										},
										{
											"begin": 11089,
											"end": 11092,
											"name": "DUP5",
											"source": 6
										},
										{
											"begin": 11081,
											"end": 11087,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 11074,
											"end": 11078,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 11066,
											"end": 11072,
											"name": "DUP7",
											"source": 6
										},
										{
											"begin": 11062,
											"end": 11079,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 10988,
											"end": 11093,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "174"
										},
										{
											"begin": 10988,
											"end": 11093,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 10988,
											"end": 11093,
											"name": "tag",
											"source": 6,
											"value": "312"
										},
										{
											"begin": 10988,
											"end": 11093,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 10979,
											"end": 11093,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 10979,
											"end": 11093,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 10802,
											"end": 11099,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 10714,
											"end": 11099,
											"name": "SWAP3",
											"source": 6
										},
										{
											"begin": 10714,
											"end": 11099,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 10714,
											"end": 11099,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 10714,
											"end": 11099,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 10714,
											"end": 11099,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 11105,
											"end": 11659,
											"name": "tag",
											"source": 6,
											"value": "63"
										},
										{
											"begin": 11105,
											"end": 11659,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 11200,
											"end": 11206,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 11249,
											"end": 11251,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 11237,
											"end": 11246,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 11228,
											"end": 11235,
											"name": "DUP5",
											"source": 6
										},
										{
											"begin": 11224,
											"end": 11247,
											"name": "SUB",
											"source": 6
										},
										{
											"begin": 11220,
											"end": 11252,
											"name": "SLT",
											"source": 6
										},
										{
											"begin": 11217,
											"end": 11336,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 11217,
											"end": 11336,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "314"
										},
										{
											"begin": 11217,
											"end": 11336,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 11255,
											"end": 11334,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "315"
										},
										{
											"begin": 11255,
											"end": 11334,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "145"
										},
										{
											"begin": 11255,
											"end": 11334,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 11255,
											"end": 11334,
											"name": "tag",
											"source": 6,
											"value": "315"
										},
										{
											"begin": 11255,
											"end": 11334,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 11217,
											"end": 11336,
											"name": "tag",
											"source": 6,
											"value": "314"
										},
										{
											"begin": 11217,
											"end": 11336,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 11396,
											"end": 11397,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 11385,
											"end": 11394,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 11381,
											"end": 11398,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 11375,
											"end": 11399,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 11426,
											"end": 11444,
											"name": "PUSH",
											"source": 6,
											"value": "FFFFFFFFFFFFFFFF"
										},
										{
											"begin": 11418,
											"end": 11424,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 11415,
											"end": 11445,
											"name": "GT",
											"source": 6
										},
										{
											"begin": 11412,
											"end": 11529,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 11412,
											"end": 11529,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "316"
										},
										{
											"begin": 11412,
											"end": 11529,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 11448,
											"end": 11527,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "317"
										},
										{
											"begin": 11448,
											"end": 11527,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "146"
										},
										{
											"begin": 11448,
											"end": 11527,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 11448,
											"end": 11527,
											"name": "tag",
											"source": 6,
											"value": "317"
										},
										{
											"begin": 11448,
											"end": 11527,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 11412,
											"end": 11529,
											"name": "tag",
											"source": 6,
											"value": "316"
										},
										{
											"begin": 11412,
											"end": 11529,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 11553,
											"end": 11642,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "318"
										},
										{
											"begin": 11634,
											"end": 11641,
											"name": "DUP5",
											"source": 6
										},
										{
											"begin": 11625,
											"end": 11631,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 11614,
											"end": 11623,
											"name": "DUP6",
											"source": 6
										},
										{
											"begin": 11610,
											"end": 11632,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 11553,
											"end": 11642,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "175"
										},
										{
											"begin": 11553,
											"end": 11642,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 11553,
											"end": 11642,
											"name": "tag",
											"source": 6,
											"value": "318"
										},
										{
											"begin": 11553,
											"end": 11642,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 11543,
											"end": 11642,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 11543,
											"end": 11642,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 11346,
											"end": 11652,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 11105,
											"end": 11659,
											"name": "SWAP3",
											"source": 6
										},
										{
											"begin": 11105,
											"end": 11659,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 11105,
											"end": 11659,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 11105,
											"end": 11659,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 11105,
											"end": 11659,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 11665,
											"end": 12472,
											"name": "tag",
											"source": 6,
											"value": "68"
										},
										{
											"begin": 11665,
											"end": 12472,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 11914,
											"end": 11918,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 11952,
											"end": 11955,
											"name": "PUSH",
											"source": 6,
											"value": "C0"
										},
										{
											"begin": 11941,
											"end": 11950,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 11937,
											"end": 11956,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 11929,
											"end": 11956,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 11929,
											"end": 11956,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 11966,
											"end": 12037,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "320"
										},
										{
											"begin": 12034,
											"end": 12035,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 12023,
											"end": 12032,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 12019,
											"end": 12036,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 12010,
											"end": 12016,
											"name": "DUP10",
											"source": 6
										},
										{
											"begin": 11966,
											"end": 12037,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "154"
										},
										{
											"begin": 11966,
											"end": 12037,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 11966,
											"end": 12037,
											"name": "tag",
											"source": 6,
											"value": "320"
										},
										{
											"begin": 11966,
											"end": 12037,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 12047,
											"end": 12119,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "321"
										},
										{
											"begin": 12115,
											"end": 12117,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 12104,
											"end": 12113,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 12100,
											"end": 12118,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 12091,
											"end": 12097,
											"name": "DUP9",
											"source": 6
										},
										{
											"begin": 12047,
											"end": 12119,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "155"
										},
										{
											"begin": 12047,
											"end": 12119,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 12047,
											"end": 12119,
											"name": "tag",
											"source": 6,
											"value": "321"
										},
										{
											"begin": 12047,
											"end": 12119,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 12129,
											"end": 12209,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "322"
										},
										{
											"begin": 12205,
											"end": 12207,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 12194,
											"end": 12203,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 12190,
											"end": 12208,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 12181,
											"end": 12187,
											"name": "DUP8",
											"source": 6
										},
										{
											"begin": 12129,
											"end": 12209,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "159"
										},
										{
											"begin": 12129,
											"end": 12209,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 12129,
											"end": 12209,
											"name": "tag",
											"source": 6,
											"value": "322"
										},
										{
											"begin": 12129,
											"end": 12209,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 12219,
											"end": 12299,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "323"
										},
										{
											"begin": 12295,
											"end": 12297,
											"name": "PUSH",
											"source": 6,
											"value": "60"
										},
										{
											"begin": 12284,
											"end": 12293,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 12280,
											"end": 12298,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 12271,
											"end": 12277,
											"name": "DUP7",
											"source": 6
										},
										{
											"begin": 12219,
											"end": 12299,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "159"
										},
										{
											"begin": 12219,
											"end": 12299,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 12219,
											"end": 12299,
											"name": "tag",
											"source": 6,
											"value": "323"
										},
										{
											"begin": 12219,
											"end": 12299,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 12309,
											"end": 12382,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "324"
										},
										{
											"begin": 12377,
											"end": 12380,
											"name": "PUSH",
											"source": 6,
											"value": "80"
										},
										{
											"begin": 12366,
											"end": 12375,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 12362,
											"end": 12381,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 12353,
											"end": 12359,
											"name": "DUP6",
											"source": 6
										},
										{
											"begin": 12309,
											"end": 12382,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "154"
										},
										{
											"begin": 12309,
											"end": 12382,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 12309,
											"end": 12382,
											"name": "tag",
											"source": 6,
											"value": "324"
										},
										{
											"begin": 12309,
											"end": 12382,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 12392,
											"end": 12465,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "325"
										},
										{
											"begin": 12460,
											"end": 12463,
											"name": "PUSH",
											"source": 6,
											"value": "A0"
										},
										{
											"begin": 12449,
											"end": 12458,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 12445,
											"end": 12464,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 12436,
											"end": 12442,
											"name": "DUP5",
											"source": 6
										},
										{
											"begin": 12392,
											"end": 12465,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "155"
										},
										{
											"begin": 12392,
											"end": 12465,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 12392,
											"end": 12465,
											"name": "tag",
											"source": 6,
											"value": "325"
										},
										{
											"begin": 12392,
											"end": 12465,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 11665,
											"end": 12472,
											"name": "SWAP8",
											"source": 6
										},
										{
											"begin": 11665,
											"end": 12472,
											"name": "SWAP7",
											"source": 6
										},
										{
											"begin": 11665,
											"end": 12472,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 11665,
											"end": 12472,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 11665,
											"end": 12472,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 11665,
											"end": 12472,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 11665,
											"end": 12472,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 11665,
											"end": 12472,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 11665,
											"end": 12472,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 11665,
											"end": 12472,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 12478,
											"end": 13182,
											"name": "tag",
											"source": 6,
											"value": "81"
										},
										{
											"begin": 12478,
											"end": 13182,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 12705,
											"end": 12709,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 12743,
											"end": 12746,
											"name": "PUSH",
											"source": 6,
											"value": "80"
										},
										{
											"begin": 12732,
											"end": 12741,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 12728,
											"end": 12747,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 12720,
											"end": 12747,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 12720,
											"end": 12747,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 12757,
											"end": 12828,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "327"
										},
										{
											"begin": 12825,
											"end": 12826,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 12814,
											"end": 12823,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 12810,
											"end": 12827,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 12801,
											"end": 12807,
											"name": "DUP8",
											"source": 6
										},
										{
											"begin": 12757,
											"end": 12828,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "155"
										},
										{
											"begin": 12757,
											"end": 12828,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 12757,
											"end": 12828,
											"name": "tag",
											"source": 6,
											"value": "327"
										},
										{
											"begin": 12757,
											"end": 12828,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 12875,
											"end": 12884,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 12869,
											"end": 12873,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 12865,
											"end": 12885,
											"name": "SUB",
											"source": 6
										},
										{
											"begin": 12860,
											"end": 12862,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 12849,
											"end": 12858,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 12845,
											"end": 12863,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 12838,
											"end": 12886,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 12903,
											"end": 13011,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "328"
										},
										{
											"begin": 13006,
											"end": 13010,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 12997,
											"end": 13003,
											"name": "DUP7",
											"source": 6
										},
										{
											"begin": 12903,
											"end": 13011,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "167"
										},
										{
											"begin": 12903,
											"end": 13011,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 12903,
											"end": 13011,
											"name": "tag",
											"source": 6,
											"value": "328"
										},
										{
											"begin": 12903,
											"end": 13011,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 12895,
											"end": 13011,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 12895,
											"end": 13011,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 13021,
											"end": 13093,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "329"
										},
										{
											"begin": 13089,
											"end": 13091,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 13078,
											"end": 13087,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 13074,
											"end": 13092,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 13065,
											"end": 13071,
											"name": "DUP6",
											"source": 6
										},
										{
											"begin": 13021,
											"end": 13093,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "154"
										},
										{
											"begin": 13021,
											"end": 13093,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 13021,
											"end": 13093,
											"name": "tag",
											"source": 6,
											"value": "329"
										},
										{
											"begin": 13021,
											"end": 13093,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 13103,
											"end": 13175,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "330"
										},
										{
											"begin": 13171,
											"end": 13173,
											"name": "PUSH",
											"source": 6,
											"value": "60"
										},
										{
											"begin": 13160,
											"end": 13169,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 13156,
											"end": 13174,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 13147,
											"end": 13153,
											"name": "DUP5",
											"source": 6
										},
										{
											"begin": 13103,
											"end": 13175,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "155"
										},
										{
											"begin": 13103,
											"end": 13175,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 13103,
											"end": 13175,
											"name": "tag",
											"source": 6,
											"value": "330"
										},
										{
											"begin": 13103,
											"end": 13175,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 12478,
											"end": 13182,
											"name": "SWAP6",
											"source": 6
										},
										{
											"begin": 12478,
											"end": 13182,
											"name": "SWAP5",
											"source": 6
										},
										{
											"begin": 12478,
											"end": 13182,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 12478,
											"end": 13182,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 12478,
											"end": 13182,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 12478,
											"end": 13182,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 12478,
											"end": 13182,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 12478,
											"end": 13182,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 13188,
											"end": 13630,
											"name": "tag",
											"source": 6,
											"value": "88"
										},
										{
											"begin": 13188,
											"end": 13630,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 13337,
											"end": 13341,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 13375,
											"end": 13377,
											"name": "PUSH",
											"source": 6,
											"value": "60"
										},
										{
											"begin": 13364,
											"end": 13373,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 13360,
											"end": 13378,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 13352,
											"end": 13378,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 13352,
											"end": 13378,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 13388,
											"end": 13459,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "332"
										},
										{
											"begin": 13456,
											"end": 13457,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 13445,
											"end": 13454,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 13441,
											"end": 13458,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 13432,
											"end": 13438,
											"name": "DUP7",
											"source": 6
										},
										{
											"begin": 13388,
											"end": 13459,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "154"
										},
										{
											"begin": 13388,
											"end": 13459,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 13388,
											"end": 13459,
											"name": "tag",
											"source": 6,
											"value": "332"
										},
										{
											"begin": 13388,
											"end": 13459,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 13469,
											"end": 13541,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "333"
										},
										{
											"begin": 13537,
											"end": 13539,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 13526,
											"end": 13535,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 13522,
											"end": 13540,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 13513,
											"end": 13519,
											"name": "DUP6",
											"source": 6
										},
										{
											"begin": 13469,
											"end": 13541,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "154"
										},
										{
											"begin": 13469,
											"end": 13541,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 13469,
											"end": 13541,
											"name": "tag",
											"source": 6,
											"value": "333"
										},
										{
											"begin": 13469,
											"end": 13541,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 13551,
											"end": 13623,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "334"
										},
										{
											"begin": 13619,
											"end": 13621,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 13608,
											"end": 13617,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 13604,
											"end": 13622,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 13595,
											"end": 13601,
											"name": "DUP5",
											"source": 6
										},
										{
											"begin": 13551,
											"end": 13623,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "155"
										},
										{
											"begin": 13551,
											"end": 13623,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 13551,
											"end": 13623,
											"name": "tag",
											"source": 6,
											"value": "334"
										},
										{
											"begin": 13551,
											"end": 13623,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 13188,
											"end": 13630,
											"name": "SWAP5",
											"source": 6
										},
										{
											"begin": 13188,
											"end": 13630,
											"name": "SWAP4",
											"source": 6
										},
										{
											"begin": 13188,
											"end": 13630,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 13188,
											"end": 13630,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 13188,
											"end": 13630,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 13188,
											"end": 13630,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 13188,
											"end": 13630,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 13636,
											"end": 13968,
											"name": "tag",
											"source": 6,
											"value": "93"
										},
										{
											"begin": 13636,
											"end": 13968,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 13757,
											"end": 13761,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 13795,
											"end": 13797,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 13784,
											"end": 13793,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 13780,
											"end": 13798,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 13772,
											"end": 13798,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 13772,
											"end": 13798,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 13808,
											"end": 13879,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "336"
										},
										{
											"begin": 13876,
											"end": 13877,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 13865,
											"end": 13874,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 13861,
											"end": 13878,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 13852,
											"end": 13858,
											"name": "DUP6",
											"source": 6
										},
										{
											"begin": 13808,
											"end": 13879,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "154"
										},
										{
											"begin": 13808,
											"end": 13879,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 13808,
											"end": 13879,
											"name": "tag",
											"source": 6,
											"value": "336"
										},
										{
											"begin": 13808,
											"end": 13879,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 13889,
											"end": 13961,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "337"
										},
										{
											"begin": 13957,
											"end": 13959,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 13946,
											"end": 13955,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 13942,
											"end": 13960,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 13933,
											"end": 13939,
											"name": "DUP5",
											"source": 6
										},
										{
											"begin": 13889,
											"end": 13961,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "154"
										},
										{
											"begin": 13889,
											"end": 13961,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 13889,
											"end": 13961,
											"name": "tag",
											"source": 6,
											"value": "337"
										},
										{
											"begin": 13889,
											"end": 13961,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 13636,
											"end": 13968,
											"name": "SWAP4",
											"source": 6
										},
										{
											"begin": 13636,
											"end": 13968,
											"name": "SWAP3",
											"source": 6
										},
										{
											"begin": 13636,
											"end": 13968,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 13636,
											"end": 13968,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 13636,
											"end": 13968,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 13636,
											"end": 13968,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 13974,
											"end": 14325,
											"name": "tag",
											"source": 6,
											"value": "97"
										},
										{
											"begin": 13974,
											"end": 14325,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 14044,
											"end": 14050,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 14093,
											"end": 14095,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 14081,
											"end": 14090,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 14072,
											"end": 14079,
											"name": "DUP5",
											"source": 6
										},
										{
											"begin": 14068,
											"end": 14091,
											"name": "SUB",
											"source": 6
										},
										{
											"begin": 14064,
											"end": 14096,
											"name": "SLT",
											"source": 6
										},
										{
											"begin": 14061,
											"end": 14180,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 14061,
											"end": 14180,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "339"
										},
										{
											"begin": 14061,
											"end": 14180,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 14099,
											"end": 14178,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "340"
										},
										{
											"begin": 14099,
											"end": 14178,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "145"
										},
										{
											"begin": 14099,
											"end": 14178,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 14099,
											"end": 14178,
											"name": "tag",
											"source": 6,
											"value": "340"
										},
										{
											"begin": 14099,
											"end": 14178,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 14061,
											"end": 14180,
											"name": "tag",
											"source": 6,
											"value": "339"
										},
										{
											"begin": 14061,
											"end": 14180,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 14219,
											"end": 14220,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 14244,
											"end": 14308,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "341"
										},
										{
											"begin": 14300,
											"end": 14307,
											"name": "DUP5",
											"source": 6
										},
										{
											"begin": 14291,
											"end": 14297,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 14280,
											"end": 14289,
											"name": "DUP6",
											"source": 6
										},
										{
											"begin": 14276,
											"end": 14298,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 14244,
											"end": 14308,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "160"
										},
										{
											"begin": 14244,
											"end": 14308,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 14244,
											"end": 14308,
											"name": "tag",
											"source": 6,
											"value": "341"
										},
										{
											"begin": 14244,
											"end": 14308,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 14234,
											"end": 14308,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 14234,
											"end": 14308,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 14190,
											"end": 14318,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 13974,
											"end": 14325,
											"name": "SWAP3",
											"source": 6
										},
										{
											"begin": 13974,
											"end": 14325,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 13974,
											"end": 14325,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 13974,
											"end": 14325,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 13974,
											"end": 14325,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 14331,
											"end": 14500,
											"name": "tag",
											"source": 6,
											"value": "176"
										},
										{
											"begin": 14331,
											"end": 14500,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 14415,
											"end": 14426,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 14449,
											"end": 14455,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 14444,
											"end": 14447,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 14437,
											"end": 14456,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 14489,
											"end": 14493,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 14484,
											"end": 14487,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 14480,
											"end": 14494,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 14465,
											"end": 14494,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 14465,
											"end": 14494,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 14331,
											"end": 14500,
											"name": "SWAP3",
											"source": 6
										},
										{
											"begin": 14331,
											"end": 14500,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 14331,
											"end": 14500,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 14331,
											"end": 14500,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 14331,
											"end": 14500,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 14506,
											"end": 14747,
											"name": "tag",
											"source": 6,
											"value": "177"
										},
										{
											"begin": 14506,
											"end": 14747,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 14646,
											"end": 14680,
											"name": "PUSH",
											"source": 6,
											"value": "5361666545524332303A20617070726F76652066726F6D206E6F6E2D7A65726F"
										},
										{
											"begin": 14642,
											"end": 14643,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 14634,
											"end": 14640,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 14630,
											"end": 14644,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 14623,
											"end": 14681,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 14715,
											"end": 14739,
											"name": "PUSH",
											"source": 6,
											"value": "20746F206E6F6E2D7A65726F20616C6C6F77616E636500000000000000000000"
										},
										{
											"begin": 14710,
											"end": 14712,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 14702,
											"end": 14708,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 14698,
											"end": 14713,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 14691,
											"end": 14740,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 14506,
											"end": 14747,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 14506,
											"end": 14747,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 14753,
											"end": 15119,
											"name": "tag",
											"source": 6,
											"value": "178"
										},
										{
											"begin": 14753,
											"end": 15119,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 14895,
											"end": 14898,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 14916,
											"end": 14983,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "345"
										},
										{
											"begin": 14980,
											"end": 14982,
											"name": "PUSH",
											"source": 6,
											"value": "36"
										},
										{
											"begin": 14975,
											"end": 14978,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 14916,
											"end": 14983,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "176"
										},
										{
											"begin": 14916,
											"end": 14983,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 14916,
											"end": 14983,
											"name": "tag",
											"source": 6,
											"value": "345"
										},
										{
											"begin": 14916,
											"end": 14983,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 14909,
											"end": 14983,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 14909,
											"end": 14983,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 14992,
											"end": 15085,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "346"
										},
										{
											"begin": 15081,
											"end": 15084,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 14992,
											"end": 15085,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "177"
										},
										{
											"begin": 14992,
											"end": 15085,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 14992,
											"end": 15085,
											"name": "tag",
											"source": 6,
											"value": "346"
										},
										{
											"begin": 14992,
											"end": 15085,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 15110,
											"end": 15112,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 15105,
											"end": 15108,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 15101,
											"end": 15113,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 15094,
											"end": 15113,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 15094,
											"end": 15113,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 14753,
											"end": 15119,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 14753,
											"end": 15119,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 14753,
											"end": 15119,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 14753,
											"end": 15119,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 15125,
											"end": 15544,
											"name": "tag",
											"source": 6,
											"value": "100"
										},
										{
											"begin": 15125,
											"end": 15544,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 15291,
											"end": 15295,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 15329,
											"end": 15331,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 15318,
											"end": 15327,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 15314,
											"end": 15332,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 15306,
											"end": 15332,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 15306,
											"end": 15332,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 15378,
											"end": 15387,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 15372,
											"end": 15376,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 15368,
											"end": 15388,
											"name": "SUB",
											"source": 6
										},
										{
											"begin": 15364,
											"end": 15365,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 15353,
											"end": 15362,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 15349,
											"end": 15366,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 15342,
											"end": 15389,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 15406,
											"end": 15537,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "348"
										},
										{
											"begin": 15532,
											"end": 15536,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 15406,
											"end": 15537,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "178"
										},
										{
											"begin": 15406,
											"end": 15537,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 15406,
											"end": 15537,
											"name": "tag",
											"source": 6,
											"value": "348"
										},
										{
											"begin": 15406,
											"end": 15537,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 15398,
											"end": 15537,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 15398,
											"end": 15537,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 15125,
											"end": 15544,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 15125,
											"end": 15544,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 15125,
											"end": 15544,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 15125,
											"end": 15544,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 15550,
											"end": 15882,
											"name": "tag",
											"source": 6,
											"value": "103"
										},
										{
											"begin": 15550,
											"end": 15882,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 15671,
											"end": 15675,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 15709,
											"end": 15711,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 15698,
											"end": 15707,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 15694,
											"end": 15712,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 15686,
											"end": 15712,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 15686,
											"end": 15712,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 15722,
											"end": 15793,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "350"
										},
										{
											"begin": 15790,
											"end": 15791,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 15779,
											"end": 15788,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 15775,
											"end": 15792,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 15766,
											"end": 15772,
											"name": "DUP6",
											"source": 6
										},
										{
											"begin": 15722,
											"end": 15793,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "154"
										},
										{
											"begin": 15722,
											"end": 15793,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 15722,
											"end": 15793,
											"name": "tag",
											"source": 6,
											"value": "350"
										},
										{
											"begin": 15722,
											"end": 15793,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 15803,
											"end": 15875,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "351"
										},
										{
											"begin": 15871,
											"end": 15873,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 15860,
											"end": 15869,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 15856,
											"end": 15874,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 15847,
											"end": 15853,
											"name": "DUP5",
											"source": 6
										},
										{
											"begin": 15803,
											"end": 15875,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "155"
										},
										{
											"begin": 15803,
											"end": 15875,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 15803,
											"end": 15875,
											"name": "tag",
											"source": 6,
											"value": "351"
										},
										{
											"begin": 15803,
											"end": 15875,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 15550,
											"end": 15882,
											"name": "SWAP4",
											"source": 6
										},
										{
											"begin": 15550,
											"end": 15882,
											"name": "SWAP3",
											"source": 6
										},
										{
											"begin": 15550,
											"end": 15882,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 15550,
											"end": 15882,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 15550,
											"end": 15882,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 15550,
											"end": 15882,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 15888,
											"end": 15978,
											"name": "tag",
											"source": 6,
											"value": "179"
										},
										{
											"begin": 15888,
											"end": 15978,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 15922,
											"end": 15929,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 15965,
											"end": 15970,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 15958,
											"end": 15971,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 15951,
											"end": 15972,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 15940,
											"end": 15972,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 15940,
											"end": 15972,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 15888,
											"end": 15978,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 15888,
											"end": 15978,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 15888,
											"end": 15978,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 15888,
											"end": 15978,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 15984,
											"end": 16100,
											"name": "tag",
											"source": 6,
											"value": "180"
										},
										{
											"begin": 15984,
											"end": 16100,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 16054,
											"end": 16075,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "354"
										},
										{
											"begin": 16069,
											"end": 16074,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 16054,
											"end": 16075,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "179"
										},
										{
											"begin": 16054,
											"end": 16075,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 16054,
											"end": 16075,
											"name": "tag",
											"source": 6,
											"value": "354"
										},
										{
											"begin": 16054,
											"end": 16075,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 16047,
											"end": 16052,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 16044,
											"end": 16076,
											"name": "EQ",
											"source": 6
										},
										{
											"begin": 16034,
											"end": 16094,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "355"
										},
										{
											"begin": 16034,
											"end": 16094,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 16090,
											"end": 16091,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 16087,
											"end": 16088,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 16080,
											"end": 16092,
											"name": "REVERT",
											"source": 6
										},
										{
											"begin": 16034,
											"end": 16094,
											"name": "tag",
											"source": 6,
											"value": "355"
										},
										{
											"begin": 16034,
											"end": 16094,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 15984,
											"end": 16100,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 15984,
											"end": 16100,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 16106,
											"end": 16243,
											"name": "tag",
											"source": 6,
											"value": "181"
										},
										{
											"begin": 16106,
											"end": 16243,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 16160,
											"end": 16165,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 16191,
											"end": 16197,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 16185,
											"end": 16198,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 16176,
											"end": 16198,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 16176,
											"end": 16198,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 16207,
											"end": 16237,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "357"
										},
										{
											"begin": 16231,
											"end": 16236,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 16207,
											"end": 16237,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "180"
										},
										{
											"begin": 16207,
											"end": 16237,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 16207,
											"end": 16237,
											"name": "tag",
											"source": 6,
											"value": "357"
										},
										{
											"begin": 16207,
											"end": 16237,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 16106,
											"end": 16243,
											"name": "SWAP3",
											"source": 6
										},
										{
											"begin": 16106,
											"end": 16243,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 16106,
											"end": 16243,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 16106,
											"end": 16243,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 16106,
											"end": 16243,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 16249,
											"end": 16594,
											"name": "tag",
											"source": 6,
											"value": "109"
										},
										{
											"begin": 16249,
											"end": 16594,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 16316,
											"end": 16322,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 16365,
											"end": 16367,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 16353,
											"end": 16362,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 16344,
											"end": 16351,
											"name": "DUP5",
											"source": 6
										},
										{
											"begin": 16340,
											"end": 16363,
											"name": "SUB",
											"source": 6
										},
										{
											"begin": 16336,
											"end": 16368,
											"name": "SLT",
											"source": 6
										},
										{
											"begin": 16333,
											"end": 16452,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 16333,
											"end": 16452,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "359"
										},
										{
											"begin": 16333,
											"end": 16452,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 16371,
											"end": 16450,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "360"
										},
										{
											"begin": 16371,
											"end": 16450,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "145"
										},
										{
											"begin": 16371,
											"end": 16450,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 16371,
											"end": 16450,
											"name": "tag",
											"source": 6,
											"value": "360"
										},
										{
											"begin": 16371,
											"end": 16450,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 16333,
											"end": 16452,
											"name": "tag",
											"source": 6,
											"value": "359"
										},
										{
											"begin": 16333,
											"end": 16452,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 16491,
											"end": 16492,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 16516,
											"end": 16577,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "361"
										},
										{
											"begin": 16569,
											"end": 16576,
											"name": "DUP5",
											"source": 6
										},
										{
											"begin": 16560,
											"end": 16566,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 16549,
											"end": 16558,
											"name": "DUP6",
											"source": 6
										},
										{
											"begin": 16545,
											"end": 16567,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 16516,
											"end": 16577,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "181"
										},
										{
											"begin": 16516,
											"end": 16577,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 16516,
											"end": 16577,
											"name": "tag",
											"source": 6,
											"value": "361"
										},
										{
											"begin": 16516,
											"end": 16577,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 16506,
											"end": 16577,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 16506,
											"end": 16577,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 16462,
											"end": 16587,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 16249,
											"end": 16594,
											"name": "SWAP3",
											"source": 6
										},
										{
											"begin": 16249,
											"end": 16594,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 16249,
											"end": 16594,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 16249,
											"end": 16594,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 16249,
											"end": 16594,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 16600,
											"end": 16829,
											"name": "tag",
											"source": 6,
											"value": "182"
										},
										{
											"begin": 16600,
											"end": 16829,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 16740,
											"end": 16774,
											"name": "PUSH",
											"source": 6,
											"value": "5361666545524332303A204552433230206F7065726174696F6E20646964206E"
										},
										{
											"begin": 16736,
											"end": 16737,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 16728,
											"end": 16734,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 16724,
											"end": 16738,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 16717,
											"end": 16775,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 16809,
											"end": 16821,
											"name": "PUSH",
											"source": 6,
											"value": "6F74207375636365656400000000000000000000000000000000000000000000"
										},
										{
											"begin": 16804,
											"end": 16806,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 16796,
											"end": 16802,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 16792,
											"end": 16807,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 16785,
											"end": 16822,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 16600,
											"end": 16829,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 16600,
											"end": 16829,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 16835,
											"end": 17201,
											"name": "tag",
											"source": 6,
											"value": "183"
										},
										{
											"begin": 16835,
											"end": 17201,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 16977,
											"end": 16980,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 16998,
											"end": 17065,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "364"
										},
										{
											"begin": 17062,
											"end": 17064,
											"name": "PUSH",
											"source": 6,
											"value": "2A"
										},
										{
											"begin": 17057,
											"end": 17060,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 16998,
											"end": 17065,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "176"
										},
										{
											"begin": 16998,
											"end": 17065,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 16998,
											"end": 17065,
											"name": "tag",
											"source": 6,
											"value": "364"
										},
										{
											"begin": 16998,
											"end": 17065,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 16991,
											"end": 17065,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 16991,
											"end": 17065,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 17074,
											"end": 17167,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "365"
										},
										{
											"begin": 17163,
											"end": 17166,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 17074,
											"end": 17167,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "182"
										},
										{
											"begin": 17074,
											"end": 17167,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 17074,
											"end": 17167,
											"name": "tag",
											"source": 6,
											"value": "365"
										},
										{
											"begin": 17074,
											"end": 17167,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 17192,
											"end": 17194,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 17187,
											"end": 17190,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 17183,
											"end": 17195,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 17176,
											"end": 17195,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 17176,
											"end": 17195,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 16835,
											"end": 17201,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 16835,
											"end": 17201,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 16835,
											"end": 17201,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 16835,
											"end": 17201,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 17207,
											"end": 17626,
											"name": "tag",
											"source": 6,
											"value": "112"
										},
										{
											"begin": 17207,
											"end": 17626,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 17373,
											"end": 17377,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 17411,
											"end": 17413,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 17400,
											"end": 17409,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 17396,
											"end": 17414,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 17388,
											"end": 17414,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 17388,
											"end": 17414,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 17460,
											"end": 17469,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 17454,
											"end": 17458,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 17450,
											"end": 17470,
											"name": "SUB",
											"source": 6
										},
										{
											"begin": 17446,
											"end": 17447,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 17435,
											"end": 17444,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 17431,
											"end": 17448,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 17424,
											"end": 17471,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 17488,
											"end": 17619,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "367"
										},
										{
											"begin": 17614,
											"end": 17618,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 17488,
											"end": 17619,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "183"
										},
										{
											"begin": 17488,
											"end": 17619,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 17488,
											"end": 17619,
											"name": "tag",
											"source": 6,
											"value": "367"
										},
										{
											"begin": 17488,
											"end": 17619,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 17480,
											"end": 17619,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 17480,
											"end": 17619,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 17207,
											"end": 17626,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 17207,
											"end": 17626,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 17207,
											"end": 17626,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 17207,
											"end": 17626,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 17632,
											"end": 17857,
											"name": "tag",
											"source": 6,
											"value": "184"
										},
										{
											"begin": 17632,
											"end": 17857,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 17772,
											"end": 17806,
											"name": "PUSH",
											"source": 6,
											"value": "416464726573733A20696E73756666696369656E742062616C616E636520666F"
										},
										{
											"begin": 17768,
											"end": 17769,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 17760,
											"end": 17766,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 17756,
											"end": 17770,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 17749,
											"end": 17807,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 17841,
											"end": 17849,
											"name": "PUSH",
											"source": 6,
											"value": "722063616C6C0000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 17836,
											"end": 17838,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 17828,
											"end": 17834,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 17824,
											"end": 17839,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 17817,
											"end": 17850,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 17632,
											"end": 17857,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 17632,
											"end": 17857,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 17863,
											"end": 18229,
											"name": "tag",
											"source": 6,
											"value": "185"
										},
										{
											"begin": 17863,
											"end": 18229,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 18005,
											"end": 18008,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 18026,
											"end": 18093,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "370"
										},
										{
											"begin": 18090,
											"end": 18092,
											"name": "PUSH",
											"source": 6,
											"value": "26"
										},
										{
											"begin": 18085,
											"end": 18088,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 18026,
											"end": 18093,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "176"
										},
										{
											"begin": 18026,
											"end": 18093,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 18026,
											"end": 18093,
											"name": "tag",
											"source": 6,
											"value": "370"
										},
										{
											"begin": 18026,
											"end": 18093,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 18019,
											"end": 18093,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 18019,
											"end": 18093,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 18102,
											"end": 18195,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "371"
										},
										{
											"begin": 18191,
											"end": 18194,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 18102,
											"end": 18195,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "184"
										},
										{
											"begin": 18102,
											"end": 18195,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 18102,
											"end": 18195,
											"name": "tag",
											"source": 6,
											"value": "371"
										},
										{
											"begin": 18102,
											"end": 18195,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 18220,
											"end": 18222,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 18215,
											"end": 18218,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 18211,
											"end": 18223,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 18204,
											"end": 18223,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 18204,
											"end": 18223,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 17863,
											"end": 18229,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 17863,
											"end": 18229,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 17863,
											"end": 18229,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 17863,
											"end": 18229,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 18235,
											"end": 18654,
											"name": "tag",
											"source": 6,
											"value": "119"
										},
										{
											"begin": 18235,
											"end": 18654,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 18401,
											"end": 18405,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 18439,
											"end": 18441,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 18428,
											"end": 18437,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 18424,
											"end": 18442,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 18416,
											"end": 18442,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 18416,
											"end": 18442,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 18488,
											"end": 18497,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 18482,
											"end": 18486,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 18478,
											"end": 18498,
											"name": "SUB",
											"source": 6
										},
										{
											"begin": 18474,
											"end": 18475,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 18463,
											"end": 18472,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 18459,
											"end": 18476,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 18452,
											"end": 18499,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 18516,
											"end": 18647,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "373"
										},
										{
											"begin": 18642,
											"end": 18646,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 18516,
											"end": 18647,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "185"
										},
										{
											"begin": 18516,
											"end": 18647,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 18516,
											"end": 18647,
											"name": "tag",
											"source": 6,
											"value": "373"
										},
										{
											"begin": 18516,
											"end": 18647,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 18508,
											"end": 18647,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 18508,
											"end": 18647,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 18235,
											"end": 18654,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 18235,
											"end": 18654,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 18235,
											"end": 18654,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 18235,
											"end": 18654,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 18660,
											"end": 18758,
											"name": "tag",
											"source": 6,
											"value": "186"
										},
										{
											"begin": 18660,
											"end": 18758,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 18711,
											"end": 18717,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 18745,
											"end": 18750,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 18739,
											"end": 18751,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 18729,
											"end": 18751,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 18729,
											"end": 18751,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 18660,
											"end": 18758,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 18660,
											"end": 18758,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 18660,
											"end": 18758,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 18660,
											"end": 18758,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 18764,
											"end": 18911,
											"name": "tag",
											"source": 6,
											"value": "187"
										},
										{
											"begin": 18764,
											"end": 18911,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 18865,
											"end": 18876,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 18902,
											"end": 18905,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 18887,
											"end": 18905,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 18887,
											"end": 18905,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 18764,
											"end": 18911,
											"name": "SWAP3",
											"source": 6
										},
										{
											"begin": 18764,
											"end": 18911,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 18764,
											"end": 18911,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 18764,
											"end": 18911,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 18764,
											"end": 18911,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 18917,
											"end": 19163,
											"name": "tag",
											"source": 6,
											"value": "188"
										},
										{
											"begin": 18917,
											"end": 19163,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 18998,
											"end": 18999,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 19008,
											"end": 19121,
											"name": "tag",
											"source": 6,
											"value": "377"
										},
										{
											"begin": 19008,
											"end": 19121,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 19022,
											"end": 19028,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 19019,
											"end": 19020,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 19016,
											"end": 19029,
											"name": "LT",
											"source": 6
										},
										{
											"begin": 19008,
											"end": 19121,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 19008,
											"end": 19121,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "379"
										},
										{
											"begin": 19008,
											"end": 19121,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 19107,
											"end": 19108,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 19102,
											"end": 19105,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 19098,
											"end": 19109,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 19092,
											"end": 19110,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 19088,
											"end": 19089,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 19083,
											"end": 19086,
											"name": "DUP5",
											"source": 6
										},
										{
											"begin": 19079,
											"end": 19090,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 19072,
											"end": 19111,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 19044,
											"end": 19046,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 19041,
											"end": 19042,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 19037,
											"end": 19047,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 19032,
											"end": 19047,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 19032,
											"end": 19047,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 19008,
											"end": 19121,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "377"
										},
										{
											"begin": 19008,
											"end": 19121,
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 19008,
											"end": 19121,
											"name": "tag",
											"source": 6,
											"value": "379"
										},
										{
											"begin": 19008,
											"end": 19121,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 19155,
											"end": 19156,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 19146,
											"end": 19152,
											"name": "DUP5",
											"source": 6
										},
										{
											"begin": 19141,
											"end": 19144,
											"name": "DUP5",
											"source": 6
										},
										{
											"begin": 19137,
											"end": 19153,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 19130,
											"end": 19157,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 18979,
											"end": 19163,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 18917,
											"end": 19163,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 18917,
											"end": 19163,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 18917,
											"end": 19163,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 18917,
											"end": 19163,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 19169,
											"end": 19555,
											"name": "tag",
											"source": 6,
											"value": "189"
										},
										{
											"begin": 19169,
											"end": 19555,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 19273,
											"end": 19276,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 19301,
											"end": 19339,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "381"
										},
										{
											"begin": 19333,
											"end": 19338,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 19301,
											"end": 19339,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "186"
										},
										{
											"begin": 19301,
											"end": 19339,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 19301,
											"end": 19339,
											"name": "tag",
											"source": 6,
											"value": "381"
										},
										{
											"begin": 19301,
											"end": 19339,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 19355,
											"end": 19443,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "382"
										},
										{
											"begin": 19436,
											"end": 19442,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 19431,
											"end": 19434,
											"name": "DUP6",
											"source": 6
										},
										{
											"begin": 19355,
											"end": 19443,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "187"
										},
										{
											"begin": 19355,
											"end": 19443,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 19355,
											"end": 19443,
											"name": "tag",
											"source": 6,
											"value": "382"
										},
										{
											"begin": 19355,
											"end": 19443,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 19348,
											"end": 19443,
											"name": "SWAP4",
											"source": 6
										},
										{
											"begin": 19348,
											"end": 19443,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 19452,
											"end": 19517,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "383"
										},
										{
											"begin": 19510,
											"end": 19516,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 19505,
											"end": 19508,
											"name": "DUP6",
											"source": 6
										},
										{
											"begin": 19498,
											"end": 19502,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 19491,
											"end": 19496,
											"name": "DUP7",
											"source": 6
										},
										{
											"begin": 19487,
											"end": 19503,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 19452,
											"end": 19517,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "188"
										},
										{
											"begin": 19452,
											"end": 19517,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 19452,
											"end": 19517,
											"name": "tag",
											"source": 6,
											"value": "383"
										},
										{
											"begin": 19452,
											"end": 19517,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 19542,
											"end": 19548,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 19537,
											"end": 19540,
											"name": "DUP5",
											"source": 6
										},
										{
											"begin": 19533,
											"end": 19549,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 19526,
											"end": 19549,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 19526,
											"end": 19549,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 19277,
											"end": 19555,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 19169,
											"end": 19555,
											"name": "SWAP3",
											"source": 6
										},
										{
											"begin": 19169,
											"end": 19555,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 19169,
											"end": 19555,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 19169,
											"end": 19555,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 19169,
											"end": 19555,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 19561,
											"end": 19832,
											"name": "tag",
											"source": 6,
											"value": "121"
										},
										{
											"begin": 19561,
											"end": 19832,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 19691,
											"end": 19694,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 19713,
											"end": 19806,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "385"
										},
										{
											"begin": 19802,
											"end": 19805,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 19793,
											"end": 19799,
											"name": "DUP5",
											"source": 6
										},
										{
											"begin": 19713,
											"end": 19806,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "189"
										},
										{
											"begin": 19713,
											"end": 19806,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 19713,
											"end": 19806,
											"name": "tag",
											"source": 6,
											"value": "385"
										},
										{
											"begin": 19713,
											"end": 19806,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 19706,
											"end": 19806,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 19706,
											"end": 19806,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 19823,
											"end": 19826,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 19816,
											"end": 19826,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 19816,
											"end": 19826,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 19561,
											"end": 19832,
											"name": "SWAP3",
											"source": 6
										},
										{
											"begin": 19561,
											"end": 19832,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 19561,
											"end": 19832,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 19561,
											"end": 19832,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 19561,
											"end": 19832,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 19838,
											"end": 20017,
											"name": "tag",
											"source": 6,
											"value": "190"
										},
										{
											"begin": 19838,
											"end": 20017,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 19978,
											"end": 20009,
											"name": "PUSH",
											"source": 6,
											"value": "416464726573733A2063616C6C20746F206E6F6E2D636F6E7472616374000000"
										},
										{
											"begin": 19974,
											"end": 19975,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 19966,
											"end": 19972,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 19962,
											"end": 19976,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 19955,
											"end": 20010,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 19838,
											"end": 20017,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 19838,
											"end": 20017,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 20023,
											"end": 20389,
											"name": "tag",
											"source": 6,
											"value": "191"
										},
										{
											"begin": 20023,
											"end": 20389,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 20165,
											"end": 20168,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 20186,
											"end": 20253,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "388"
										},
										{
											"begin": 20250,
											"end": 20252,
											"name": "PUSH",
											"source": 6,
											"value": "1D"
										},
										{
											"begin": 20245,
											"end": 20248,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 20186,
											"end": 20253,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "176"
										},
										{
											"begin": 20186,
											"end": 20253,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 20186,
											"end": 20253,
											"name": "tag",
											"source": 6,
											"value": "388"
										},
										{
											"begin": 20186,
											"end": 20253,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 20179,
											"end": 20253,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 20179,
											"end": 20253,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 20262,
											"end": 20355,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "389"
										},
										{
											"begin": 20351,
											"end": 20354,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 20262,
											"end": 20355,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "190"
										},
										{
											"begin": 20262,
											"end": 20355,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 20262,
											"end": 20355,
											"name": "tag",
											"source": 6,
											"value": "389"
										},
										{
											"begin": 20262,
											"end": 20355,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 20380,
											"end": 20382,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 20375,
											"end": 20378,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 20371,
											"end": 20383,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 20364,
											"end": 20383,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 20364,
											"end": 20383,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 20023,
											"end": 20389,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 20023,
											"end": 20389,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 20023,
											"end": 20389,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 20023,
											"end": 20389,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 20395,
											"end": 20814,
											"name": "tag",
											"source": 6,
											"value": "134"
										},
										{
											"begin": 20395,
											"end": 20814,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 20561,
											"end": 20565,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 20599,
											"end": 20601,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 20588,
											"end": 20597,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 20584,
											"end": 20602,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 20576,
											"end": 20602,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 20576,
											"end": 20602,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 20648,
											"end": 20657,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 20642,
											"end": 20646,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 20638,
											"end": 20658,
											"name": "SUB",
											"source": 6
										},
										{
											"begin": 20634,
											"end": 20635,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 20623,
											"end": 20632,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 20619,
											"end": 20636,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 20612,
											"end": 20659,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 20676,
											"end": 20807,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "391"
										},
										{
											"begin": 20802,
											"end": 20806,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 20676,
											"end": 20807,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "191"
										},
										{
											"begin": 20676,
											"end": 20807,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 20676,
											"end": 20807,
											"name": "tag",
											"source": 6,
											"value": "391"
										},
										{
											"begin": 20676,
											"end": 20807,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 20668,
											"end": 20807,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 20668,
											"end": 20807,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 20395,
											"end": 20814,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 20395,
											"end": 20814,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 20395,
											"end": 20814,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 20395,
											"end": 20814,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 20820,
											"end": 20919,
											"name": "tag",
											"source": 6,
											"value": "192"
										},
										{
											"begin": 20820,
											"end": 20919,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 20872,
											"end": 20878,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 20906,
											"end": 20911,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 20900,
											"end": 20912,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 20890,
											"end": 20912,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 20890,
											"end": 20912,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 20820,
											"end": 20919,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 20820,
											"end": 20919,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 20820,
											"end": 20919,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 20820,
											"end": 20919,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 20925,
											"end": 21302,
											"name": "tag",
											"source": 6,
											"value": "193"
										},
										{
											"begin": 20925,
											"end": 21302,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 21013,
											"end": 21016,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 21041,
											"end": 21080,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "394"
										},
										{
											"begin": 21074,
											"end": 21079,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 21041,
											"end": 21080,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "192"
										},
										{
											"begin": 21041,
											"end": 21080,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 21041,
											"end": 21080,
											"name": "tag",
											"source": 6,
											"value": "394"
										},
										{
											"begin": 21041,
											"end": 21080,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 21096,
											"end": 21167,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "395"
										},
										{
											"begin": 21160,
											"end": 21166,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 21155,
											"end": 21158,
											"name": "DUP6",
											"source": 6
										},
										{
											"begin": 21096,
											"end": 21167,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "176"
										},
										{
											"begin": 21096,
											"end": 21167,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 21096,
											"end": 21167,
											"name": "tag",
											"source": 6,
											"value": "395"
										},
										{
											"begin": 21096,
											"end": 21167,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 21089,
											"end": 21167,
											"name": "SWAP4",
											"source": 6
										},
										{
											"begin": 21089,
											"end": 21167,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 21176,
											"end": 21241,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "396"
										},
										{
											"begin": 21234,
											"end": 21240,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 21229,
											"end": 21232,
											"name": "DUP6",
											"source": 6
										},
										{
											"begin": 21222,
											"end": 21226,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 21215,
											"end": 21220,
											"name": "DUP7",
											"source": 6
										},
										{
											"begin": 21211,
											"end": 21227,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 21176,
											"end": 21241,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "188"
										},
										{
											"begin": 21176,
											"end": 21241,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 21176,
											"end": 21241,
											"name": "tag",
											"source": 6,
											"value": "396"
										},
										{
											"begin": 21176,
											"end": 21241,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 21266,
											"end": 21295,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "397"
										},
										{
											"begin": 21288,
											"end": 21294,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 21266,
											"end": 21295,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "169"
										},
										{
											"begin": 21266,
											"end": 21295,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 21266,
											"end": 21295,
											"name": "tag",
											"source": 6,
											"value": "397"
										},
										{
											"begin": 21266,
											"end": 21295,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 21261,
											"end": 21264,
											"name": "DUP5",
											"source": 6
										},
										{
											"begin": 21257,
											"end": 21296,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 21250,
											"end": 21296,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 21250,
											"end": 21296,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 21017,
											"end": 21302,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 20925,
											"end": 21302,
											"name": "SWAP3",
											"source": 6
										},
										{
											"begin": 20925,
											"end": 21302,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 20925,
											"end": 21302,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 20925,
											"end": 21302,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 20925,
											"end": 21302,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 21308,
											"end": 21621,
											"name": "tag",
											"source": 6,
											"value": "143"
										},
										{
											"begin": 21308,
											"end": 21621,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 21421,
											"end": 21425,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 21459,
											"end": 21461,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 21448,
											"end": 21457,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 21444,
											"end": 21462,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 21436,
											"end": 21462,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 21436,
											"end": 21462,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 21508,
											"end": 21517,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 21502,
											"end": 21506,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 21498,
											"end": 21518,
											"name": "SUB",
											"source": 6
										},
										{
											"begin": 21494,
											"end": 21495,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 21483,
											"end": 21492,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 21479,
											"end": 21496,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 21472,
											"end": 21519,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 21536,
											"end": 21614,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "399"
										},
										{
											"begin": 21609,
											"end": 21613,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 21600,
											"end": 21606,
											"name": "DUP5",
											"source": 6
										},
										{
											"begin": 21536,
											"end": 21614,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "193"
										},
										{
											"begin": 21536,
											"end": 21614,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 21536,
											"end": 21614,
											"name": "tag",
											"source": 6,
											"value": "399"
										},
										{
											"begin": 21536,
											"end": 21614,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 21528,
											"end": 21614,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 21528,
											"end": 21614,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 21308,
											"end": 21621,
											"name": "SWAP3",
											"source": 6
										},
										{
											"begin": 21308,
											"end": 21621,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 21308,
											"end": 21621,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 21308,
											"end": 21621,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 21308,
											"end": 21621,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										}
									]
								}
							},
							"sourceList": [
								"@openzeppelin/contracts/token/ERC20/IERC20.sol",
								"@openzeppelin/contracts/token/ERC20/extensions/draft-IERC20Permit.sol",
								"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol",
								"@openzeppelin/contracts/utils/Address.sol",
								"DengLianHW/w5-2/contracts/MyTokenMarket.sol",
								"DengLianHW/w5-2/contracts/Uniswap/interfaces/IUniswapV2Router01.sol",
								"#utility.yul"
							]
						},
						"methodIdentifiers": {
							"AddLiquidity(address,uint256,address,uint256)": "07ee83a1",
							"AddLiquidityETH(address,uint256)": "839da792",
							"buyToken(address,address,uint256,uint256)": "7d17ff3d",
							"buyTokenWithETH(address,uint256)": "b4688dc8",
							"router()": "f887ea40",
							"weth()": "3fc8cef3"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.17+commit.8df45f5f\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_router\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"_weth\",\"type\":\"address\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"tokenA\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amountA\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"tokenB\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amountB\",\"type\":\"uint256\"}],\"name\":\"AddLiquidity\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"token\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenAmount\",\"type\":\"uint256\"}],\"name\":\"AddLiquidityETH\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"tokenA\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"tokenB\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amountIn\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"minTokenAmount\",\"type\":\"uint256\"}],\"name\":\"buyToken\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"token\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"minTokenAmount\",\"type\":\"uint256\"}],\"name\":\"buyTokenWithETH\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"router\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"weth\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"DengLianHW/w5-2/contracts/MyTokenMarket.sol\":\"MyTokenMarket\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0x9750c6b834f7b43000631af5cc30001c5f547b3ceb3635488f140f60e897ea6b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://5a7d5b1ef5d8d5889ad2ed89d8619c09383b80b72ab226e0fe7bde1636481e34\",\"dweb:/ipfs/QmebXWgtEfumQGBdVeM6c71McLixYXQP5Bk6kKXuoY4Bmr\"]},\"@openzeppelin/contracts/token/ERC20/extensions/draft-IERC20Permit.sol\":{\"keccak256\":\"0xf41ca991f30855bf80ffd11e9347856a517b977f0a6c2d52e6421a99b7840329\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://b2717fd2bdac99daa960a6de500754ea1b932093c946388c381da48658234b95\",\"dweb:/ipfs/QmP6QVMn6UeA3ByahyJbYQr5M6coHKBKsf3ySZSfbyA8R7\"]},\"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":{\"keccak256\":\"0x9b72f93be69ca894d8492c244259615c4a742afc8d63720dbc8bb81087d9b238\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://f5a7b96e511be78d5cdf635c784e6ab8cdd38625bb8cafb8a80914a1c89cf0f6\",\"dweb:/ipfs/QmVzTCwJxQAkjRQHboT5QrvsVJGWQHgfEjeTbvyxoKBrds\"]},\"@openzeppelin/contracts/utils/Address.sol\":{\"keccak256\":\"0xf96f969e24029d43d0df89e59d365f277021dac62b48e1c1e3ebe0acdd7f1ca1\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://ec772b45a624be516f1c81970caa8a2e144301e9d0921cbc1a2789fef39a1269\",\"dweb:/ipfs/QmNyjwxCrGhQMyzLD93oUobJXVe9ceJvRvfXwbEtuxPiEj\"]},\"DengLianHW/w5-2/contracts/MyTokenMarket.sol\":{\"keccak256\":\"0x0b44a55c7964d6fe8782870da7659f343e1d867292fdceaec60d7e95bdcf553f\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://7ac30ec21038f5ca91714a08d7c8df8661601d9ac25c43a40bae6fcc6a2a6a53\",\"dweb:/ipfs/QmagKwYhJ6SjNCB55X9FHFKrZaPP3eeZtSo6RVWdJwbbCK\"]},\"DengLianHW/w5-2/contracts/Uniswap/interfaces/IUniswapV2Router01.sol\":{\"keccak256\":\"0x8a3c5c449d4b7cd76513ed6995f4b86e4a86f222c770f8442f5fc128ce29b4d2\",\"urls\":[\"bzz-raw://1df63ca373dafae3bd0ee7fe70f890a1dc7c45ed869c01de68413e0e97ff9deb\",\"dweb:/ipfs/QmefJgEYGUL8KX7kQKYTrDweF8GB7yjy3nw5Bmqzryg7PG\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [
							{
								"astId": 735,
								"contract": "DengLianHW/w5-2/contracts/MyTokenMarket.sol:MyTokenMarket",
								"label": "router",
								"offset": 0,
								"slot": "0",
								"type": "t_address"
							},
							{
								"astId": 737,
								"contract": "DengLianHW/w5-2/contracts/MyTokenMarket.sol:MyTokenMarket",
								"label": "weth",
								"offset": 0,
								"slot": "1",
								"type": "t_address"
							}
						],
						"types": {
							"t_address": {
								"encoding": "inplace",
								"label": "address",
								"numberOfBytes": "20"
							}
						}
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"DengLianHW/w5-2/contracts/Uniswap/interfaces/IUniswapV2Router01.sol": {
				"IUniswapV2Router01": {
					"abi": [
						{
							"inputs": [],
							"name": "WETH",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "pure",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "tokenA",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "tokenB",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "amountADesired",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "amountBDesired",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "amountAMin",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "amountBMin",
									"type": "uint256"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "deadline",
									"type": "uint256"
								}
							],
							"name": "addLiquidity",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "amountA",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "amountB",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "liquidity",
									"type": "uint256"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "token",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "amountTokenDesired",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "amountTokenMin",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "amountETHMin",
									"type": "uint256"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "deadline",
									"type": "uint256"
								}
							],
							"name": "addLiquidityETH",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "amountToken",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "amountETH",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "liquidity",
									"type": "uint256"
								}
							],
							"stateMutability": "payable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "factory",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "pure",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "amountOut",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "reserveIn",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "reserveOut",
									"type": "uint256"
								}
							],
							"name": "getAmountIn",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "amountIn",
									"type": "uint256"
								}
							],
							"stateMutability": "pure",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "amountIn",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "reserveIn",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "reserveOut",
									"type": "uint256"
								}
							],
							"name": "getAmountOut",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "amountOut",
									"type": "uint256"
								}
							],
							"stateMutability": "pure",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "amountOut",
									"type": "uint256"
								},
								{
									"internalType": "address[]",
									"name": "path",
									"type": "address[]"
								}
							],
							"name": "getAmountsIn",
							"outputs": [
								{
									"internalType": "uint256[]",
									"name": "amounts",
									"type": "uint256[]"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "amountIn",
									"type": "uint256"
								},
								{
									"internalType": "address[]",
									"name": "path",
									"type": "address[]"
								}
							],
							"name": "getAmountsOut",
							"outputs": [
								{
									"internalType": "uint256[]",
									"name": "amounts",
									"type": "uint256[]"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "amountA",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "reserveA",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "reserveB",
									"type": "uint256"
								}
							],
							"name": "quote",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "amountB",
									"type": "uint256"
								}
							],
							"stateMutability": "pure",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "tokenA",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "tokenB",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "liquidity",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "amountAMin",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "amountBMin",
									"type": "uint256"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "deadline",
									"type": "uint256"
								}
							],
							"name": "removeLiquidity",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "amountA",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "amountB",
									"type": "uint256"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "token",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "liquidity",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "amountTokenMin",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "amountETHMin",
									"type": "uint256"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "deadline",
									"type": "uint256"
								}
							],
							"name": "removeLiquidityETH",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "amountToken",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "amountETH",
									"type": "uint256"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "token",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "liquidity",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "amountTokenMin",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "amountETHMin",
									"type": "uint256"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "deadline",
									"type": "uint256"
								},
								{
									"internalType": "bool",
									"name": "approveMax",
									"type": "bool"
								},
								{
									"internalType": "uint8",
									"name": "v",
									"type": "uint8"
								},
								{
									"internalType": "bytes32",
									"name": "r",
									"type": "bytes32"
								},
								{
									"internalType": "bytes32",
									"name": "s",
									"type": "bytes32"
								}
							],
							"name": "removeLiquidityETHWithPermit",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "amountToken",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "amountETH",
									"type": "uint256"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "tokenA",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "tokenB",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "liquidity",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "amountAMin",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "amountBMin",
									"type": "uint256"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "deadline",
									"type": "uint256"
								},
								{
									"internalType": "bool",
									"name": "approveMax",
									"type": "bool"
								},
								{
									"internalType": "uint8",
									"name": "v",
									"type": "uint8"
								},
								{
									"internalType": "bytes32",
									"name": "r",
									"type": "bytes32"
								},
								{
									"internalType": "bytes32",
									"name": "s",
									"type": "bytes32"
								}
							],
							"name": "removeLiquidityWithPermit",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "amountA",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "amountB",
									"type": "uint256"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "amountOut",
									"type": "uint256"
								},
								{
									"internalType": "address[]",
									"name": "path",
									"type": "address[]"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "deadline",
									"type": "uint256"
								}
							],
							"name": "swapETHForExactTokens",
							"outputs": [
								{
									"internalType": "uint256[]",
									"name": "amounts",
									"type": "uint256[]"
								}
							],
							"stateMutability": "payable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "amountOutMin",
									"type": "uint256"
								},
								{
									"internalType": "address[]",
									"name": "path",
									"type": "address[]"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "deadline",
									"type": "uint256"
								}
							],
							"name": "swapExactETHForTokens",
							"outputs": [
								{
									"internalType": "uint256[]",
									"name": "amounts",
									"type": "uint256[]"
								}
							],
							"stateMutability": "payable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "amountIn",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "amountOutMin",
									"type": "uint256"
								},
								{
									"internalType": "address[]",
									"name": "path",
									"type": "address[]"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "deadline",
									"type": "uint256"
								}
							],
							"name": "swapExactTokensForETH",
							"outputs": [
								{
									"internalType": "uint256[]",
									"name": "amounts",
									"type": "uint256[]"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "amountIn",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "amountOutMin",
									"type": "uint256"
								},
								{
									"internalType": "address[]",
									"name": "path",
									"type": "address[]"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "deadline",
									"type": "uint256"
								}
							],
							"name": "swapExactTokensForTokens",
							"outputs": [
								{
									"internalType": "uint256[]",
									"name": "amounts",
									"type": "uint256[]"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "amountOut",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "amountInMax",
									"type": "uint256"
								},
								{
									"internalType": "address[]",
									"name": "path",
									"type": "address[]"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "deadline",
									"type": "uint256"
								}
							],
							"name": "swapTokensForExactETH",
							"outputs": [
								{
									"internalType": "uint256[]",
									"name": "amounts",
									"type": "uint256[]"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "amountOut",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "amountInMax",
									"type": "uint256"
								},
								{
									"internalType": "address[]",
									"name": "path",
									"type": "address[]"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "deadline",
									"type": "uint256"
								}
							],
							"name": "swapTokensForExactTokens",
							"outputs": [
								{
									"internalType": "uint256[]",
									"name": "amounts",
									"type": "uint256[]"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"WETH()": "ad5c4648",
							"addLiquidity(address,address,uint256,uint256,uint256,uint256,address,uint256)": "e8e33700",
							"addLiquidityETH(address,uint256,uint256,uint256,address,uint256)": "f305d719",
							"factory()": "c45a0155",
							"getAmountIn(uint256,uint256,uint256)": "85f8c259",
							"getAmountOut(uint256,uint256,uint256)": "054d50d4",
							"getAmountsIn(uint256,address[])": "1f00ca74",
							"getAmountsOut(uint256,address[])": "d06ca61f",
							"quote(uint256,uint256,uint256)": "ad615dec",
							"removeLiquidity(address,address,uint256,uint256,uint256,address,uint256)": "baa2abde",
							"removeLiquidityETH(address,uint256,uint256,uint256,address,uint256)": "02751cec",
							"removeLiquidityETHWithPermit(address,uint256,uint256,uint256,address,uint256,bool,uint8,bytes32,bytes32)": "ded9382a",
							"removeLiquidityWithPermit(address,address,uint256,uint256,uint256,address,uint256,bool,uint8,bytes32,bytes32)": "2195995c",
							"swapETHForExactTokens(uint256,address[],address,uint256)": "fb3bdb41",
							"swapExactETHForTokens(uint256,address[],address,uint256)": "7ff36ab5",
							"swapExactTokensForETH(uint256,uint256,address[],address,uint256)": "18cbafe5",
							"swapExactTokensForTokens(uint256,uint256,address[],address,uint256)": "38ed1739",
							"swapTokensForExactETH(uint256,uint256,address[],address,uint256)": "4a25d94a",
							"swapTokensForExactTokens(uint256,uint256,address[],address,uint256)": "8803dbee"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.17+commit.8df45f5f\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"name\":\"WETH\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"tokenA\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"tokenB\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amountADesired\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"amountBDesired\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"amountAMin\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"amountBMin\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"deadline\",\"type\":\"uint256\"}],\"name\":\"addLiquidity\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"amountA\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"amountB\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"liquidity\",\"type\":\"uint256\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"token\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amountTokenDesired\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"amountTokenMin\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"amountETHMin\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"deadline\",\"type\":\"uint256\"}],\"name\":\"addLiquidityETH\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"amountToken\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"amountETH\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"liquidity\",\"type\":\"uint256\"}],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"factory\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"amountOut\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"reserveIn\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"reserveOut\",\"type\":\"uint256\"}],\"name\":\"getAmountIn\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"amountIn\",\"type\":\"uint256\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"amountIn\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"reserveIn\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"reserveOut\",\"type\":\"uint256\"}],\"name\":\"getAmountOut\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"amountOut\",\"type\":\"uint256\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"amountOut\",\"type\":\"uint256\"},{\"internalType\":\"address[]\",\"name\":\"path\",\"type\":\"address[]\"}],\"name\":\"getAmountsIn\",\"outputs\":[{\"internalType\":\"uint256[]\",\"name\":\"amounts\",\"type\":\"uint256[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"amountIn\",\"type\":\"uint256\"},{\"internalType\":\"address[]\",\"name\":\"path\",\"type\":\"address[]\"}],\"name\":\"getAmountsOut\",\"outputs\":[{\"internalType\":\"uint256[]\",\"name\":\"amounts\",\"type\":\"uint256[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"amountA\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"reserveA\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"reserveB\",\"type\":\"uint256\"}],\"name\":\"quote\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"amountB\",\"type\":\"uint256\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"tokenA\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"tokenB\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"liquidity\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"amountAMin\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"amountBMin\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"deadline\",\"type\":\"uint256\"}],\"name\":\"removeLiquidity\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"amountA\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"amountB\",\"type\":\"uint256\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"token\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"liquidity\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"amountTokenMin\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"amountETHMin\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"deadline\",\"type\":\"uint256\"}],\"name\":\"removeLiquidityETH\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"amountToken\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"amountETH\",\"type\":\"uint256\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"token\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"liquidity\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"amountTokenMin\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"amountETHMin\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"deadline\",\"type\":\"uint256\"},{\"internalType\":\"bool\",\"name\":\"approveMax\",\"type\":\"bool\"},{\"internalType\":\"uint8\",\"name\":\"v\",\"type\":\"uint8\"},{\"internalType\":\"bytes32\",\"name\":\"r\",\"type\":\"bytes32\"},{\"internalType\":\"bytes32\",\"name\":\"s\",\"type\":\"bytes32\"}],\"name\":\"removeLiquidityETHWithPermit\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"amountToken\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"amountETH\",\"type\":\"uint256\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"tokenA\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"tokenB\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"liquidity\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"amountAMin\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"amountBMin\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"deadline\",\"type\":\"uint256\"},{\"internalType\":\"bool\",\"name\":\"approveMax\",\"type\":\"bool\"},{\"internalType\":\"uint8\",\"name\":\"v\",\"type\":\"uint8\"},{\"internalType\":\"bytes32\",\"name\":\"r\",\"type\":\"bytes32\"},{\"internalType\":\"bytes32\",\"name\":\"s\",\"type\":\"bytes32\"}],\"name\":\"removeLiquidityWithPermit\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"amountA\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"amountB\",\"type\":\"uint256\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"amountOut\",\"type\":\"uint256\"},{\"internalType\":\"address[]\",\"name\":\"path\",\"type\":\"address[]\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"deadline\",\"type\":\"uint256\"}],\"name\":\"swapETHForExactTokens\",\"outputs\":[{\"internalType\":\"uint256[]\",\"name\":\"amounts\",\"type\":\"uint256[]\"}],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"amountOutMin\",\"type\":\"uint256\"},{\"internalType\":\"address[]\",\"name\":\"path\",\"type\":\"address[]\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"deadline\",\"type\":\"uint256\"}],\"name\":\"swapExactETHForTokens\",\"outputs\":[{\"internalType\":\"uint256[]\",\"name\":\"amounts\",\"type\":\"uint256[]\"}],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"amountIn\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"amountOutMin\",\"type\":\"uint256\"},{\"internalType\":\"address[]\",\"name\":\"path\",\"type\":\"address[]\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"deadline\",\"type\":\"uint256\"}],\"name\":\"swapExactTokensForETH\",\"outputs\":[{\"internalType\":\"uint256[]\",\"name\":\"amounts\",\"type\":\"uint256[]\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"amountIn\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"amountOutMin\",\"type\":\"uint256\"},{\"internalType\":\"address[]\",\"name\":\"path\",\"type\":\"address[]\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"deadline\",\"type\":\"uint256\"}],\"name\":\"swapExactTokensForTokens\",\"outputs\":[{\"internalType\":\"uint256[]\",\"name\":\"amounts\",\"type\":\"uint256[]\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"amountOut\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"amountInMax\",\"type\":\"uint256\"},{\"internalType\":\"address[]\",\"name\":\"path\",\"type\":\"address[]\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"deadline\",\"type\":\"uint256\"}],\"name\":\"swapTokensForExactETH\",\"outputs\":[{\"internalType\":\"uint256[]\",\"name\":\"amounts\",\"type\":\"uint256[]\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"amountOut\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"amountInMax\",\"type\":\"uint256\"},{\"internalType\":\"address[]\",\"name\":\"path\",\"type\":\"address[]\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"deadline\",\"type\":\"uint256\"}],\"name\":\"swapTokensForExactTokens\",\"outputs\":[{\"internalType\":\"uint256[]\",\"name\":\"amounts\",\"type\":\"uint256[]\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"DengLianHW/w5-2/contracts/Uniswap/interfaces/IUniswapV2Router01.sol\":\"IUniswapV2Router01\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"DengLianHW/w5-2/contracts/Uniswap/interfaces/IUniswapV2Router01.sol\":{\"keccak256\":\"0x8a3c5c449d4b7cd76513ed6995f4b86e4a86f222c770f8442f5fc128ce29b4d2\",\"urls\":[\"bzz-raw://1df63ca373dafae3bd0ee7fe70f890a1dc7c45ed869c01de68413e0e97ff9deb\",\"dweb:/ipfs/QmefJgEYGUL8KX7kQKYTrDweF8GB7yjy3nw5Bmqzryg7PG\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			}
		},
		"errors": [
			{
				"component": "general",
				"errorCode": "1878",
				"formattedMessage": "Warning: SPDX license identifier not provided in source file. Before publishing, consider adding a comment containing \"SPDX-License-Identifier: <SPDX-License>\" to each source file. Use \"SPDX-License-Identifier: UNLICENSED\" for non-open-source code. Please see https://spdx.org for more information.\n--> DengLianHW/w5-2/contracts/Uniswap/interfaces/IUniswapV2Router01.sol\n\n",
				"message": "SPDX license identifier not provided in source file. Before publishing, consider adding a comment containing \"SPDX-License-Identifier: <SPDX-License>\" to each source file. Use \"SPDX-License-Identifier: UNLICENSED\" for non-open-source code. Please see https://spdx.org for more information.",
				"severity": "warning",
				"sourceLocation": {
					"end": -1,
					"file": "DengLianHW/w5-2/contracts/Uniswap/interfaces/IUniswapV2Router01.sol",
					"start": -1
				},
				"type": "Warning"
			}
		],
		"sources": {
			"@openzeppelin/contracts/token/ERC20/IERC20.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/token/ERC20/IERC20.sol",
					"exportedSymbols": {
						"IERC20": [
							77
						]
					},
					"id": 78,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "106:23:0"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "IERC20",
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 2,
								"nodeType": "StructuredDocumentation",
								"src": "131:70:0",
								"text": " @dev Interface of the ERC20 standard as defined in the EIP."
							},
							"fullyImplemented": false,
							"id": 77,
							"linearizedBaseContracts": [
								77
							],
							"name": "IERC20",
							"nameLocation": "212:6:0",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"anonymous": false,
									"documentation": {
										"id": 3,
										"nodeType": "StructuredDocumentation",
										"src": "225:158:0",
										"text": " @dev Emitted when `value` tokens are moved from one account (`from`) to\n another (`to`).\n Note that `value` may be zero."
									},
									"eventSelector": "ddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef",
									"id": 11,
									"name": "Transfer",
									"nameLocation": "394:8:0",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 10,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 5,
												"indexed": true,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "419:4:0",
												"nodeType": "VariableDeclaration",
												"scope": 11,
												"src": "403:20:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 4,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "403:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 7,
												"indexed": true,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "441:2:0",
												"nodeType": "VariableDeclaration",
												"scope": 11,
												"src": "425:18:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 6,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "425:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 9,
												"indexed": false,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "453:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 11,
												"src": "445:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 8,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "445:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "402:57:0"
									},
									"src": "388:72:0"
								},
								{
									"anonymous": false,
									"documentation": {
										"id": 12,
										"nodeType": "StructuredDocumentation",
										"src": "466:148:0",
										"text": " @dev Emitted when the allowance of a `spender` for an `owner` is set by\n a call to {approve}. `value` is the new allowance."
									},
									"eventSelector": "8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925",
									"id": 20,
									"name": "Approval",
									"nameLocation": "625:8:0",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 19,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 14,
												"indexed": true,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "650:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 20,
												"src": "634:21:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 13,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "634:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 16,
												"indexed": true,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "673:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 20,
												"src": "657:23:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 15,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "657:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 18,
												"indexed": false,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "690:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 20,
												"src": "682:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 17,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "682:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "633:63:0"
									},
									"src": "619:78:0"
								},
								{
									"documentation": {
										"id": 21,
										"nodeType": "StructuredDocumentation",
										"src": "703:66:0",
										"text": " @dev Returns the amount of tokens in existence."
									},
									"functionSelector": "18160ddd",
									"id": 26,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "totalSupply",
									"nameLocation": "783:11:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 22,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "794:2:0"
									},
									"returnParameters": {
										"id": 25,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 24,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 26,
												"src": "820:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 23,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "820:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "819:9:0"
									},
									"scope": 77,
									"src": "774:55:0",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 27,
										"nodeType": "StructuredDocumentation",
										"src": "835:72:0",
										"text": " @dev Returns the amount of tokens owned by `account`."
									},
									"functionSelector": "70a08231",
									"id": 34,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "balanceOf",
									"nameLocation": "921:9:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 30,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 29,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "939:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 34,
												"src": "931:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 28,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "931:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "930:17:0"
									},
									"returnParameters": {
										"id": 33,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 32,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 34,
												"src": "971:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 31,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "971:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "970:9:0"
									},
									"scope": 77,
									"src": "912:68:0",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 35,
										"nodeType": "StructuredDocumentation",
										"src": "986:202:0",
										"text": " @dev Moves `amount` tokens from the caller's account to `to`.\n Returns a boolean value indicating whether the operation succeeded.\n Emits a {Transfer} event."
									},
									"functionSelector": "a9059cbb",
									"id": 44,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "transfer",
									"nameLocation": "1202:8:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 40,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 37,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "1219:2:0",
												"nodeType": "VariableDeclaration",
												"scope": 44,
												"src": "1211:10:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 36,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1211:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 39,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "1231:6:0",
												"nodeType": "VariableDeclaration",
												"scope": 44,
												"src": "1223:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 38,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1223:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1210:28:0"
									},
									"returnParameters": {
										"id": 43,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 42,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 44,
												"src": "1257:4:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 41,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "1257:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1256:6:0"
									},
									"scope": 77,
									"src": "1193:70:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 45,
										"nodeType": "StructuredDocumentation",
										"src": "1269:264:0",
										"text": " @dev Returns the remaining number of tokens that `spender` will be\n allowed to spend on behalf of `owner` through {transferFrom}. This is\n zero by default.\n This value changes when {approve} or {transferFrom} are called."
									},
									"functionSelector": "dd62ed3e",
									"id": 54,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "allowance",
									"nameLocation": "1547:9:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 50,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 47,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "1565:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 54,
												"src": "1557:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 46,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1557:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 49,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "1580:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 54,
												"src": "1572:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 48,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1572:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1556:32:0"
									},
									"returnParameters": {
										"id": 53,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 52,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 54,
												"src": "1612:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 51,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1612:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1611:9:0"
									},
									"scope": 77,
									"src": "1538:83:0",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 55,
										"nodeType": "StructuredDocumentation",
										"src": "1627:642:0",
										"text": " @dev Sets `amount` as the allowance of `spender` over the caller's tokens.\n Returns a boolean value indicating whether the operation succeeded.\n IMPORTANT: Beware that changing an allowance with this method brings the risk\n that someone may use both the old and the new allowance by unfortunate\n transaction ordering. One possible solution to mitigate this race\n condition is to first reduce the spender's allowance to 0 and set the\n desired value afterwards:\n https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729\n Emits an {Approval} event."
									},
									"functionSelector": "095ea7b3",
									"id": 64,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "approve",
									"nameLocation": "2283:7:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 60,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 57,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "2299:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 64,
												"src": "2291:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 56,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2291:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 59,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "2316:6:0",
												"nodeType": "VariableDeclaration",
												"scope": 64,
												"src": "2308:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 58,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2308:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2290:33:0"
									},
									"returnParameters": {
										"id": 63,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 62,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 64,
												"src": "2342:4:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 61,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "2342:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2341:6:0"
									},
									"scope": 77,
									"src": "2274:74:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 65,
										"nodeType": "StructuredDocumentation",
										"src": "2354:287:0",
										"text": " @dev Moves `amount` tokens from `from` to `to` using the\n allowance mechanism. `amount` is then deducted from the caller's\n allowance.\n Returns a boolean value indicating whether the operation succeeded.\n Emits a {Transfer} event."
									},
									"functionSelector": "23b872dd",
									"id": 76,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "transferFrom",
									"nameLocation": "2655:12:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 72,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 67,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "2685:4:0",
												"nodeType": "VariableDeclaration",
												"scope": 76,
												"src": "2677:12:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 66,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2677:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 69,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "2707:2:0",
												"nodeType": "VariableDeclaration",
												"scope": 76,
												"src": "2699:10:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 68,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2699:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 71,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "2727:6:0",
												"nodeType": "VariableDeclaration",
												"scope": 76,
												"src": "2719:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 70,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2719:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2667:72:0"
									},
									"returnParameters": {
										"id": 75,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 74,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 76,
												"src": "2758:4:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 73,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "2758:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2757:6:0"
									},
									"scope": 77,
									"src": "2646:118:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 78,
							"src": "202:2564:0",
							"usedErrors": []
						}
					],
					"src": "106:2661:0"
				},
				"id": 0
			},
			"@openzeppelin/contracts/token/ERC20/extensions/draft-IERC20Permit.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/token/ERC20/extensions/draft-IERC20Permit.sol",
					"exportedSymbols": {
						"IERC20Permit": [
							113
						]
					},
					"id": 114,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 79,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "114:23:1"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "IERC20Permit",
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 80,
								"nodeType": "StructuredDocumentation",
								"src": "139:480:1",
								"text": " @dev Interface of the ERC20 Permit extension allowing approvals to be made via signatures, as defined in\n https://eips.ethereum.org/EIPS/eip-2612[EIP-2612].\n Adds the {permit} method, which can be used to change an account's ERC20 allowance (see {IERC20-allowance}) by\n presenting a message signed by the account. By not relying on {IERC20-approve}, the token holder account doesn't\n need to send a transaction, and thus is not required to hold Ether at all."
							},
							"fullyImplemented": false,
							"id": 113,
							"linearizedBaseContracts": [
								113
							],
							"name": "IERC20Permit",
							"nameLocation": "630:12:1",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"documentation": {
										"id": 81,
										"nodeType": "StructuredDocumentation",
										"src": "649:792:1",
										"text": " @dev Sets `value` as the allowance of `spender` over ``owner``'s tokens,\n given ``owner``'s signed approval.\n IMPORTANT: The same issues {IERC20-approve} has related to transaction\n ordering also apply here.\n Emits an {Approval} event.\n Requirements:\n - `spender` cannot be the zero address.\n - `deadline` must be a timestamp in the future.\n - `v`, `r` and `s` must be a valid `secp256k1` signature from `owner`\n over the EIP712-formatted function arguments.\n - the signature must use ``owner``'s current nonce (see {nonces}).\n For more information on the signature format, see the\n https://eips.ethereum.org/EIPS/eip-2612#specification[relevant EIP\n section]."
									},
									"functionSelector": "d505accf",
									"id": 98,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "permit",
									"nameLocation": "1455:6:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 96,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 83,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "1479:5:1",
												"nodeType": "VariableDeclaration",
												"scope": 98,
												"src": "1471:13:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 82,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1471:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 85,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "1502:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 98,
												"src": "1494:15:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 84,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1494:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 87,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "1527:5:1",
												"nodeType": "VariableDeclaration",
												"scope": 98,
												"src": "1519:13:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 86,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1519:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 89,
												"mutability": "mutable",
												"name": "deadline",
												"nameLocation": "1550:8:1",
												"nodeType": "VariableDeclaration",
												"scope": 98,
												"src": "1542:16:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 88,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1542:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 91,
												"mutability": "mutable",
												"name": "v",
												"nameLocation": "1574:1:1",
												"nodeType": "VariableDeclaration",
												"scope": 98,
												"src": "1568:7:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint8",
													"typeString": "uint8"
												},
												"typeName": {
													"id": 90,
													"name": "uint8",
													"nodeType": "ElementaryTypeName",
													"src": "1568:5:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint8",
														"typeString": "uint8"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 93,
												"mutability": "mutable",
												"name": "r",
												"nameLocation": "1593:1:1",
												"nodeType": "VariableDeclaration",
												"scope": 98,
												"src": "1585:9:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 92,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "1585:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 95,
												"mutability": "mutable",
												"name": "s",
												"nameLocation": "1612:1:1",
												"nodeType": "VariableDeclaration",
												"scope": 98,
												"src": "1604:9:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 94,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "1604:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1461:158:1"
									},
									"returnParameters": {
										"id": 97,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1628:0:1"
									},
									"scope": 113,
									"src": "1446:183:1",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 99,
										"nodeType": "StructuredDocumentation",
										"src": "1635:294:1",
										"text": " @dev Returns the current nonce for `owner`. This value must be\n included whenever a signature is generated for {permit}.\n Every successful call to {permit} increases ``owner``'s nonce by one. This\n prevents a signature from being used multiple times."
									},
									"functionSelector": "7ecebe00",
									"id": 106,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "nonces",
									"nameLocation": "1943:6:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 102,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 101,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "1958:5:1",
												"nodeType": "VariableDeclaration",
												"scope": 106,
												"src": "1950:13:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 100,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1950:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1949:15:1"
									},
									"returnParameters": {
										"id": 105,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 104,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 106,
												"src": "1988:7:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 103,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1988:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1987:9:1"
									},
									"scope": 113,
									"src": "1934:63:1",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 107,
										"nodeType": "StructuredDocumentation",
										"src": "2003:128:1",
										"text": " @dev Returns the domain separator used in the encoding of the signature for {permit}, as defined by {EIP712}."
									},
									"functionSelector": "3644e515",
									"id": 112,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "DOMAIN_SEPARATOR",
									"nameLocation": "2198:16:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 108,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2214:2:1"
									},
									"returnParameters": {
										"id": 111,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 110,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 112,
												"src": "2240:7:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 109,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "2240:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2239:9:1"
									},
									"scope": 113,
									"src": "2189:60:1",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 114,
							"src": "620:1631:1",
							"usedErrors": []
						}
					],
					"src": "114:2138:1"
				},
				"id": 1
			},
			"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol",
					"exportedSymbols": {
						"Address": [
							724
						],
						"IERC20": [
							77
						],
						"IERC20Permit": [
							113
						],
						"SafeERC20": [
							394
						]
					},
					"id": 395,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 115,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "115:23:2"
						},
						{
							"absolutePath": "@openzeppelin/contracts/token/ERC20/IERC20.sol",
							"file": "../IERC20.sol",
							"id": 116,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 395,
							"sourceUnit": 78,
							"src": "140:23:2",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": "@openzeppelin/contracts/token/ERC20/extensions/draft-IERC20Permit.sol",
							"file": "../extensions/draft-IERC20Permit.sol",
							"id": 117,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 395,
							"sourceUnit": 114,
							"src": "164:46:2",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": "@openzeppelin/contracts/utils/Address.sol",
							"file": "../../../utils/Address.sol",
							"id": 118,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 395,
							"sourceUnit": 725,
							"src": "211:36:2",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "SafeERC20",
							"contractDependencies": [],
							"contractKind": "library",
							"documentation": {
								"id": 119,
								"nodeType": "StructuredDocumentation",
								"src": "249:457:2",
								"text": " @title SafeERC20\n @dev Wrappers around ERC20 operations that throw on failure (when the token\n contract returns false). Tokens that return no value (and instead revert or\n throw on failure) are also supported, non-reverting calls are assumed to be\n successful.\n To use this library you can add a `using SafeERC20 for IERC20;` statement to your contract,\n which allows you to call the safe operations as `token.safeTransfer(...)`, etc."
							},
							"fullyImplemented": true,
							"id": 394,
							"linearizedBaseContracts": [
								394
							],
							"name": "SafeERC20",
							"nameLocation": "715:9:2",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"global": false,
									"id": 122,
									"libraryName": {
										"id": 120,
										"name": "Address",
										"nameLocations": [
											"737:7:2"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 724,
										"src": "737:7:2"
									},
									"nodeType": "UsingForDirective",
									"src": "731:26:2",
									"typeName": {
										"id": 121,
										"name": "address",
										"nodeType": "ElementaryTypeName",
										"src": "749:7:2",
										"stateMutability": "nonpayable",
										"typeDescriptions": {
											"typeIdentifier": "t_address",
											"typeString": "address"
										}
									}
								},
								{
									"body": {
										"id": 144,
										"nodeType": "Block",
										"src": "865:103:2",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 133,
															"name": "token",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 125,
															"src": "895:5:2",
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_IERC20_$77",
																"typeString": "contract IERC20"
															}
														},
														{
															"arguments": [
																{
																	"expression": {
																		"expression": {
																			"id": 136,
																			"name": "token",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 125,
																			"src": "925:5:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_contract$_IERC20_$77",
																				"typeString": "contract IERC20"
																			}
																		},
																		"id": 137,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberLocation": "931:8:2",
																		"memberName": "transfer",
																		"nodeType": "MemberAccess",
																		"referencedDeclaration": 44,
																		"src": "925:14:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$",
																			"typeString": "function (address,uint256) external returns (bool)"
																		}
																	},
																	"id": 138,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberLocation": "940:8:2",
																	"memberName": "selector",
																	"nodeType": "MemberAccess",
																	"src": "925:23:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bytes4",
																		"typeString": "bytes4"
																	}
																},
																{
																	"id": 139,
																	"name": "to",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 127,
																	"src": "950:2:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																{
																	"id": 140,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 129,
																	"src": "954:5:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_bytes4",
																		"typeString": "bytes4"
																	},
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	},
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																],
																"expression": {
																	"id": 134,
																	"name": "abi",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967295,
																	"src": "902:3:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_abi",
																		"typeString": "abi"
																	}
																},
																"id": 135,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"memberLocation": "906:18:2",
																"memberName": "encodeWithSelector",
																"nodeType": "MemberAccess",
																"src": "902:22:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_abiencodewithselector_pure$_t_bytes4_$returns$_t_bytes_memory_ptr_$",
																	"typeString": "function (bytes4) pure returns (bytes memory)"
																}
															},
															"id": 141,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "902:58:2",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_contract$_IERC20_$77",
																"typeString": "contract IERC20"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"id": 132,
														"name": "_callOptionalReturn",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 393,
														"src": "875:19:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_contract$_IERC20_$77_$_t_bytes_memory_ptr_$returns$__$",
															"typeString": "function (contract IERC20,bytes memory)"
														}
													},
													"id": 142,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "875:86:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 143,
												"nodeType": "ExpressionStatement",
												"src": "875:86:2"
											}
										]
									},
									"id": 145,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "safeTransfer",
									"nameLocation": "772:12:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 130,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 125,
												"mutability": "mutable",
												"name": "token",
												"nameLocation": "801:5:2",
												"nodeType": "VariableDeclaration",
												"scope": 145,
												"src": "794:12:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_contract$_IERC20_$77",
													"typeString": "contract IERC20"
												},
												"typeName": {
													"id": 124,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 123,
														"name": "IERC20",
														"nameLocations": [
															"794:6:2"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 77,
														"src": "794:6:2"
													},
													"referencedDeclaration": 77,
													"src": "794:6:2",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_IERC20_$77",
														"typeString": "contract IERC20"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 127,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "824:2:2",
												"nodeType": "VariableDeclaration",
												"scope": 145,
												"src": "816:10:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 126,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "816:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 129,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "844:5:2",
												"nodeType": "VariableDeclaration",
												"scope": 145,
												"src": "836:13:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 128,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "836:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "784:71:2"
									},
									"returnParameters": {
										"id": 131,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "865:0:2"
									},
									"scope": 394,
									"src": "763:205:2",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 170,
										"nodeType": "Block",
										"src": "1102:113:2",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 158,
															"name": "token",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 148,
															"src": "1132:5:2",
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_IERC20_$77",
																"typeString": "contract IERC20"
															}
														},
														{
															"arguments": [
																{
																	"expression": {
																		"expression": {
																			"id": 161,
																			"name": "token",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 148,
																			"src": "1162:5:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_contract$_IERC20_$77",
																				"typeString": "contract IERC20"
																			}
																		},
																		"id": 162,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberLocation": "1168:12:2",
																		"memberName": "transferFrom",
																		"nodeType": "MemberAccess",
																		"referencedDeclaration": 76,
																		"src": "1162:18:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$_t_bool_$",
																			"typeString": "function (address,address,uint256) external returns (bool)"
																		}
																	},
																	"id": 163,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberLocation": "1181:8:2",
																	"memberName": "selector",
																	"nodeType": "MemberAccess",
																	"src": "1162:27:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bytes4",
																		"typeString": "bytes4"
																	}
																},
																{
																	"id": 164,
																	"name": "from",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 150,
																	"src": "1191:4:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																{
																	"id": 165,
																	"name": "to",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 152,
																	"src": "1197:2:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																{
																	"id": 166,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 154,
																	"src": "1201:5:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_bytes4",
																		"typeString": "bytes4"
																	},
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	},
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	},
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																],
																"expression": {
																	"id": 159,
																	"name": "abi",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967295,
																	"src": "1139:3:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_abi",
																		"typeString": "abi"
																	}
																},
																"id": 160,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"memberLocation": "1143:18:2",
																"memberName": "encodeWithSelector",
																"nodeType": "MemberAccess",
																"src": "1139:22:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_abiencodewithselector_pure$_t_bytes4_$returns$_t_bytes_memory_ptr_$",
																	"typeString": "function (bytes4) pure returns (bytes memory)"
																}
															},
															"id": 167,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "1139:68:2",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_contract$_IERC20_$77",
																"typeString": "contract IERC20"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"id": 157,
														"name": "_callOptionalReturn",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 393,
														"src": "1112:19:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_contract$_IERC20_$77_$_t_bytes_memory_ptr_$returns$__$",
															"typeString": "function (contract IERC20,bytes memory)"
														}
													},
													"id": 168,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1112:96:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 169,
												"nodeType": "ExpressionStatement",
												"src": "1112:96:2"
											}
										]
									},
									"id": 171,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "safeTransferFrom",
									"nameLocation": "983:16:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 155,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 148,
												"mutability": "mutable",
												"name": "token",
												"nameLocation": "1016:5:2",
												"nodeType": "VariableDeclaration",
												"scope": 171,
												"src": "1009:12:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_contract$_IERC20_$77",
													"typeString": "contract IERC20"
												},
												"typeName": {
													"id": 147,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 146,
														"name": "IERC20",
														"nameLocations": [
															"1009:6:2"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 77,
														"src": "1009:6:2"
													},
													"referencedDeclaration": 77,
													"src": "1009:6:2",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_IERC20_$77",
														"typeString": "contract IERC20"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 150,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "1039:4:2",
												"nodeType": "VariableDeclaration",
												"scope": 171,
												"src": "1031:12:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 149,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1031:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 152,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "1061:2:2",
												"nodeType": "VariableDeclaration",
												"scope": 171,
												"src": "1053:10:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 151,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1053:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 154,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "1081:5:2",
												"nodeType": "VariableDeclaration",
												"scope": 171,
												"src": "1073:13:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 153,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1073:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "999:93:2"
									},
									"returnParameters": {
										"id": 156,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1102:0:2"
									},
									"scope": 394,
									"src": "974:241:2",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 214,
										"nodeType": "Block",
										"src": "1581:497:2",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															"id": 198,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"components": [
																	{
																		"commonType": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		"id": 185,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"id": 183,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 179,
																			"src": "1830:5:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "BinaryOperation",
																		"operator": "==",
																		"rightExpression": {
																			"hexValue": "30",
																			"id": 184,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "1839:1:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_0_by_1",
																				"typeString": "int_const 0"
																			},
																			"value": "0"
																		},
																		"src": "1830:10:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		}
																	}
																],
																"id": 186,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "1829:12:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "||",
															"rightExpression": {
																"components": [
																	{
																		"commonType": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		"id": 196,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"arguments": [
																				{
																					"arguments": [
																						{
																							"id": 191,
																							"name": "this",
																							"nodeType": "Identifier",
																							"overloadedDeclarations": [],
																							"referencedDeclaration": 4294967268,
																							"src": "1870:4:2",
																							"typeDescriptions": {
																								"typeIdentifier": "t_contract$_SafeERC20_$394",
																								"typeString": "library SafeERC20"
																							}
																						}
																					],
																					"expression": {
																						"argumentTypes": [
																							{
																								"typeIdentifier": "t_contract$_SafeERC20_$394",
																								"typeString": "library SafeERC20"
																							}
																						],
																						"id": 190,
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": true,
																						"lValueRequested": false,
																						"nodeType": "ElementaryTypeNameExpression",
																						"src": "1862:7:2",
																						"typeDescriptions": {
																							"typeIdentifier": "t_type$_t_address_$",
																							"typeString": "type(address)"
																						},
																						"typeName": {
																							"id": 189,
																							"name": "address",
																							"nodeType": "ElementaryTypeName",
																							"src": "1862:7:2",
																							"typeDescriptions": {}
																						}
																					},
																					"id": 192,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": false,
																					"kind": "typeConversion",
																					"lValueRequested": false,
																					"nameLocations": [],
																					"names": [],
																					"nodeType": "FunctionCall",
																					"src": "1862:13:2",
																					"tryCall": false,
																					"typeDescriptions": {
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					}
																				},
																				{
																					"id": 193,
																					"name": "spender",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 177,
																					"src": "1877:7:2",
																					"typeDescriptions": {
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					}
																				}
																			],
																			"expression": {
																				"argumentTypes": [
																					{
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					},
																					{
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					}
																				],
																				"expression": {
																					"id": 187,
																					"name": "token",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 175,
																					"src": "1846:5:2",
																					"typeDescriptions": {
																						"typeIdentifier": "t_contract$_IERC20_$77",
																						"typeString": "contract IERC20"
																					}
																				},
																				"id": 188,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"memberLocation": "1852:9:2",
																				"memberName": "allowance",
																				"nodeType": "MemberAccess",
																				"referencedDeclaration": 54,
																				"src": "1846:15:2",
																				"typeDescriptions": {
																					"typeIdentifier": "t_function_external_view$_t_address_$_t_address_$returns$_t_uint256_$",
																					"typeString": "function (address,address) view external returns (uint256)"
																				}
																			},
																			"id": 194,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"kind": "functionCall",
																			"lValueRequested": false,
																			"nameLocations": [],
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "1846:39:2",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "BinaryOperation",
																		"operator": "==",
																		"rightExpression": {
																			"hexValue": "30",
																			"id": 195,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "1889:1:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_0_by_1",
																				"typeString": "int_const 0"
																			},
																			"value": "0"
																		},
																		"src": "1846:44:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		}
																	}
																],
																"id": 197,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "1845:46:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"src": "1829:62:2",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "5361666545524332303a20617070726f76652066726f6d206e6f6e2d7a65726f20746f206e6f6e2d7a65726f20616c6c6f77616e6365",
															"id": 199,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "1905:56:2",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_ef945ddb1bfdc0da870feb4560d868b047642b4ac7f2fb7f8b7c51cb4a411e25",
																"typeString": "literal_string \"SafeERC20: approve from non-zero to non-zero allowance\""
															},
															"value": "SafeERC20: approve from non-zero to non-zero allowance"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_ef945ddb1bfdc0da870feb4560d868b047642b4ac7f2fb7f8b7c51cb4a411e25",
																"typeString": "literal_string \"SafeERC20: approve from non-zero to non-zero allowance\""
															}
														],
														"id": 182,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "1808:7:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 200,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1808:163:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 201,
												"nodeType": "ExpressionStatement",
												"src": "1808:163:2"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 203,
															"name": "token",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 175,
															"src": "2001:5:2",
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_IERC20_$77",
																"typeString": "contract IERC20"
															}
														},
														{
															"arguments": [
																{
																	"expression": {
																		"expression": {
																			"id": 206,
																			"name": "token",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 175,
																			"src": "2031:5:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_contract$_IERC20_$77",
																				"typeString": "contract IERC20"
																			}
																		},
																		"id": 207,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberLocation": "2037:7:2",
																		"memberName": "approve",
																		"nodeType": "MemberAccess",
																		"referencedDeclaration": 64,
																		"src": "2031:13:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$",
																			"typeString": "function (address,uint256) external returns (bool)"
																		}
																	},
																	"id": 208,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberLocation": "2045:8:2",
																	"memberName": "selector",
																	"nodeType": "MemberAccess",
																	"src": "2031:22:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bytes4",
																		"typeString": "bytes4"
																	}
																},
																{
																	"id": 209,
																	"name": "spender",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 177,
																	"src": "2055:7:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																{
																	"id": 210,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 179,
																	"src": "2064:5:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_bytes4",
																		"typeString": "bytes4"
																	},
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	},
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																],
																"expression": {
																	"id": 204,
																	"name": "abi",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967295,
																	"src": "2008:3:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_abi",
																		"typeString": "abi"
																	}
																},
																"id": 205,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"memberLocation": "2012:18:2",
																"memberName": "encodeWithSelector",
																"nodeType": "MemberAccess",
																"src": "2008:22:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_abiencodewithselector_pure$_t_bytes4_$returns$_t_bytes_memory_ptr_$",
																	"typeString": "function (bytes4) pure returns (bytes memory)"
																}
															},
															"id": 211,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "2008:62:2",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_contract$_IERC20_$77",
																"typeString": "contract IERC20"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"id": 202,
														"name": "_callOptionalReturn",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 393,
														"src": "1981:19:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_contract$_IERC20_$77_$_t_bytes_memory_ptr_$returns$__$",
															"typeString": "function (contract IERC20,bytes memory)"
														}
													},
													"id": 212,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1981:90:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 213,
												"nodeType": "ExpressionStatement",
												"src": "1981:90:2"
											}
										]
									},
									"documentation": {
										"id": 172,
										"nodeType": "StructuredDocumentation",
										"src": "1221:249:2",
										"text": " @dev Deprecated. This function has issues similar to the ones found in\n {IERC20-approve}, and its usage is discouraged.\n Whenever possible, use {safeIncreaseAllowance} and\n {safeDecreaseAllowance} instead."
									},
									"id": 215,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "safeApprove",
									"nameLocation": "1484:11:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 180,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 175,
												"mutability": "mutable",
												"name": "token",
												"nameLocation": "1512:5:2",
												"nodeType": "VariableDeclaration",
												"scope": 215,
												"src": "1505:12:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_contract$_IERC20_$77",
													"typeString": "contract IERC20"
												},
												"typeName": {
													"id": 174,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 173,
														"name": "IERC20",
														"nameLocations": [
															"1505:6:2"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 77,
														"src": "1505:6:2"
													},
													"referencedDeclaration": 77,
													"src": "1505:6:2",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_IERC20_$77",
														"typeString": "contract IERC20"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 177,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "1535:7:2",
												"nodeType": "VariableDeclaration",
												"scope": 215,
												"src": "1527:15:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 176,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1527:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 179,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "1560:5:2",
												"nodeType": "VariableDeclaration",
												"scope": 215,
												"src": "1552:13:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 178,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1552:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1495:76:2"
									},
									"returnParameters": {
										"id": 181,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1581:0:2"
									},
									"scope": 394,
									"src": "1475:603:2",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 250,
										"nodeType": "Block",
										"src": "2200:194:2",
										"statements": [
											{
												"assignments": [
													226
												],
												"declarations": [
													{
														"constant": false,
														"id": 226,
														"mutability": "mutable",
														"name": "newAllowance",
														"nameLocation": "2218:12:2",
														"nodeType": "VariableDeclaration",
														"scope": 250,
														"src": "2210:20:2",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 225,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "2210:7:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 237,
												"initialValue": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 236,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"arguments": [
															{
																"arguments": [
																	{
																		"id": 231,
																		"name": "this",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 4294967268,
																		"src": "2257:4:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_contract$_SafeERC20_$394",
																			"typeString": "library SafeERC20"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_contract$_SafeERC20_$394",
																			"typeString": "library SafeERC20"
																		}
																	],
																	"id": 230,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "2249:7:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_address_$",
																		"typeString": "type(address)"
																	},
																	"typeName": {
																		"id": 229,
																		"name": "address",
																		"nodeType": "ElementaryTypeName",
																		"src": "2249:7:2",
																		"typeDescriptions": {}
																	}
																},
																"id": 232,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "typeConversion",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "2249:13:2",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															{
																"id": 233,
																"name": "spender",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 220,
																"src": "2264:7:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																},
																{
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															],
															"expression": {
																"id": 227,
																"name": "token",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 218,
																"src": "2233:5:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_contract$_IERC20_$77",
																	"typeString": "contract IERC20"
																}
															},
															"id": 228,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "2239:9:2",
															"memberName": "allowance",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 54,
															"src": "2233:15:2",
															"typeDescriptions": {
																"typeIdentifier": "t_function_external_view$_t_address_$_t_address_$returns$_t_uint256_$",
																"typeString": "function (address,address) view external returns (uint256)"
															}
														},
														"id": 234,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "2233:39:2",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "+",
													"rightExpression": {
														"id": 235,
														"name": "value",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 222,
														"src": "2275:5:2",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "2233:47:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "2210:70:2"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 239,
															"name": "token",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 218,
															"src": "2310:5:2",
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_IERC20_$77",
																"typeString": "contract IERC20"
															}
														},
														{
															"arguments": [
																{
																	"expression": {
																		"expression": {
																			"id": 242,
																			"name": "token",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 218,
																			"src": "2340:5:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_contract$_IERC20_$77",
																				"typeString": "contract IERC20"
																			}
																		},
																		"id": 243,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberLocation": "2346:7:2",
																		"memberName": "approve",
																		"nodeType": "MemberAccess",
																		"referencedDeclaration": 64,
																		"src": "2340:13:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$",
																			"typeString": "function (address,uint256) external returns (bool)"
																		}
																	},
																	"id": 244,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberLocation": "2354:8:2",
																	"memberName": "selector",
																	"nodeType": "MemberAccess",
																	"src": "2340:22:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bytes4",
																		"typeString": "bytes4"
																	}
																},
																{
																	"id": 245,
																	"name": "spender",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 220,
																	"src": "2364:7:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																{
																	"id": 246,
																	"name": "newAllowance",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 226,
																	"src": "2373:12:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_bytes4",
																		"typeString": "bytes4"
																	},
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	},
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																],
																"expression": {
																	"id": 240,
																	"name": "abi",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967295,
																	"src": "2317:3:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_abi",
																		"typeString": "abi"
																	}
																},
																"id": 241,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"memberLocation": "2321:18:2",
																"memberName": "encodeWithSelector",
																"nodeType": "MemberAccess",
																"src": "2317:22:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_abiencodewithselector_pure$_t_bytes4_$returns$_t_bytes_memory_ptr_$",
																	"typeString": "function (bytes4) pure returns (bytes memory)"
																}
															},
															"id": 247,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "2317:69:2",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_contract$_IERC20_$77",
																"typeString": "contract IERC20"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"id": 238,
														"name": "_callOptionalReturn",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 393,
														"src": "2290:19:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_contract$_IERC20_$77_$_t_bytes_memory_ptr_$returns$__$",
															"typeString": "function (contract IERC20,bytes memory)"
														}
													},
													"id": 248,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2290:97:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 249,
												"nodeType": "ExpressionStatement",
												"src": "2290:97:2"
											}
										]
									},
									"id": 251,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "safeIncreaseAllowance",
									"nameLocation": "2093:21:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 223,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 218,
												"mutability": "mutable",
												"name": "token",
												"nameLocation": "2131:5:2",
												"nodeType": "VariableDeclaration",
												"scope": 251,
												"src": "2124:12:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_contract$_IERC20_$77",
													"typeString": "contract IERC20"
												},
												"typeName": {
													"id": 217,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 216,
														"name": "IERC20",
														"nameLocations": [
															"2124:6:2"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 77,
														"src": "2124:6:2"
													},
													"referencedDeclaration": 77,
													"src": "2124:6:2",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_IERC20_$77",
														"typeString": "contract IERC20"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 220,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "2154:7:2",
												"nodeType": "VariableDeclaration",
												"scope": 251,
												"src": "2146:15:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 219,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2146:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 222,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "2179:5:2",
												"nodeType": "VariableDeclaration",
												"scope": 251,
												"src": "2171:13:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 221,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2171:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2114:76:2"
									},
									"returnParameters": {
										"id": 224,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2200:0:2"
									},
									"scope": 394,
									"src": "2084:310:2",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 298,
										"nodeType": "Block",
										"src": "2516:370:2",
										"statements": [
											{
												"id": 297,
												"nodeType": "UncheckedBlock",
												"src": "2526:354:2",
												"statements": [
													{
														"assignments": [
															262
														],
														"declarations": [
															{
																"constant": false,
																"id": 262,
																"mutability": "mutable",
																"name": "oldAllowance",
																"nameLocation": "2558:12:2",
																"nodeType": "VariableDeclaration",
																"scope": 297,
																"src": "2550:20:2",
																"stateVariable": false,
																"storageLocation": "default",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"typeName": {
																	"id": 261,
																	"name": "uint256",
																	"nodeType": "ElementaryTypeName",
																	"src": "2550:7:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"visibility": "internal"
															}
														],
														"id": 271,
														"initialValue": {
															"arguments": [
																{
																	"arguments": [
																		{
																			"id": 267,
																			"name": "this",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 4294967268,
																			"src": "2597:4:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_contract$_SafeERC20_$394",
																				"typeString": "library SafeERC20"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_contract$_SafeERC20_$394",
																				"typeString": "library SafeERC20"
																			}
																		],
																		"id": 266,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"lValueRequested": false,
																		"nodeType": "ElementaryTypeNameExpression",
																		"src": "2589:7:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_address_$",
																			"typeString": "type(address)"
																		},
																		"typeName": {
																			"id": 265,
																			"name": "address",
																			"nodeType": "ElementaryTypeName",
																			"src": "2589:7:2",
																			"typeDescriptions": {}
																		}
																	},
																	"id": 268,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "typeConversion",
																	"lValueRequested": false,
																	"nameLocations": [],
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "2589:13:2",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																{
																	"id": 269,
																	"name": "spender",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 256,
																	"src": "2604:7:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	},
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																],
																"expression": {
																	"id": 263,
																	"name": "token",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 254,
																	"src": "2573:5:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_contract$_IERC20_$77",
																		"typeString": "contract IERC20"
																	}
																},
																"id": 264,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "2579:9:2",
																"memberName": "allowance",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 54,
																"src": "2573:15:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_external_view$_t_address_$_t_address_$returns$_t_uint256_$",
																	"typeString": "function (address,address) view external returns (uint256)"
																}
															},
															"id": 270,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "2573:39:2",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "VariableDeclarationStatement",
														"src": "2550:62:2"
													},
													{
														"expression": {
															"arguments": [
																{
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 275,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 273,
																		"name": "oldAllowance",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 262,
																		"src": "2634:12:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": ">=",
																	"rightExpression": {
																		"id": 274,
																		"name": "value",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 258,
																		"src": "2650:5:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "2634:21:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	}
																},
																{
																	"hexValue": "5361666545524332303a2064656372656173656420616c6c6f77616e63652062656c6f77207a65726f",
																	"id": 276,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "string",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "2657:43:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_stringliteral_2c3af60974a758b7e72e108c9bf0943ecc9e4f2e8af4695da5f52fbf57a63d3a",
																		"typeString": "literal_string \"SafeERC20: decreased allowance below zero\""
																	},
																	"value": "SafeERC20: decreased allowance below zero"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	},
																	{
																		"typeIdentifier": "t_stringliteral_2c3af60974a758b7e72e108c9bf0943ecc9e4f2e8af4695da5f52fbf57a63d3a",
																		"typeString": "literal_string \"SafeERC20: decreased allowance below zero\""
																	}
																],
																"id": 272,
																"name": "require",
																"nodeType": "Identifier",
																"overloadedDeclarations": [
																	4294967278,
																	4294967278
																],
																"referencedDeclaration": 4294967278,
																"src": "2626:7:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
																	"typeString": "function (bool,string memory) pure"
																}
															},
															"id": 277,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "2626:75:2",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_tuple$__$",
																"typeString": "tuple()"
															}
														},
														"id": 278,
														"nodeType": "ExpressionStatement",
														"src": "2626:75:2"
													},
													{
														"assignments": [
															280
														],
														"declarations": [
															{
																"constant": false,
																"id": 280,
																"mutability": "mutable",
																"name": "newAllowance",
																"nameLocation": "2723:12:2",
																"nodeType": "VariableDeclaration",
																"scope": 297,
																"src": "2715:20:2",
																"stateVariable": false,
																"storageLocation": "default",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"typeName": {
																	"id": 279,
																	"name": "uint256",
																	"nodeType": "ElementaryTypeName",
																	"src": "2715:7:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"visibility": "internal"
															}
														],
														"id": 284,
														"initialValue": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 283,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 281,
																"name": "oldAllowance",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 262,
																"src": "2738:12:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "-",
															"rightExpression": {
																"id": 282,
																"name": "value",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 258,
																"src": "2753:5:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "2738:20:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "VariableDeclarationStatement",
														"src": "2715:43:2"
													},
													{
														"expression": {
															"arguments": [
																{
																	"id": 286,
																	"name": "token",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 254,
																	"src": "2792:5:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_contract$_IERC20_$77",
																		"typeString": "contract IERC20"
																	}
																},
																{
																	"arguments": [
																		{
																			"expression": {
																				"expression": {
																					"id": 289,
																					"name": "token",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 254,
																					"src": "2822:5:2",
																					"typeDescriptions": {
																						"typeIdentifier": "t_contract$_IERC20_$77",
																						"typeString": "contract IERC20"
																					}
																				},
																				"id": 290,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"memberLocation": "2828:7:2",
																				"memberName": "approve",
																				"nodeType": "MemberAccess",
																				"referencedDeclaration": 64,
																				"src": "2822:13:2",
																				"typeDescriptions": {
																					"typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$",
																					"typeString": "function (address,uint256) external returns (bool)"
																				}
																			},
																			"id": 291,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"memberLocation": "2836:8:2",
																			"memberName": "selector",
																			"nodeType": "MemberAccess",
																			"src": "2822:22:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_bytes4",
																				"typeString": "bytes4"
																			}
																		},
																		{
																			"id": 292,
																			"name": "spender",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 256,
																			"src": "2846:7:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		},
																		{
																			"id": 293,
																			"name": "newAllowance",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 280,
																			"src": "2855:12:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_bytes4",
																				"typeString": "bytes4"
																			},
																			{
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			},
																			{
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		],
																		"expression": {
																			"id": 287,
																			"name": "abi",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 4294967295,
																			"src": "2799:3:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_magic_abi",
																				"typeString": "abi"
																			}
																		},
																		"id": 288,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"lValueRequested": false,
																		"memberLocation": "2803:18:2",
																		"memberName": "encodeWithSelector",
																		"nodeType": "MemberAccess",
																		"src": "2799:22:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_abiencodewithselector_pure$_t_bytes4_$returns$_t_bytes_memory_ptr_$",
																			"typeString": "function (bytes4) pure returns (bytes memory)"
																		}
																	},
																	"id": 294,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "functionCall",
																	"lValueRequested": false,
																	"nameLocations": [],
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "2799:69:2",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_bytes_memory_ptr",
																		"typeString": "bytes memory"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_contract$_IERC20_$77",
																		"typeString": "contract IERC20"
																	},
																	{
																		"typeIdentifier": "t_bytes_memory_ptr",
																		"typeString": "bytes memory"
																	}
																],
																"id": 285,
																"name": "_callOptionalReturn",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 393,
																"src": "2772:19:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_nonpayable$_t_contract$_IERC20_$77_$_t_bytes_memory_ptr_$returns$__$",
																	"typeString": "function (contract IERC20,bytes memory)"
																}
															},
															"id": 295,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "2772:97:2",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_tuple$__$",
																"typeString": "tuple()"
															}
														},
														"id": 296,
														"nodeType": "ExpressionStatement",
														"src": "2772:97:2"
													}
												]
											}
										]
									},
									"id": 299,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "safeDecreaseAllowance",
									"nameLocation": "2409:21:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 259,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 254,
												"mutability": "mutable",
												"name": "token",
												"nameLocation": "2447:5:2",
												"nodeType": "VariableDeclaration",
												"scope": 299,
												"src": "2440:12:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_contract$_IERC20_$77",
													"typeString": "contract IERC20"
												},
												"typeName": {
													"id": 253,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 252,
														"name": "IERC20",
														"nameLocations": [
															"2440:6:2"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 77,
														"src": "2440:6:2"
													},
													"referencedDeclaration": 77,
													"src": "2440:6:2",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_IERC20_$77",
														"typeString": "contract IERC20"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 256,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "2470:7:2",
												"nodeType": "VariableDeclaration",
												"scope": 299,
												"src": "2462:15:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 255,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2462:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 258,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "2495:5:2",
												"nodeType": "VariableDeclaration",
												"scope": 299,
												"src": "2487:13:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 257,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2487:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2430:76:2"
									},
									"returnParameters": {
										"id": 260,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2516:0:2"
									},
									"scope": 394,
									"src": "2400:486:2",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 354,
										"nodeType": "Block",
										"src": "3107:257:2",
										"statements": [
											{
												"assignments": [
													320
												],
												"declarations": [
													{
														"constant": false,
														"id": 320,
														"mutability": "mutable",
														"name": "nonceBefore",
														"nameLocation": "3125:11:2",
														"nodeType": "VariableDeclaration",
														"scope": 354,
														"src": "3117:19:2",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 319,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "3117:7:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 325,
												"initialValue": {
													"arguments": [
														{
															"id": 323,
															"name": "owner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 304,
															"src": "3152:5:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"expression": {
															"id": 321,
															"name": "token",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 302,
															"src": "3139:5:2",
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_IERC20Permit_$113",
																"typeString": "contract IERC20Permit"
															}
														},
														"id": 322,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "3145:6:2",
														"memberName": "nonces",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 106,
														"src": "3139:12:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_external_view$_t_address_$returns$_t_uint256_$",
															"typeString": "function (address) view external returns (uint256)"
														}
													},
													"id": 324,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3139:19:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "3117:41:2"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 329,
															"name": "owner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 304,
															"src": "3181:5:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 330,
															"name": "spender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 306,
															"src": "3188:7:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 331,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 308,
															"src": "3197:5:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"id": 332,
															"name": "deadline",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 310,
															"src": "3204:8:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"id": 333,
															"name": "v",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 312,
															"src": "3214:1:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint8",
																"typeString": "uint8"
															}
														},
														{
															"id": 334,
															"name": "r",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 314,
															"src": "3217:1:2",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														},
														{
															"id": 335,
															"name": "s",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 316,
															"src": "3220:1:2",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_uint8",
																"typeString": "uint8"
															},
															{
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															},
															{
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														],
														"expression": {
															"id": 326,
															"name": "token",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 302,
															"src": "3168:5:2",
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_IERC20Permit_$113",
																"typeString": "contract IERC20Permit"
															}
														},
														"id": 328,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "3174:6:2",
														"memberName": "permit",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 98,
														"src": "3168:12:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_address_$_t_uint256_$_t_uint256_$_t_uint8_$_t_bytes32_$_t_bytes32_$returns$__$",
															"typeString": "function (address,address,uint256,uint256,uint8,bytes32,bytes32) external"
														}
													},
													"id": 336,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3168:54:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 337,
												"nodeType": "ExpressionStatement",
												"src": "3168:54:2"
											},
											{
												"assignments": [
													339
												],
												"declarations": [
													{
														"constant": false,
														"id": 339,
														"mutability": "mutable",
														"name": "nonceAfter",
														"nameLocation": "3240:10:2",
														"nodeType": "VariableDeclaration",
														"scope": 354,
														"src": "3232:18:2",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 338,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "3232:7:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 344,
												"initialValue": {
													"arguments": [
														{
															"id": 342,
															"name": "owner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 304,
															"src": "3266:5:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"expression": {
															"id": 340,
															"name": "token",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 302,
															"src": "3253:5:2",
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_IERC20Permit_$113",
																"typeString": "contract IERC20Permit"
															}
														},
														"id": 341,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "3259:6:2",
														"memberName": "nonces",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 106,
														"src": "3253:12:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_external_view$_t_address_$returns$_t_uint256_$",
															"typeString": "function (address) view external returns (uint256)"
														}
													},
													"id": 343,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3253:19:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "3232:40:2"
											},
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 350,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 346,
																"name": "nonceAfter",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 339,
																"src": "3290:10:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 349,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 347,
																	"name": "nonceBefore",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 320,
																	"src": "3304:11:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "+",
																"rightExpression": {
																	"hexValue": "31",
																	"id": 348,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "3318:1:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_1_by_1",
																		"typeString": "int_const 1"
																	},
																	"value": "1"
																},
																"src": "3304:15:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "3290:29:2",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "5361666545524332303a207065726d697420646964206e6f742073756363656564",
															"id": 351,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "3321:35:2",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_cde8e927812a7a656f8f04e89ac4f4113d47940dd2125d11fcb8e0bd36bfc59d",
																"typeString": "literal_string \"SafeERC20: permit did not succeed\""
															},
															"value": "SafeERC20: permit did not succeed"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_cde8e927812a7a656f8f04e89ac4f4113d47940dd2125d11fcb8e0bd36bfc59d",
																"typeString": "literal_string \"SafeERC20: permit did not succeed\""
															}
														],
														"id": 345,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "3282:7:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 352,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3282:75:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 353,
												"nodeType": "ExpressionStatement",
												"src": "3282:75:2"
											}
										]
									},
									"id": 355,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "safePermit",
									"nameLocation": "2901:10:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 317,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 302,
												"mutability": "mutable",
												"name": "token",
												"nameLocation": "2934:5:2",
												"nodeType": "VariableDeclaration",
												"scope": 355,
												"src": "2921:18:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_contract$_IERC20Permit_$113",
													"typeString": "contract IERC20Permit"
												},
												"typeName": {
													"id": 301,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 300,
														"name": "IERC20Permit",
														"nameLocations": [
															"2921:12:2"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 113,
														"src": "2921:12:2"
													},
													"referencedDeclaration": 113,
													"src": "2921:12:2",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_IERC20Permit_$113",
														"typeString": "contract IERC20Permit"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 304,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "2957:5:2",
												"nodeType": "VariableDeclaration",
												"scope": 355,
												"src": "2949:13:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 303,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2949:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 306,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "2980:7:2",
												"nodeType": "VariableDeclaration",
												"scope": 355,
												"src": "2972:15:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 305,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2972:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 308,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "3005:5:2",
												"nodeType": "VariableDeclaration",
												"scope": 355,
												"src": "2997:13:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 307,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2997:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 310,
												"mutability": "mutable",
												"name": "deadline",
												"nameLocation": "3028:8:2",
												"nodeType": "VariableDeclaration",
												"scope": 355,
												"src": "3020:16:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 309,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3020:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 312,
												"mutability": "mutable",
												"name": "v",
												"nameLocation": "3052:1:2",
												"nodeType": "VariableDeclaration",
												"scope": 355,
												"src": "3046:7:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint8",
													"typeString": "uint8"
												},
												"typeName": {
													"id": 311,
													"name": "uint8",
													"nodeType": "ElementaryTypeName",
													"src": "3046:5:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint8",
														"typeString": "uint8"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 314,
												"mutability": "mutable",
												"name": "r",
												"nameLocation": "3071:1:2",
												"nodeType": "VariableDeclaration",
												"scope": 355,
												"src": "3063:9:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 313,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "3063:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 316,
												"mutability": "mutable",
												"name": "s",
												"nameLocation": "3090:1:2",
												"nodeType": "VariableDeclaration",
												"scope": 355,
												"src": "3082:9:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 315,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "3082:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2911:186:2"
									},
									"returnParameters": {
										"id": 318,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3107:0:2"
									},
									"scope": 394,
									"src": "2892:472:2",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 392,
										"nodeType": "Block",
										"src": "3817:636:2",
										"statements": [
											{
												"assignments": [
													365
												],
												"declarations": [
													{
														"constant": false,
														"id": 365,
														"mutability": "mutable",
														"name": "returndata",
														"nameLocation": "4179:10:2",
														"nodeType": "VariableDeclaration",
														"scope": 392,
														"src": "4166:23:2",
														"stateVariable": false,
														"storageLocation": "memory",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes_memory_ptr",
															"typeString": "bytes"
														},
														"typeName": {
															"id": 364,
															"name": "bytes",
															"nodeType": "ElementaryTypeName",
															"src": "4166:5:2",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_storage_ptr",
																"typeString": "bytes"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 374,
												"initialValue": {
													"arguments": [
														{
															"id": 371,
															"name": "data",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 361,
															"src": "4220:4:2",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														{
															"hexValue": "5361666545524332303a206c6f772d6c6576656c2063616c6c206661696c6564",
															"id": 372,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "4226:34:2",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_47fb62c2c272651d2f0f342bac006756b8ba07f21cc5cb87e0fbb9d50c0c585b",
																"typeString": "literal_string \"SafeERC20: low-level call failed\""
															},
															"value": "SafeERC20: low-level call failed"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															},
															{
																"typeIdentifier": "t_stringliteral_47fb62c2c272651d2f0f342bac006756b8ba07f21cc5cb87e0fbb9d50c0c585b",
																"typeString": "literal_string \"SafeERC20: low-level call failed\""
															}
														],
														"expression": {
															"arguments": [
																{
																	"id": 368,
																	"name": "token",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 359,
																	"src": "4200:5:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_contract$_IERC20_$77",
																		"typeString": "contract IERC20"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_contract$_IERC20_$77",
																		"typeString": "contract IERC20"
																	}
																],
																"id": 367,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "4192:7:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 366,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "4192:7:2",
																	"typeDescriptions": {}
																}
															},
															"id": 369,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "4192:14:2",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"id": 370,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "4207:12:2",
														"memberName": "functionCall",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 484,
														"src": "4192:27:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_bytes_memory_ptr_$_t_string_memory_ptr_$returns$_t_bytes_memory_ptr_$bound_to$_t_address_$",
															"typeString": "function (address,bytes memory,string memory) returns (bytes memory)"
														}
													},
													"id": 373,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4192:69:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_memory_ptr",
														"typeString": "bytes memory"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "4166:95:2"
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 378,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"expression": {
															"id": 375,
															"name": "returndata",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 365,
															"src": "4275:10:2",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														"id": 376,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "4286:6:2",
														"memberName": "length",
														"nodeType": "MemberAccess",
														"src": "4275:17:2",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": ">",
													"rightExpression": {
														"hexValue": "30",
														"id": 377,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "4295:1:2",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "4275:21:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 391,
												"nodeType": "IfStatement",
												"src": "4271:176:2",
												"trueBody": {
													"id": 390,
													"nodeType": "Block",
													"src": "4298:149:2",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"id": 382,
																				"name": "returndata",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 365,
																				"src": "4370:10:2",
																				"typeDescriptions": {
																					"typeIdentifier": "t_bytes_memory_ptr",
																					"typeString": "bytes memory"
																				}
																			},
																			{
																				"components": [
																					{
																						"id": 384,
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": true,
																						"lValueRequested": false,
																						"nodeType": "ElementaryTypeNameExpression",
																						"src": "4383:4:2",
																						"typeDescriptions": {
																							"typeIdentifier": "t_type$_t_bool_$",
																							"typeString": "type(bool)"
																						},
																						"typeName": {
																							"id": 383,
																							"name": "bool",
																							"nodeType": "ElementaryTypeName",
																							"src": "4383:4:2",
																							"typeDescriptions": {}
																						}
																					}
																				],
																				"id": 385,
																				"isConstant": false,
																				"isInlineArray": false,
																				"isLValue": false,
																				"isPure": true,
																				"lValueRequested": false,
																				"nodeType": "TupleExpression",
																				"src": "4382:6:2",
																				"typeDescriptions": {
																					"typeIdentifier": "t_type$_t_bool_$",
																					"typeString": "type(bool)"
																				}
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_bytes_memory_ptr",
																					"typeString": "bytes memory"
																				},
																				{
																					"typeIdentifier": "t_type$_t_bool_$",
																					"typeString": "type(bool)"
																				}
																			],
																			"expression": {
																				"id": 380,
																				"name": "abi",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 4294967295,
																				"src": "4359:3:2",
																				"typeDescriptions": {
																					"typeIdentifier": "t_magic_abi",
																					"typeString": "abi"
																				}
																			},
																			"id": 381,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"memberLocation": "4363:6:2",
																			"memberName": "decode",
																			"nodeType": "MemberAccess",
																			"src": "4359:10:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_function_abidecode_pure$__$returns$__$",
																				"typeString": "function () pure"
																			}
																		},
																		"id": 386,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "functionCall",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "4359:30:2",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		}
																	},
																	{
																		"hexValue": "5361666545524332303a204552433230206f7065726174696f6e20646964206e6f742073756363656564",
																		"id": 387,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "string",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "4391:44:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_stringliteral_e11ad79d1e4a7f2e5f376964cb99e8e8f7904e3fc16a109f7a7ecb9aa7956dcd",
																			"typeString": "literal_string \"SafeERC20: ERC20 operation did not succeed\""
																		},
																		"value": "SafeERC20: ERC20 operation did not succeed"
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		},
																		{
																			"typeIdentifier": "t_stringliteral_e11ad79d1e4a7f2e5f376964cb99e8e8f7904e3fc16a109f7a7ecb9aa7956dcd",
																			"typeString": "literal_string \"SafeERC20: ERC20 operation did not succeed\""
																		}
																	],
																	"id": 379,
																	"name": "require",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [
																		4294967278,
																		4294967278
																	],
																	"referencedDeclaration": 4294967278,
																	"src": "4351:7:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
																		"typeString": "function (bool,string memory) pure"
																	}
																},
																"id": 388,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "4351:85:2",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 389,
															"nodeType": "ExpressionStatement",
															"src": "4351:85:2"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 356,
										"nodeType": "StructuredDocumentation",
										"src": "3370:372:2",
										"text": " @dev Imitates a Solidity high-level call (i.e. a regular function call to a contract), relaxing the requirement\n on the return value: the return value is optional (but if data is returned, it must not be false).\n @param token The token targeted by the call.\n @param data The call data (encoded using abi.encode or one of its variants)."
									},
									"id": 393,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_callOptionalReturn",
									"nameLocation": "3756:19:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 362,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 359,
												"mutability": "mutable",
												"name": "token",
												"nameLocation": "3783:5:2",
												"nodeType": "VariableDeclaration",
												"scope": 393,
												"src": "3776:12:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_contract$_IERC20_$77",
													"typeString": "contract IERC20"
												},
												"typeName": {
													"id": 358,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 357,
														"name": "IERC20",
														"nameLocations": [
															"3776:6:2"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 77,
														"src": "3776:6:2"
													},
													"referencedDeclaration": 77,
													"src": "3776:6:2",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_IERC20_$77",
														"typeString": "contract IERC20"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 361,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "3803:4:2",
												"nodeType": "VariableDeclaration",
												"scope": 393,
												"src": "3790:17:2",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 360,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "3790:5:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3775:33:2"
									},
									"returnParameters": {
										"id": 363,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3817:0:2"
									},
									"scope": 394,
									"src": "3747:706:2",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "private"
								}
							],
							"scope": 395,
							"src": "707:3748:2",
							"usedErrors": []
						}
					],
					"src": "115:4341:2"
				},
				"id": 2
			},
			"@openzeppelin/contracts/utils/Address.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/utils/Address.sol",
					"exportedSymbols": {
						"Address": [
							724
						]
					},
					"id": 725,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 396,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".1"
							],
							"nodeType": "PragmaDirective",
							"src": "101:23:3"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "Address",
							"contractDependencies": [],
							"contractKind": "library",
							"documentation": {
								"id": 397,
								"nodeType": "StructuredDocumentation",
								"src": "126:67:3",
								"text": " @dev Collection of functions related to the address type"
							},
							"fullyImplemented": true,
							"id": 724,
							"linearizedBaseContracts": [
								724
							],
							"name": "Address",
							"nameLocation": "202:7:3",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"body": {
										"id": 411,
										"nodeType": "Block",
										"src": "1241:254:3",
										"statements": [
											{
												"expression": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 409,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"expression": {
															"expression": {
																"id": 405,
																"name": "account",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 400,
																"src": "1465:7:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"id": 406,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "1473:4:3",
															"memberName": "code",
															"nodeType": "MemberAccess",
															"src": "1465:12:3",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														"id": 407,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "1478:6:3",
														"memberName": "length",
														"nodeType": "MemberAccess",
														"src": "1465:19:3",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": ">",
													"rightExpression": {
														"hexValue": "30",
														"id": 408,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "1487:1:3",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "1465:23:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"functionReturnParameters": 404,
												"id": 410,
												"nodeType": "Return",
												"src": "1458:30:3"
											}
										]
									},
									"documentation": {
										"id": 398,
										"nodeType": "StructuredDocumentation",
										"src": "216:954:3",
										"text": " @dev Returns true if `account` is a contract.\n [IMPORTANT]\n ====\n It is unsafe to assume that an address for which this function returns\n false is an externally-owned account (EOA) and not a contract.\n Among others, `isContract` will return false for the following\n types of addresses:\n  - an externally-owned account\n  - a contract in construction\n  - an address where a contract will be created\n  - an address where a contract lived, but was destroyed\n ====\n [IMPORTANT]\n ====\n You shouldn't rely on `isContract` to protect against flash loan attacks!\n Preventing calls from contracts is highly discouraged. It breaks composability, breaks support for smart wallets\n like Gnosis Safe, and does not provide security since it can be circumvented by calling from a contract\n constructor.\n ===="
									},
									"id": 412,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "isContract",
									"nameLocation": "1184:10:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 401,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 400,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "1203:7:3",
												"nodeType": "VariableDeclaration",
												"scope": 412,
												"src": "1195:15:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 399,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1195:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1194:17:3"
									},
									"returnParameters": {
										"id": 404,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 403,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 412,
												"src": "1235:4:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 402,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "1235:4:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1234:6:3"
									},
									"scope": 724,
									"src": "1175:320:3",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 445,
										"nodeType": "Block",
										"src": "2483:241:3",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 427,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"expression": {
																	"arguments": [
																		{
																			"id": 423,
																			"name": "this",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 4294967268,
																			"src": "2509:4:3",
																			"typeDescriptions": {
																				"typeIdentifier": "t_contract$_Address_$724",
																				"typeString": "library Address"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_contract$_Address_$724",
																				"typeString": "library Address"
																			}
																		],
																		"id": 422,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"lValueRequested": false,
																		"nodeType": "ElementaryTypeNameExpression",
																		"src": "2501:7:3",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_address_$",
																			"typeString": "type(address)"
																		},
																		"typeName": {
																			"id": 421,
																			"name": "address",
																			"nodeType": "ElementaryTypeName",
																			"src": "2501:7:3",
																			"typeDescriptions": {}
																		}
																	},
																	"id": 424,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "typeConversion",
																	"lValueRequested": false,
																	"nameLocations": [],
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "2501:13:3",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"id": 425,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "2515:7:3",
																"memberName": "balance",
																"nodeType": "MemberAccess",
																"src": "2501:21:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">=",
															"rightExpression": {
																"id": 426,
																"name": "amount",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 417,
																"src": "2526:6:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "2501:31:3",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "416464726573733a20696e73756666696369656e742062616c616e6365",
															"id": 428,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "2534:31:3",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_5597a22abd0ef5332f8053862eb236db7590f17e2b93a53f63a103becfb561f9",
																"typeString": "literal_string \"Address: insufficient balance\""
															},
															"value": "Address: insufficient balance"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_5597a22abd0ef5332f8053862eb236db7590f17e2b93a53f63a103becfb561f9",
																"typeString": "literal_string \"Address: insufficient balance\""
															}
														],
														"id": 420,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "2493:7:3",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 429,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2493:73:3",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 430,
												"nodeType": "ExpressionStatement",
												"src": "2493:73:3"
											},
											{
												"assignments": [
													432,
													null
												],
												"declarations": [
													{
														"constant": false,
														"id": 432,
														"mutability": "mutable",
														"name": "success",
														"nameLocation": "2583:7:3",
														"nodeType": "VariableDeclaration",
														"scope": 445,
														"src": "2578:12:3",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"typeName": {
															"id": 431,
															"name": "bool",
															"nodeType": "ElementaryTypeName",
															"src": "2578:4:3",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"visibility": "internal"
													},
													null
												],
												"id": 439,
												"initialValue": {
													"arguments": [
														{
															"hexValue": "",
															"id": 437,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "2626:2:3",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
																"typeString": "literal_string \"\""
															},
															"value": ""
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
																"typeString": "literal_string \"\""
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
																	"typeString": "literal_string \"\""
																}
															],
															"expression": {
																"id": 433,
																"name": "recipient",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 415,
																"src": "2596:9:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_address_payable",
																	"typeString": "address payable"
																}
															},
															"id": 434,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "2606:4:3",
															"memberName": "call",
															"nodeType": "MemberAccess",
															"src": "2596:14:3",
															"typeDescriptions": {
																"typeIdentifier": "t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$",
																"typeString": "function (bytes memory) payable returns (bool,bytes memory)"
															}
														},
														"id": 436,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"names": [
															"value"
														],
														"nodeType": "FunctionCallOptions",
														"options": [
															{
																"id": 435,
																"name": "amount",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 417,
																"src": "2618:6:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"src": "2596:29:3",
														"typeDescriptions": {
															"typeIdentifier": "t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$value",
															"typeString": "function (bytes memory) payable returns (bool,bytes memory)"
														}
													},
													"id": 438,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2596:33:3",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$_t_bool_$_t_bytes_memory_ptr_$",
														"typeString": "tuple(bool,bytes memory)"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "2577:52:3"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 441,
															"name": "success",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 432,
															"src": "2647:7:3",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "416464726573733a20756e61626c6520746f2073656e642076616c75652c20726563697069656e74206d61792068617665207265766572746564",
															"id": 442,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "2656:60:3",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_51ddaa38748c0a1144620fb5bfe8edab31ea437571ad591a7734bbfd0429aeae",
																"typeString": "literal_string \"Address: unable to send value, recipient may have reverted\""
															},
															"value": "Address: unable to send value, recipient may have reverted"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_51ddaa38748c0a1144620fb5bfe8edab31ea437571ad591a7734bbfd0429aeae",
																"typeString": "literal_string \"Address: unable to send value, recipient may have reverted\""
															}
														],
														"id": 440,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "2639:7:3",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 443,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2639:78:3",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 444,
												"nodeType": "ExpressionStatement",
												"src": "2639:78:3"
											}
										]
									},
									"documentation": {
										"id": 413,
										"nodeType": "StructuredDocumentation",
										"src": "1501:906:3",
										"text": " @dev Replacement for Solidity's `transfer`: sends `amount` wei to\n `recipient`, forwarding all available gas and reverting on errors.\n https://eips.ethereum.org/EIPS/eip-1884[EIP1884] increases the gas cost\n of certain opcodes, possibly making contracts go over the 2300 gas limit\n imposed by `transfer`, making them unable to receive funds via\n `transfer`. {sendValue} removes this limitation.\n https://diligence.consensys.net/posts/2019/09/stop-using-soliditys-transfer-now/[Learn more].\n IMPORTANT: because control is transferred to `recipient`, care must be\n taken to not create reentrancy vulnerabilities. Consider using\n {ReentrancyGuard} or the\n https://solidity.readthedocs.io/en/v0.5.11/security-considerations.html#use-the-checks-effects-interactions-pattern[checks-effects-interactions pattern]."
									},
									"id": 446,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "sendValue",
									"nameLocation": "2421:9:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 418,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 415,
												"mutability": "mutable",
												"name": "recipient",
												"nameLocation": "2447:9:3",
												"nodeType": "VariableDeclaration",
												"scope": 446,
												"src": "2431:25:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address_payable",
													"typeString": "address payable"
												},
												"typeName": {
													"id": 414,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2431:15:3",
													"stateMutability": "payable",
													"typeDescriptions": {
														"typeIdentifier": "t_address_payable",
														"typeString": "address payable"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 417,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "2466:6:3",
												"nodeType": "VariableDeclaration",
												"scope": 446,
												"src": "2458:14:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 416,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2458:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2430:43:3"
									},
									"returnParameters": {
										"id": 419,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2483:0:3"
									},
									"scope": 724,
									"src": "2412:312:3",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 463,
										"nodeType": "Block",
										"src": "3555:96:3",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 457,
															"name": "target",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 449,
															"src": "3594:6:3",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 458,
															"name": "data",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 451,
															"src": "3602:4:3",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														{
															"hexValue": "30",
															"id": 459,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "3608:1:3",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_0_by_1",
																"typeString": "int_const 0"
															},
															"value": "0"
														},
														{
															"hexValue": "416464726573733a206c6f772d6c6576656c2063616c6c206661696c6564",
															"id": 460,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "3611:32:3",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_24d7ab5d382116e64324f19950ca9340b8af1ddeb09a8d026e0a3c6a01dcc9df",
																"typeString": "literal_string \"Address: low-level call failed\""
															},
															"value": "Address: low-level call failed"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															},
															{
																"typeIdentifier": "t_rational_0_by_1",
																"typeString": "int_const 0"
															},
															{
																"typeIdentifier": "t_stringliteral_24d7ab5d382116e64324f19950ca9340b8af1ddeb09a8d026e0a3c6a01dcc9df",
																"typeString": "literal_string \"Address: low-level call failed\""
															}
														],
														"id": 456,
														"name": "functionCallWithValue",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															504,
															548
														],
														"referencedDeclaration": 548,
														"src": "3572:21:3",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_bytes_memory_ptr_$_t_uint256_$_t_string_memory_ptr_$returns$_t_bytes_memory_ptr_$",
															"typeString": "function (address,bytes memory,uint256,string memory) returns (bytes memory)"
														}
													},
													"id": 461,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3572:72:3",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_memory_ptr",
														"typeString": "bytes memory"
													}
												},
												"functionReturnParameters": 455,
												"id": 462,
												"nodeType": "Return",
												"src": "3565:79:3"
											}
										]
									},
									"documentation": {
										"id": 447,
										"nodeType": "StructuredDocumentation",
										"src": "2730:731:3",
										"text": " @dev Performs a Solidity function call using a low level `call`. A\n plain `call` is an unsafe replacement for a function call: use this\n function instead.\n If `target` reverts with a revert reason, it is bubbled up by this\n function (like regular Solidity function calls).\n Returns the raw returned data. To convert to the expected return value,\n use https://solidity.readthedocs.io/en/latest/units-and-global-variables.html?highlight=abi.decode#abi-encoding-and-decoding-functions[`abi.decode`].\n Requirements:\n - `target` must be a contract.\n - calling `target` with `data` must not revert.\n _Available since v3.1._"
									},
									"id": 464,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "functionCall",
									"nameLocation": "3475:12:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 452,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 449,
												"mutability": "mutable",
												"name": "target",
												"nameLocation": "3496:6:3",
												"nodeType": "VariableDeclaration",
												"scope": 464,
												"src": "3488:14:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 448,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3488:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 451,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "3517:4:3",
												"nodeType": "VariableDeclaration",
												"scope": 464,
												"src": "3504:17:3",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 450,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "3504:5:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3487:35:3"
									},
									"returnParameters": {
										"id": 455,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 454,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 464,
												"src": "3541:12:3",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 453,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "3541:5:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3540:14:3"
									},
									"scope": 724,
									"src": "3466:185:3",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 483,
										"nodeType": "Block",
										"src": "4020:76:3",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 477,
															"name": "target",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 467,
															"src": "4059:6:3",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 478,
															"name": "data",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 469,
															"src": "4067:4:3",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														{
															"hexValue": "30",
															"id": 479,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "4073:1:3",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_0_by_1",
																"typeString": "int_const 0"
															},
															"value": "0"
														},
														{
															"id": 480,
															"name": "errorMessage",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 471,
															"src": "4076:12:3",
															"typeDescriptions": {
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															},
															{
																"typeIdentifier": "t_rational_0_by_1",
																"typeString": "int_const 0"
															},
															{
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														],
														"id": 476,
														"name": "functionCallWithValue",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															504,
															548
														],
														"referencedDeclaration": 548,
														"src": "4037:21:3",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_bytes_memory_ptr_$_t_uint256_$_t_string_memory_ptr_$returns$_t_bytes_memory_ptr_$",
															"typeString": "function (address,bytes memory,uint256,string memory) returns (bytes memory)"
														}
													},
													"id": 481,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4037:52:3",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_memory_ptr",
														"typeString": "bytes memory"
													}
												},
												"functionReturnParameters": 475,
												"id": 482,
												"nodeType": "Return",
												"src": "4030:59:3"
											}
										]
									},
									"documentation": {
										"id": 465,
										"nodeType": "StructuredDocumentation",
										"src": "3657:211:3",
										"text": " @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`], but with\n `errorMessage` as a fallback revert reason when `target` reverts.\n _Available since v3.1._"
									},
									"id": 484,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "functionCall",
									"nameLocation": "3882:12:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 472,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 467,
												"mutability": "mutable",
												"name": "target",
												"nameLocation": "3912:6:3",
												"nodeType": "VariableDeclaration",
												"scope": 484,
												"src": "3904:14:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 466,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3904:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 469,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "3941:4:3",
												"nodeType": "VariableDeclaration",
												"scope": 484,
												"src": "3928:17:3",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 468,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "3928:5:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 471,
												"mutability": "mutable",
												"name": "errorMessage",
												"nameLocation": "3969:12:3",
												"nodeType": "VariableDeclaration",
												"scope": 484,
												"src": "3955:26:3",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 470,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "3955:6:3",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3894:93:3"
									},
									"returnParameters": {
										"id": 475,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 474,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 484,
												"src": "4006:12:3",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 473,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "4006:5:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4005:14:3"
									},
									"scope": 724,
									"src": "3873:223:3",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 503,
										"nodeType": "Block",
										"src": "4601:111:3",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 497,
															"name": "target",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 487,
															"src": "4640:6:3",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 498,
															"name": "data",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 489,
															"src": "4648:4:3",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														{
															"id": 499,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 491,
															"src": "4654:5:3",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"hexValue": "416464726573733a206c6f772d6c6576656c2063616c6c20776974682076616c7565206661696c6564",
															"id": 500,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "4661:43:3",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_88a4a0b5e975840320a0475d4027005235904fdb5ece94df156f3d717cb2dbfc",
																"typeString": "literal_string \"Address: low-level call with value failed\""
															},
															"value": "Address: low-level call with value failed"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_stringliteral_88a4a0b5e975840320a0475d4027005235904fdb5ece94df156f3d717cb2dbfc",
																"typeString": "literal_string \"Address: low-level call with value failed\""
															}
														],
														"id": 496,
														"name": "functionCallWithValue",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															504,
															548
														],
														"referencedDeclaration": 548,
														"src": "4618:21:3",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_bytes_memory_ptr_$_t_uint256_$_t_string_memory_ptr_$returns$_t_bytes_memory_ptr_$",
															"typeString": "function (address,bytes memory,uint256,string memory) returns (bytes memory)"
														}
													},
													"id": 501,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4618:87:3",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_memory_ptr",
														"typeString": "bytes memory"
													}
												},
												"functionReturnParameters": 495,
												"id": 502,
												"nodeType": "Return",
												"src": "4611:94:3"
											}
										]
									},
									"documentation": {
										"id": 485,
										"nodeType": "StructuredDocumentation",
										"src": "4102:351:3",
										"text": " @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\n but also transferring `value` wei to `target`.\n Requirements:\n - the calling contract must have an ETH balance of at least `value`.\n - the called Solidity function must be `payable`.\n _Available since v3.1._"
									},
									"id": 504,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "functionCallWithValue",
									"nameLocation": "4467:21:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 492,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 487,
												"mutability": "mutable",
												"name": "target",
												"nameLocation": "4506:6:3",
												"nodeType": "VariableDeclaration",
												"scope": 504,
												"src": "4498:14:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 486,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4498:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 489,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "4535:4:3",
												"nodeType": "VariableDeclaration",
												"scope": 504,
												"src": "4522:17:3",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 488,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "4522:5:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 491,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "4557:5:3",
												"nodeType": "VariableDeclaration",
												"scope": 504,
												"src": "4549:13:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 490,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4549:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4488:80:3"
									},
									"returnParameters": {
										"id": 495,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 494,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 504,
												"src": "4587:12:3",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 493,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "4587:5:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4586:14:3"
									},
									"scope": 724,
									"src": "4458:254:3",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 547,
										"nodeType": "Block",
										"src": "5139:267:3",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 525,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"expression": {
																	"arguments": [
																		{
																			"id": 521,
																			"name": "this",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 4294967268,
																			"src": "5165:4:3",
																			"typeDescriptions": {
																				"typeIdentifier": "t_contract$_Address_$724",
																				"typeString": "library Address"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_contract$_Address_$724",
																				"typeString": "library Address"
																			}
																		],
																		"id": 520,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"lValueRequested": false,
																		"nodeType": "ElementaryTypeNameExpression",
																		"src": "5157:7:3",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_address_$",
																			"typeString": "type(address)"
																		},
																		"typeName": {
																			"id": 519,
																			"name": "address",
																			"nodeType": "ElementaryTypeName",
																			"src": "5157:7:3",
																			"typeDescriptions": {}
																		}
																	},
																	"id": 522,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "typeConversion",
																	"lValueRequested": false,
																	"nameLocations": [],
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "5157:13:3",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"id": 523,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "5171:7:3",
																"memberName": "balance",
																"nodeType": "MemberAccess",
																"src": "5157:21:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">=",
															"rightExpression": {
																"id": 524,
																"name": "value",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 511,
																"src": "5182:5:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "5157:30:3",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "416464726573733a20696e73756666696369656e742062616c616e636520666f722063616c6c",
															"id": 526,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "5189:40:3",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_565f1a77334fc4792800921178c71e4521acffab18ff9e7885b49377ee80ab4c",
																"typeString": "literal_string \"Address: insufficient balance for call\""
															},
															"value": "Address: insufficient balance for call"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_565f1a77334fc4792800921178c71e4521acffab18ff9e7885b49377ee80ab4c",
																"typeString": "literal_string \"Address: insufficient balance for call\""
															}
														],
														"id": 518,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "5149:7:3",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 527,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5149:81:3",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 528,
												"nodeType": "ExpressionStatement",
												"src": "5149:81:3"
											},
											{
												"assignments": [
													530,
													532
												],
												"declarations": [
													{
														"constant": false,
														"id": 530,
														"mutability": "mutable",
														"name": "success",
														"nameLocation": "5246:7:3",
														"nodeType": "VariableDeclaration",
														"scope": 547,
														"src": "5241:12:3",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"typeName": {
															"id": 529,
															"name": "bool",
															"nodeType": "ElementaryTypeName",
															"src": "5241:4:3",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"visibility": "internal"
													},
													{
														"constant": false,
														"id": 532,
														"mutability": "mutable",
														"name": "returndata",
														"nameLocation": "5268:10:3",
														"nodeType": "VariableDeclaration",
														"scope": 547,
														"src": "5255:23:3",
														"stateVariable": false,
														"storageLocation": "memory",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes_memory_ptr",
															"typeString": "bytes"
														},
														"typeName": {
															"id": 531,
															"name": "bytes",
															"nodeType": "ElementaryTypeName",
															"src": "5255:5:3",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_storage_ptr",
																"typeString": "bytes"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 539,
												"initialValue": {
													"arguments": [
														{
															"id": 537,
															"name": "data",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 509,
															"src": "5308:4:3",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_bytes_memory_ptr",
																	"typeString": "bytes memory"
																}
															],
															"expression": {
																"id": 533,
																"name": "target",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 507,
																"src": "5282:6:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"id": 534,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "5289:4:3",
															"memberName": "call",
															"nodeType": "MemberAccess",
															"src": "5282:11:3",
															"typeDescriptions": {
																"typeIdentifier": "t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$",
																"typeString": "function (bytes memory) payable returns (bool,bytes memory)"
															}
														},
														"id": 536,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"names": [
															"value"
														],
														"nodeType": "FunctionCallOptions",
														"options": [
															{
																"id": 535,
																"name": "value",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 511,
																"src": "5301:5:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"src": "5282:25:3",
														"typeDescriptions": {
															"typeIdentifier": "t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$value",
															"typeString": "function (bytes memory) payable returns (bool,bytes memory)"
														}
													},
													"id": 538,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5282:31:3",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$_t_bool_$_t_bytes_memory_ptr_$",
														"typeString": "tuple(bool,bytes memory)"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "5240:73:3"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 541,
															"name": "target",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 507,
															"src": "5357:6:3",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 542,
															"name": "success",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 530,
															"src": "5365:7:3",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"id": 543,
															"name": "returndata",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 532,
															"src": "5374:10:3",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														{
															"id": 544,
															"name": "errorMessage",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 513,
															"src": "5386:12:3",
															"typeDescriptions": {
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															},
															{
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														],
														"id": 540,
														"name": "verifyCallResultFromTarget",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 679,
														"src": "5330:26:3",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_address_$_t_bool_$_t_bytes_memory_ptr_$_t_string_memory_ptr_$returns$_t_bytes_memory_ptr_$",
															"typeString": "function (address,bool,bytes memory,string memory) view returns (bytes memory)"
														}
													},
													"id": 545,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5330:69:3",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_memory_ptr",
														"typeString": "bytes memory"
													}
												},
												"functionReturnParameters": 517,
												"id": 546,
												"nodeType": "Return",
												"src": "5323:76:3"
											}
										]
									},
									"documentation": {
										"id": 505,
										"nodeType": "StructuredDocumentation",
										"src": "4718:237:3",
										"text": " @dev Same as {xref-Address-functionCallWithValue-address-bytes-uint256-}[`functionCallWithValue`], but\n with `errorMessage` as a fallback revert reason when `target` reverts.\n _Available since v3.1._"
									},
									"id": 548,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "functionCallWithValue",
									"nameLocation": "4969:21:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 514,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 507,
												"mutability": "mutable",
												"name": "target",
												"nameLocation": "5008:6:3",
												"nodeType": "VariableDeclaration",
												"scope": 548,
												"src": "5000:14:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 506,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5000:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 509,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "5037:4:3",
												"nodeType": "VariableDeclaration",
												"scope": 548,
												"src": "5024:17:3",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 508,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "5024:5:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 511,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "5059:5:3",
												"nodeType": "VariableDeclaration",
												"scope": 548,
												"src": "5051:13:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 510,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "5051:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 513,
												"mutability": "mutable",
												"name": "errorMessage",
												"nameLocation": "5088:12:3",
												"nodeType": "VariableDeclaration",
												"scope": 548,
												"src": "5074:26:3",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 512,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "5074:6:3",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4990:116:3"
									},
									"returnParameters": {
										"id": 517,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 516,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 548,
												"src": "5125:12:3",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 515,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "5125:5:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5124:14:3"
									},
									"scope": 724,
									"src": "4960:446:3",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 564,
										"nodeType": "Block",
										"src": "5683:97:3",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 559,
															"name": "target",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 551,
															"src": "5719:6:3",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 560,
															"name": "data",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 553,
															"src": "5727:4:3",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														{
															"hexValue": "416464726573733a206c6f772d6c6576656c207374617469632063616c6c206661696c6564",
															"id": 561,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "5733:39:3",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_90ec82aa826a536a4cbfae44ecfa384680faa9a4b77344bce96aa761ad904df0",
																"typeString": "literal_string \"Address: low-level static call failed\""
															},
															"value": "Address: low-level static call failed"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															},
															{
																"typeIdentifier": "t_stringliteral_90ec82aa826a536a4cbfae44ecfa384680faa9a4b77344bce96aa761ad904df0",
																"typeString": "literal_string \"Address: low-level static call failed\""
															}
														],
														"id": 558,
														"name": "functionStaticCall",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															565,
															594
														],
														"referencedDeclaration": 594,
														"src": "5700:18:3",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_address_$_t_bytes_memory_ptr_$_t_string_memory_ptr_$returns$_t_bytes_memory_ptr_$",
															"typeString": "function (address,bytes memory,string memory) view returns (bytes memory)"
														}
													},
													"id": 562,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5700:73:3",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_memory_ptr",
														"typeString": "bytes memory"
													}
												},
												"functionReturnParameters": 557,
												"id": 563,
												"nodeType": "Return",
												"src": "5693:80:3"
											}
										]
									},
									"documentation": {
										"id": 549,
										"nodeType": "StructuredDocumentation",
										"src": "5412:166:3",
										"text": " @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\n but performing a static call.\n _Available since v3.3._"
									},
									"id": 565,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "functionStaticCall",
									"nameLocation": "5592:18:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 554,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 551,
												"mutability": "mutable",
												"name": "target",
												"nameLocation": "5619:6:3",
												"nodeType": "VariableDeclaration",
												"scope": 565,
												"src": "5611:14:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 550,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5611:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 553,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "5640:4:3",
												"nodeType": "VariableDeclaration",
												"scope": 565,
												"src": "5627:17:3",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 552,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "5627:5:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5610:35:3"
									},
									"returnParameters": {
										"id": 557,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 556,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 565,
												"src": "5669:12:3",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 555,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "5669:5:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5668:14:3"
									},
									"scope": 724,
									"src": "5583:197:3",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 593,
										"nodeType": "Block",
										"src": "6122:168:3",
										"statements": [
											{
												"assignments": [
													578,
													580
												],
												"declarations": [
													{
														"constant": false,
														"id": 578,
														"mutability": "mutable",
														"name": "success",
														"nameLocation": "6138:7:3",
														"nodeType": "VariableDeclaration",
														"scope": 593,
														"src": "6133:12:3",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"typeName": {
															"id": 577,
															"name": "bool",
															"nodeType": "ElementaryTypeName",
															"src": "6133:4:3",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"visibility": "internal"
													},
													{
														"constant": false,
														"id": 580,
														"mutability": "mutable",
														"name": "returndata",
														"nameLocation": "6160:10:3",
														"nodeType": "VariableDeclaration",
														"scope": 593,
														"src": "6147:23:3",
														"stateVariable": false,
														"storageLocation": "memory",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes_memory_ptr",
															"typeString": "bytes"
														},
														"typeName": {
															"id": 579,
															"name": "bytes",
															"nodeType": "ElementaryTypeName",
															"src": "6147:5:3",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_storage_ptr",
																"typeString": "bytes"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 585,
												"initialValue": {
													"arguments": [
														{
															"id": 583,
															"name": "data",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 570,
															"src": "6192:4:3",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"expression": {
															"id": 581,
															"name": "target",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 568,
															"src": "6174:6:3",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"id": 582,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "6181:10:3",
														"memberName": "staticcall",
														"nodeType": "MemberAccess",
														"src": "6174:17:3",
														"typeDescriptions": {
															"typeIdentifier": "t_function_barestaticcall_view$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$",
															"typeString": "function (bytes memory) view returns (bool,bytes memory)"
														}
													},
													"id": 584,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "6174:23:3",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$_t_bool_$_t_bytes_memory_ptr_$",
														"typeString": "tuple(bool,bytes memory)"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "6132:65:3"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 587,
															"name": "target",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 568,
															"src": "6241:6:3",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 588,
															"name": "success",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 578,
															"src": "6249:7:3",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"id": 589,
															"name": "returndata",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 580,
															"src": "6258:10:3",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														{
															"id": 590,
															"name": "errorMessage",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 572,
															"src": "6270:12:3",
															"typeDescriptions": {
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															},
															{
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														],
														"id": 586,
														"name": "verifyCallResultFromTarget",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 679,
														"src": "6214:26:3",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_address_$_t_bool_$_t_bytes_memory_ptr_$_t_string_memory_ptr_$returns$_t_bytes_memory_ptr_$",
															"typeString": "function (address,bool,bytes memory,string memory) view returns (bytes memory)"
														}
													},
													"id": 591,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "6214:69:3",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_memory_ptr",
														"typeString": "bytes memory"
													}
												},
												"functionReturnParameters": 576,
												"id": 592,
												"nodeType": "Return",
												"src": "6207:76:3"
											}
										]
									},
									"documentation": {
										"id": 566,
										"nodeType": "StructuredDocumentation",
										"src": "5786:173:3",
										"text": " @dev Same as {xref-Address-functionCall-address-bytes-string-}[`functionCall`],\n but performing a static call.\n _Available since v3.3._"
									},
									"id": 594,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "functionStaticCall",
									"nameLocation": "5973:18:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 573,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 568,
												"mutability": "mutable",
												"name": "target",
												"nameLocation": "6009:6:3",
												"nodeType": "VariableDeclaration",
												"scope": 594,
												"src": "6001:14:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 567,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "6001:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 570,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "6038:4:3",
												"nodeType": "VariableDeclaration",
												"scope": 594,
												"src": "6025:17:3",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 569,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "6025:5:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 572,
												"mutability": "mutable",
												"name": "errorMessage",
												"nameLocation": "6066:12:3",
												"nodeType": "VariableDeclaration",
												"scope": 594,
												"src": "6052:26:3",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 571,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "6052:6:3",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5991:93:3"
									},
									"returnParameters": {
										"id": 576,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 575,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 594,
												"src": "6108:12:3",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 574,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "6108:5:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6107:14:3"
									},
									"scope": 724,
									"src": "5964:326:3",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 610,
										"nodeType": "Block",
										"src": "6566:101:3",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 605,
															"name": "target",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 597,
															"src": "6604:6:3",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 606,
															"name": "data",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 599,
															"src": "6612:4:3",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														{
															"hexValue": "416464726573733a206c6f772d6c6576656c2064656c65676174652063616c6c206661696c6564",
															"id": 607,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "6618:41:3",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_9fdcd12e4b726339b32a442b0a448365d5d85c96b2d2cff917b4f66c63110398",
																"typeString": "literal_string \"Address: low-level delegate call failed\""
															},
															"value": "Address: low-level delegate call failed"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															},
															{
																"typeIdentifier": "t_stringliteral_9fdcd12e4b726339b32a442b0a448365d5d85c96b2d2cff917b4f66c63110398",
																"typeString": "literal_string \"Address: low-level delegate call failed\""
															}
														],
														"id": 604,
														"name": "functionDelegateCall",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															611,
															640
														],
														"referencedDeclaration": 640,
														"src": "6583:20:3",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_bytes_memory_ptr_$_t_string_memory_ptr_$returns$_t_bytes_memory_ptr_$",
															"typeString": "function (address,bytes memory,string memory) returns (bytes memory)"
														}
													},
													"id": 608,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "6583:77:3",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_memory_ptr",
														"typeString": "bytes memory"
													}
												},
												"functionReturnParameters": 603,
												"id": 609,
												"nodeType": "Return",
												"src": "6576:84:3"
											}
										]
									},
									"documentation": {
										"id": 595,
										"nodeType": "StructuredDocumentation",
										"src": "6296:168:3",
										"text": " @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\n but performing a delegate call.\n _Available since v3.4._"
									},
									"id": 611,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "functionDelegateCall",
									"nameLocation": "6478:20:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 600,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 597,
												"mutability": "mutable",
												"name": "target",
												"nameLocation": "6507:6:3",
												"nodeType": "VariableDeclaration",
												"scope": 611,
												"src": "6499:14:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 596,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "6499:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 599,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "6528:4:3",
												"nodeType": "VariableDeclaration",
												"scope": 611,
												"src": "6515:17:3",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 598,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "6515:5:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6498:35:3"
									},
									"returnParameters": {
										"id": 603,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 602,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 611,
												"src": "6552:12:3",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 601,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "6552:5:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6551:14:3"
									},
									"scope": 724,
									"src": "6469:198:3",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 639,
										"nodeType": "Block",
										"src": "7008:170:3",
										"statements": [
											{
												"assignments": [
													624,
													626
												],
												"declarations": [
													{
														"constant": false,
														"id": 624,
														"mutability": "mutable",
														"name": "success",
														"nameLocation": "7024:7:3",
														"nodeType": "VariableDeclaration",
														"scope": 639,
														"src": "7019:12:3",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"typeName": {
															"id": 623,
															"name": "bool",
															"nodeType": "ElementaryTypeName",
															"src": "7019:4:3",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"visibility": "internal"
													},
													{
														"constant": false,
														"id": 626,
														"mutability": "mutable",
														"name": "returndata",
														"nameLocation": "7046:10:3",
														"nodeType": "VariableDeclaration",
														"scope": 639,
														"src": "7033:23:3",
														"stateVariable": false,
														"storageLocation": "memory",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes_memory_ptr",
															"typeString": "bytes"
														},
														"typeName": {
															"id": 625,
															"name": "bytes",
															"nodeType": "ElementaryTypeName",
															"src": "7033:5:3",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_storage_ptr",
																"typeString": "bytes"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 631,
												"initialValue": {
													"arguments": [
														{
															"id": 629,
															"name": "data",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 616,
															"src": "7080:4:3",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"expression": {
															"id": 627,
															"name": "target",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 614,
															"src": "7060:6:3",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"id": 628,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "7067:12:3",
														"memberName": "delegatecall",
														"nodeType": "MemberAccess",
														"src": "7060:19:3",
														"typeDescriptions": {
															"typeIdentifier": "t_function_baredelegatecall_nonpayable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$",
															"typeString": "function (bytes memory) returns (bool,bytes memory)"
														}
													},
													"id": 630,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "7060:25:3",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$_t_bool_$_t_bytes_memory_ptr_$",
														"typeString": "tuple(bool,bytes memory)"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "7018:67:3"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 633,
															"name": "target",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 614,
															"src": "7129:6:3",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 634,
															"name": "success",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 624,
															"src": "7137:7:3",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"id": 635,
															"name": "returndata",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 626,
															"src": "7146:10:3",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														{
															"id": 636,
															"name": "errorMessage",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 618,
															"src": "7158:12:3",
															"typeDescriptions": {
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															},
															{
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														],
														"id": 632,
														"name": "verifyCallResultFromTarget",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 679,
														"src": "7102:26:3",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_address_$_t_bool_$_t_bytes_memory_ptr_$_t_string_memory_ptr_$returns$_t_bytes_memory_ptr_$",
															"typeString": "function (address,bool,bytes memory,string memory) view returns (bytes memory)"
														}
													},
													"id": 637,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "7102:69:3",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_memory_ptr",
														"typeString": "bytes memory"
													}
												},
												"functionReturnParameters": 622,
												"id": 638,
												"nodeType": "Return",
												"src": "7095:76:3"
											}
										]
									},
									"documentation": {
										"id": 612,
										"nodeType": "StructuredDocumentation",
										"src": "6673:175:3",
										"text": " @dev Same as {xref-Address-functionCall-address-bytes-string-}[`functionCall`],\n but performing a delegate call.\n _Available since v3.4._"
									},
									"id": 640,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "functionDelegateCall",
									"nameLocation": "6862:20:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 619,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 614,
												"mutability": "mutable",
												"name": "target",
												"nameLocation": "6900:6:3",
												"nodeType": "VariableDeclaration",
												"scope": 640,
												"src": "6892:14:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 613,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "6892:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 616,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "6929:4:3",
												"nodeType": "VariableDeclaration",
												"scope": 640,
												"src": "6916:17:3",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 615,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "6916:5:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 618,
												"mutability": "mutable",
												"name": "errorMessage",
												"nameLocation": "6957:12:3",
												"nodeType": "VariableDeclaration",
												"scope": 640,
												"src": "6943:26:3",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 617,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "6943:6:3",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6882:93:3"
									},
									"returnParameters": {
										"id": 622,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 621,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 640,
												"src": "6994:12:3",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 620,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "6994:5:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6993:14:3"
									},
									"scope": 724,
									"src": "6853:325:3",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 678,
										"nodeType": "Block",
										"src": "7660:434:3",
										"statements": [
											{
												"condition": {
													"id": 654,
													"name": "success",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 645,
													"src": "7674:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"falseBody": {
													"id": 676,
													"nodeType": "Block",
													"src": "8030:58:3",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"id": 672,
																		"name": "returndata",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 647,
																		"src": "8052:10:3",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bytes_memory_ptr",
																			"typeString": "bytes memory"
																		}
																	},
																	{
																		"id": 673,
																		"name": "errorMessage",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 649,
																		"src": "8064:12:3",
																		"typeDescriptions": {
																			"typeIdentifier": "t_string_memory_ptr",
																			"typeString": "string memory"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_bytes_memory_ptr",
																			"typeString": "bytes memory"
																		},
																		{
																			"typeIdentifier": "t_string_memory_ptr",
																			"typeString": "string memory"
																		}
																	],
																	"id": 671,
																	"name": "_revert",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 723,
																	"src": "8044:7:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_pure$_t_bytes_memory_ptr_$_t_string_memory_ptr_$returns$__$",
																		"typeString": "function (bytes memory,string memory) pure"
																	}
																},
																"id": 674,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "8044:33:3",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 675,
															"nodeType": "ExpressionStatement",
															"src": "8044:33:3"
														}
													]
												},
												"id": 677,
												"nodeType": "IfStatement",
												"src": "7670:418:3",
												"trueBody": {
													"id": 670,
													"nodeType": "Block",
													"src": "7683:341:3",
													"statements": [
														{
															"condition": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 658,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"expression": {
																		"id": 655,
																		"name": "returndata",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 647,
																		"src": "7701:10:3",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bytes_memory_ptr",
																			"typeString": "bytes memory"
																		}
																	},
																	"id": 656,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberLocation": "7712:6:3",
																	"memberName": "length",
																	"nodeType": "MemberAccess",
																	"src": "7701:17:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "==",
																"rightExpression": {
																	"hexValue": "30",
																	"id": 657,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "7722:1:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																},
																"src": "7701:22:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"id": 667,
															"nodeType": "IfStatement",
															"src": "7697:286:3",
															"trueBody": {
																"id": 666,
																"nodeType": "Block",
																"src": "7725:258:3",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"arguments": [
																						{
																							"id": 661,
																							"name": "target",
																							"nodeType": "Identifier",
																							"overloadedDeclarations": [],
																							"referencedDeclaration": 643,
																							"src": "7927:6:3",
																							"typeDescriptions": {
																								"typeIdentifier": "t_address",
																								"typeString": "address"
																							}
																						}
																					],
																					"expression": {
																						"argumentTypes": [
																							{
																								"typeIdentifier": "t_address",
																								"typeString": "address"
																							}
																						],
																						"id": 660,
																						"name": "isContract",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 412,
																						"src": "7916:10:3",
																						"typeDescriptions": {
																							"typeIdentifier": "t_function_internal_view$_t_address_$returns$_t_bool_$",
																							"typeString": "function (address) view returns (bool)"
																						}
																					},
																					"id": 662,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": false,
																					"kind": "functionCall",
																					"lValueRequested": false,
																					"nameLocations": [],
																					"names": [],
																					"nodeType": "FunctionCall",
																					"src": "7916:18:3",
																					"tryCall": false,
																					"typeDescriptions": {
																						"typeIdentifier": "t_bool",
																						"typeString": "bool"
																					}
																				},
																				{
																					"hexValue": "416464726573733a2063616c6c20746f206e6f6e2d636f6e7472616374",
																					"id": 663,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": true,
																					"kind": "string",
																					"lValueRequested": false,
																					"nodeType": "Literal",
																					"src": "7936:31:3",
																					"typeDescriptions": {
																						"typeIdentifier": "t_stringliteral_cc2e4e38850b7c0a3e942cfed89b71c77302df25bcb2ec297a0c4ff9ff6b90ad",
																						"typeString": "literal_string \"Address: call to non-contract\""
																					},
																					"value": "Address: call to non-contract"
																				}
																			],
																			"expression": {
																				"argumentTypes": [
																					{
																						"typeIdentifier": "t_bool",
																						"typeString": "bool"
																					},
																					{
																						"typeIdentifier": "t_stringliteral_cc2e4e38850b7c0a3e942cfed89b71c77302df25bcb2ec297a0c4ff9ff6b90ad",
																						"typeString": "literal_string \"Address: call to non-contract\""
																					}
																				],
																				"id": 659,
																				"name": "require",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [
																					4294967278,
																					4294967278
																				],
																				"referencedDeclaration": 4294967278,
																				"src": "7908:7:3",
																				"typeDescriptions": {
																					"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
																					"typeString": "function (bool,string memory) pure"
																				}
																			},
																			"id": 664,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"kind": "functionCall",
																			"lValueRequested": false,
																			"nameLocations": [],
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "7908:60:3",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_tuple$__$",
																				"typeString": "tuple()"
																			}
																		},
																		"id": 665,
																		"nodeType": "ExpressionStatement",
																		"src": "7908:60:3"
																	}
																]
															}
														},
														{
															"expression": {
																"id": 668,
																"name": "returndata",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 647,
																"src": "8003:10:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes_memory_ptr",
																	"typeString": "bytes memory"
																}
															},
															"functionReturnParameters": 653,
															"id": 669,
															"nodeType": "Return",
															"src": "7996:17:3"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 641,
										"nodeType": "StructuredDocumentation",
										"src": "7184:277:3",
										"text": " @dev Tool to verify that a low level call to smart-contract was successful, and revert (either by bubbling\n the revert reason or using the provided one) in case of unsuccessful call or if target was not a contract.\n _Available since v4.8._"
									},
									"id": 679,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "verifyCallResultFromTarget",
									"nameLocation": "7475:26:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 650,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 643,
												"mutability": "mutable",
												"name": "target",
												"nameLocation": "7519:6:3",
												"nodeType": "VariableDeclaration",
												"scope": 679,
												"src": "7511:14:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 642,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "7511:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 645,
												"mutability": "mutable",
												"name": "success",
												"nameLocation": "7540:7:3",
												"nodeType": "VariableDeclaration",
												"scope": 679,
												"src": "7535:12:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 644,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "7535:4:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 647,
												"mutability": "mutable",
												"name": "returndata",
												"nameLocation": "7570:10:3",
												"nodeType": "VariableDeclaration",
												"scope": 679,
												"src": "7557:23:3",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 646,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "7557:5:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 649,
												"mutability": "mutable",
												"name": "errorMessage",
												"nameLocation": "7604:12:3",
												"nodeType": "VariableDeclaration",
												"scope": 679,
												"src": "7590:26:3",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 648,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "7590:6:3",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "7501:121:3"
									},
									"returnParameters": {
										"id": 653,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 652,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 679,
												"src": "7646:12:3",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 651,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "7646:5:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "7645:14:3"
									},
									"scope": 724,
									"src": "7466:628:3",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 702,
										"nodeType": "Block",
										"src": "8475:135:3",
										"statements": [
											{
												"condition": {
													"id": 691,
													"name": "success",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 682,
													"src": "8489:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"falseBody": {
													"id": 700,
													"nodeType": "Block",
													"src": "8546:58:3",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"id": 696,
																		"name": "returndata",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 684,
																		"src": "8568:10:3",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bytes_memory_ptr",
																			"typeString": "bytes memory"
																		}
																	},
																	{
																		"id": 697,
																		"name": "errorMessage",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 686,
																		"src": "8580:12:3",
																		"typeDescriptions": {
																			"typeIdentifier": "t_string_memory_ptr",
																			"typeString": "string memory"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_bytes_memory_ptr",
																			"typeString": "bytes memory"
																		},
																		{
																			"typeIdentifier": "t_string_memory_ptr",
																			"typeString": "string memory"
																		}
																	],
																	"id": 695,
																	"name": "_revert",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 723,
																	"src": "8560:7:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_pure$_t_bytes_memory_ptr_$_t_string_memory_ptr_$returns$__$",
																		"typeString": "function (bytes memory,string memory) pure"
																	}
																},
																"id": 698,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "8560:33:3",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 699,
															"nodeType": "ExpressionStatement",
															"src": "8560:33:3"
														}
													]
												},
												"id": 701,
												"nodeType": "IfStatement",
												"src": "8485:119:3",
												"trueBody": {
													"id": 694,
													"nodeType": "Block",
													"src": "8498:42:3",
													"statements": [
														{
															"expression": {
																"id": 692,
																"name": "returndata",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 684,
																"src": "8519:10:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes_memory_ptr",
																	"typeString": "bytes memory"
																}
															},
															"functionReturnParameters": 690,
															"id": 693,
															"nodeType": "Return",
															"src": "8512:17:3"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 680,
										"nodeType": "StructuredDocumentation",
										"src": "8100:210:3",
										"text": " @dev Tool to verify that a low level call was successful, and revert if it wasn't, either by bubbling the\n revert reason or using the provided one.\n _Available since v4.3._"
									},
									"id": 703,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "verifyCallResult",
									"nameLocation": "8324:16:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 687,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 682,
												"mutability": "mutable",
												"name": "success",
												"nameLocation": "8355:7:3",
												"nodeType": "VariableDeclaration",
												"scope": 703,
												"src": "8350:12:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 681,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "8350:4:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 684,
												"mutability": "mutable",
												"name": "returndata",
												"nameLocation": "8385:10:3",
												"nodeType": "VariableDeclaration",
												"scope": 703,
												"src": "8372:23:3",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 683,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "8372:5:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 686,
												"mutability": "mutable",
												"name": "errorMessage",
												"nameLocation": "8419:12:3",
												"nodeType": "VariableDeclaration",
												"scope": 703,
												"src": "8405:26:3",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 685,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "8405:6:3",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "8340:97:3"
									},
									"returnParameters": {
										"id": 690,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 689,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 703,
												"src": "8461:12:3",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 688,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "8461:5:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "8460:14:3"
									},
									"scope": 724,
									"src": "8315:295:3",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 722,
										"nodeType": "Block",
										"src": "8699:457:3",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 713,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"expression": {
															"id": 710,
															"name": "returndata",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 705,
															"src": "8775:10:3",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														"id": 711,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "8786:6:3",
														"memberName": "length",
														"nodeType": "MemberAccess",
														"src": "8775:17:3",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": ">",
													"rightExpression": {
														"hexValue": "30",
														"id": 712,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "8795:1:3",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "8775:21:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"falseBody": {
													"id": 720,
													"nodeType": "Block",
													"src": "9105:45:3",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"id": 717,
																		"name": "errorMessage",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 707,
																		"src": "9126:12:3",
																		"typeDescriptions": {
																			"typeIdentifier": "t_string_memory_ptr",
																			"typeString": "string memory"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_string_memory_ptr",
																			"typeString": "string memory"
																		}
																	],
																	"id": 716,
																	"name": "revert",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [
																		4294967277,
																		4294967277
																	],
																	"referencedDeclaration": 4294967277,
																	"src": "9119:6:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_revert_pure$_t_string_memory_ptr_$returns$__$",
																		"typeString": "function (string memory) pure"
																	}
																},
																"id": 718,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "9119:20:3",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 719,
															"nodeType": "ExpressionStatement",
															"src": "9119:20:3"
														}
													]
												},
												"id": 721,
												"nodeType": "IfStatement",
												"src": "8771:379:3",
												"trueBody": {
													"id": 715,
													"nodeType": "Block",
													"src": "8798:301:3",
													"statements": [
														{
															"AST": {
																"nodeType": "YulBlock",
																"src": "8956:133:3",
																"statements": [
																	{
																		"nodeType": "YulVariableDeclaration",
																		"src": "8974:40:3",
																		"value": {
																			"arguments": [
																				{
																					"name": "returndata",
																					"nodeType": "YulIdentifier",
																					"src": "9003:10:3"
																				}
																			],
																			"functionName": {
																				"name": "mload",
																				"nodeType": "YulIdentifier",
																				"src": "8997:5:3"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "8997:17:3"
																		},
																		"variables": [
																			{
																				"name": "returndata_size",
																				"nodeType": "YulTypedName",
																				"src": "8978:15:3",
																				"type": ""
																			}
																		]
																	},
																	{
																		"expression": {
																			"arguments": [
																				{
																					"arguments": [
																						{
																							"kind": "number",
																							"nodeType": "YulLiteral",
																							"src": "9042:2:3",
																							"type": "",
																							"value": "32"
																						},
																						{
																							"name": "returndata",
																							"nodeType": "YulIdentifier",
																							"src": "9046:10:3"
																						}
																					],
																					"functionName": {
																						"name": "add",
																						"nodeType": "YulIdentifier",
																						"src": "9038:3:3"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "9038:19:3"
																				},
																				{
																					"name": "returndata_size",
																					"nodeType": "YulIdentifier",
																					"src": "9059:15:3"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "9031:6:3"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "9031:44:3"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "9031:44:3"
																	}
																]
															},
															"documentation": "@solidity memory-safe-assembly",
															"evmVersion": "london",
															"externalReferences": [
																{
																	"declaration": 705,
																	"isOffset": false,
																	"isSlot": false,
																	"src": "9003:10:3",
																	"valueSize": 1
																},
																{
																	"declaration": 705,
																	"isOffset": false,
																	"isSlot": false,
																	"src": "9046:10:3",
																	"valueSize": 1
																}
															],
															"id": 714,
															"nodeType": "InlineAssembly",
															"src": "8947:142:3"
														}
													]
												}
											}
										]
									},
									"id": 723,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_revert",
									"nameLocation": "8625:7:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 708,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 705,
												"mutability": "mutable",
												"name": "returndata",
												"nameLocation": "8646:10:3",
												"nodeType": "VariableDeclaration",
												"scope": 723,
												"src": "8633:23:3",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 704,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "8633:5:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 707,
												"mutability": "mutable",
												"name": "errorMessage",
												"nameLocation": "8672:12:3",
												"nodeType": "VariableDeclaration",
												"scope": 723,
												"src": "8658:26:3",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 706,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "8658:6:3",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "8632:53:3"
									},
									"returnParameters": {
										"id": 709,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "8699:0:3"
									},
									"scope": 724,
									"src": "8616:540:3",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "private"
								}
							],
							"scope": 725,
							"src": "194:8964:3",
							"usedErrors": []
						}
					],
					"src": "101:9058:3"
				},
				"id": 3
			},
			"DengLianHW/w5-2/contracts/MyTokenMarket.sol": {
				"ast": {
					"absolutePath": "DengLianHW/w5-2/contracts/MyTokenMarket.sol",
					"exportedSymbols": {
						"Address": [
							724
						],
						"IERC20": [
							77
						],
						"IERC20Permit": [
							113
						],
						"IUniswapV2Router01": [
							1293
						],
						"MyTokenMarket": [
							985
						],
						"SafeERC20": [
							394
						]
					},
					"id": 986,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 726,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "31:23:4"
						},
						{
							"absolutePath": "DengLianHW/w5-2/contracts/Uniswap/interfaces/IUniswapV2Router01.sol",
							"file": "./Uniswap/interfaces/IUniswapV2Router01.sol",
							"id": 727,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 986,
							"sourceUnit": 1294,
							"src": "56:53:4",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": "@openzeppelin/contracts/token/ERC20/IERC20.sol",
							"file": "@openzeppelin/contracts/token/ERC20/IERC20.sol",
							"id": 728,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 986,
							"sourceUnit": 78,
							"src": "111:56:4",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": "@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol",
							"file": "@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol",
							"id": 729,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 986,
							"sourceUnit": 395,
							"src": "168:65:4",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "MyTokenMarket",
							"contractDependencies": [],
							"contractKind": "contract",
							"fullyImplemented": true,
							"id": 985,
							"linearizedBaseContracts": [
								985
							],
							"name": "MyTokenMarket",
							"nameLocation": "244:13:4",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"global": false,
									"id": 733,
									"libraryName": {
										"id": 730,
										"name": "SafeERC20",
										"nameLocations": [
											"270:9:4"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 394,
										"src": "270:9:4"
									},
									"nodeType": "UsingForDirective",
									"src": "264:27:4",
									"typeName": {
										"id": 732,
										"nodeType": "UserDefinedTypeName",
										"pathNode": {
											"id": 731,
											"name": "IERC20",
											"nameLocations": [
												"284:6:4"
											],
											"nodeType": "IdentifierPath",
											"referencedDeclaration": 77,
											"src": "284:6:4"
										},
										"referencedDeclaration": 77,
										"src": "284:6:4",
										"typeDescriptions": {
											"typeIdentifier": "t_contract$_IERC20_$77",
											"typeString": "contract IERC20"
										}
									}
								},
								{
									"constant": false,
									"functionSelector": "f887ea40",
									"id": 735,
									"mutability": "mutable",
									"name": "router",
									"nameLocation": "312:6:4",
									"nodeType": "VariableDeclaration",
									"scope": 985,
									"src": "297:21:4",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_address",
										"typeString": "address"
									},
									"typeName": {
										"id": 734,
										"name": "address",
										"nodeType": "ElementaryTypeName",
										"src": "297:7:4",
										"stateMutability": "nonpayable",
										"typeDescriptions": {
											"typeIdentifier": "t_address",
											"typeString": "address"
										}
									},
									"visibility": "public"
								},
								{
									"constant": false,
									"functionSelector": "3fc8cef3",
									"id": 737,
									"mutability": "mutable",
									"name": "weth",
									"nameLocation": "339:4:4",
									"nodeType": "VariableDeclaration",
									"scope": 985,
									"src": "324:19:4",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_address",
										"typeString": "address"
									},
									"typeName": {
										"id": 736,
										"name": "address",
										"nodeType": "ElementaryTypeName",
										"src": "324:7:4",
										"stateMutability": "nonpayable",
										"typeDescriptions": {
											"typeIdentifier": "t_address",
											"typeString": "address"
										}
									},
									"visibility": "public"
								},
								{
									"body": {
										"id": 752,
										"nodeType": "Block",
										"src": "394:55:4",
										"statements": [
											{
												"expression": {
													"id": 746,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 744,
														"name": "router",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 735,
														"src": "404:6:4",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 745,
														"name": "_router",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 739,
														"src": "413:7:4",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "404:16:4",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"id": 747,
												"nodeType": "ExpressionStatement",
												"src": "404:16:4"
											},
											{
												"expression": {
													"id": 750,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 748,
														"name": "weth",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 737,
														"src": "430:4:4",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 749,
														"name": "_weth",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 741,
														"src": "437:5:4",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "430:12:4",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"id": 751,
												"nodeType": "ExpressionStatement",
												"src": "430:12:4"
											}
										]
									},
									"id": 753,
									"implemented": true,
									"kind": "constructor",
									"modifiers": [],
									"name": "",
									"nameLocation": "-1:-1:-1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 742,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 739,
												"mutability": "mutable",
												"name": "_router",
												"nameLocation": "370:7:4",
												"nodeType": "VariableDeclaration",
												"scope": 753,
												"src": "362:15:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 738,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "362:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 741,
												"mutability": "mutable",
												"name": "_weth",
												"nameLocation": "387:5:4",
												"nodeType": "VariableDeclaration",
												"scope": 753,
												"src": "379:13:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 740,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "379:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "361:32:4"
									},
									"returnParameters": {
										"id": 743,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "394:0:4"
									},
									"scope": 985,
									"src": "350:99:4",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 798,
										"nodeType": "Block",
										"src": "567:390:4",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"expression": {
																"id": 764,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967281,
																"src": "608:3:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 765,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "612:6:4",
															"memberName": "sender",
															"nodeType": "MemberAccess",
															"src": "608:10:4",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"arguments": [
																{
																	"id": 768,
																	"name": "this",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967268,
																	"src": "628:4:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_contract$_MyTokenMarket_$985",
																		"typeString": "contract MyTokenMarket"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_contract$_MyTokenMarket_$985",
																		"typeString": "contract MyTokenMarket"
																	}
																],
																"id": 767,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "620:7:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 766,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "620:7:4",
																	"typeDescriptions": {}
																}
															},
															"id": 769,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "620:13:4",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 770,
															"name": "tokenAmount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 757,
															"src": "634:11:4",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"expression": {
															"arguments": [
																{
																	"id": 761,
																	"name": "token",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 755,
																	"src": "584:5:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																],
																"id": 760,
																"name": "IERC20",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 77,
																"src": "577:6:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_contract$_IERC20_$77_$",
																	"typeString": "type(contract IERC20)"
																}
															},
															"id": 762,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "577:13:4",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_IERC20_$77",
																"typeString": "contract IERC20"
															}
														},
														"id": 763,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "591:16:4",
														"memberName": "safeTransferFrom",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 171,
														"src": "577:30:4",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_contract$_IERC20_$77_$_t_address_$_t_address_$_t_uint256_$returns$__$bound_to$_t_contract$_IERC20_$77_$",
															"typeString": "function (contract IERC20,address,address,uint256)"
														}
													},
													"id": 771,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "577:69:4",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 772,
												"nodeType": "ExpressionStatement",
												"src": "577:69:4"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 777,
															"name": "router",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 735,
															"src": "682:6:4",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 778,
															"name": "tokenAmount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 757,
															"src": "690:11:4",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"expression": {
															"arguments": [
																{
																	"id": 774,
																	"name": "token",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 755,
																	"src": "663:5:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																],
																"id": 773,
																"name": "IERC20",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 77,
																"src": "656:6:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_contract$_IERC20_$77_$",
																	"typeString": "type(contract IERC20)"
																}
															},
															"id": 775,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "656:13:4",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_IERC20_$77",
																"typeString": "contract IERC20"
															}
														},
														"id": 776,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "670:11:4",
														"memberName": "safeApprove",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 215,
														"src": "656:25:4",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_contract$_IERC20_$77_$_t_address_$_t_uint256_$returns$__$bound_to$_t_contract$_IERC20_$77_$",
															"typeString": "function (contract IERC20,address,uint256)"
														}
													},
													"id": 779,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "656:46:4",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 780,
												"nodeType": "ExpressionStatement",
												"src": "656:46:4"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 788,
															"name": "token",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 755,
															"src": "867:5:4",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 789,
															"name": "tokenAmount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 757,
															"src": "874:11:4",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"hexValue": "30",
															"id": 790,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "887:1:4",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_0_by_1",
																"typeString": "int_const 0"
															},
															"value": "0"
														},
														{
															"hexValue": "30",
															"id": 791,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "890:1:4",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_0_by_1",
																"typeString": "int_const 0"
															},
															"value": "0"
														},
														{
															"expression": {
																"id": 792,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967281,
																"src": "893:3:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 793,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "897:6:4",
															"memberName": "sender",
															"nodeType": "MemberAccess",
															"src": "893:10:4",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"expression": {
																"id": 794,
																"name": "block",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967292,
																"src": "905:5:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_block",
																	"typeString": "block"
																}
															},
															"id": 795,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "911:9:4",
															"memberName": "timestamp",
															"nodeType": "MemberAccess",
															"src": "905:15:4",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_rational_0_by_1",
																"typeString": "int_const 0"
															},
															{
																"typeIdentifier": "t_rational_0_by_1",
																"typeString": "int_const 0"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																},
																{
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																{
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																},
																{
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															],
															"expression": {
																"arguments": [
																	{
																		"id": 782,
																		"name": "router",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 735,
																		"src": "825:6:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 781,
																	"name": "IUniswapV2Router01",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1293,
																	"src": "806:18:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_contract$_IUniswapV2Router01_$1293_$",
																		"typeString": "type(contract IUniswapV2Router01)"
																	}
																},
																"id": 783,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "typeConversion",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "806:26:4",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_contract$_IUniswapV2Router01_$1293",
																	"typeString": "contract IUniswapV2Router01"
																}
															},
															"id": 784,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "833:15:4",
															"memberName": "addLiquidityETH",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 1043,
															"src": "806:42:4",
															"typeDescriptions": {
																"typeIdentifier": "t_function_external_payable$_t_address_$_t_uint256_$_t_uint256_$_t_uint256_$_t_address_$_t_uint256_$returns$_t_uint256_$_t_uint256_$_t_uint256_$",
																"typeString": "function (address,uint256,uint256,uint256,address,uint256) payable external returns (uint256,uint256,uint256)"
															}
														},
														"id": 787,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"names": [
															"value"
														],
														"nodeType": "FunctionCallOptions",
														"options": [
															{
																"expression": {
																	"id": 785,
																	"name": "msg",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967281,
																	"src": "856:3:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_message",
																		"typeString": "msg"
																	}
																},
																"id": 786,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "860:5:4",
																"memberName": "value",
																"nodeType": "MemberAccess",
																"src": "856:9:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"src": "806:60:4",
														"typeDescriptions": {
															"typeIdentifier": "t_function_external_payable$_t_address_$_t_uint256_$_t_uint256_$_t_uint256_$_t_address_$_t_uint256_$returns$_t_uint256_$_t_uint256_$_t_uint256_$value",
															"typeString": "function (address,uint256,uint256,uint256,address,uint256) payable external returns (uint256,uint256,uint256)"
														}
													},
													"id": 796,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "806:115:4",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$_t_uint256_$_t_uint256_$_t_uint256_$",
														"typeString": "tuple(uint256,uint256,uint256)"
													}
												},
												"id": 797,
												"nodeType": "ExpressionStatement",
												"src": "806:115:4"
											}
										]
									},
									"functionSelector": "839da792",
									"id": 799,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "AddLiquidityETH",
									"nameLocation": "503:15:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 758,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 755,
												"mutability": "mutable",
												"name": "token",
												"nameLocation": "527:5:4",
												"nodeType": "VariableDeclaration",
												"scope": 799,
												"src": "519:13:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 754,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "519:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 757,
												"mutability": "mutable",
												"name": "tokenAmount",
												"nameLocation": "539:11:4",
												"nodeType": "VariableDeclaration",
												"scope": 799,
												"src": "534:16:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 756,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "534:4:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "518:33:4"
									},
									"returnParameters": {
										"id": 759,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "567:0:4"
									},
									"scope": 985,
									"src": "494:463:4",
									"stateMutability": "payable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 868,
										"nodeType": "Block",
										"src": "1101:416:4",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"expression": {
																"id": 814,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967281,
																"src": "1143:3:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 815,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "1147:6:4",
															"memberName": "sender",
															"nodeType": "MemberAccess",
															"src": "1143:10:4",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"arguments": [
																{
																	"id": 818,
																	"name": "this",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967268,
																	"src": "1163:4:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_contract$_MyTokenMarket_$985",
																		"typeString": "contract MyTokenMarket"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_contract$_MyTokenMarket_$985",
																		"typeString": "contract MyTokenMarket"
																	}
																],
																"id": 817,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "1155:7:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 816,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "1155:7:4",
																	"typeDescriptions": {}
																}
															},
															"id": 819,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "1155:13:4",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 820,
															"name": "amountA",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 803,
															"src": "1170:7:4",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"expression": {
															"arguments": [
																{
																	"id": 811,
																	"name": "tokenA",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 801,
																	"src": "1118:6:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																],
																"id": 810,
																"name": "IERC20",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 77,
																"src": "1111:6:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_contract$_IERC20_$77_$",
																	"typeString": "type(contract IERC20)"
																}
															},
															"id": 812,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "1111:14:4",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_IERC20_$77",
																"typeString": "contract IERC20"
															}
														},
														"id": 813,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "1126:16:4",
														"memberName": "safeTransferFrom",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 171,
														"src": "1111:31:4",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_contract$_IERC20_$77_$_t_address_$_t_address_$_t_uint256_$returns$__$bound_to$_t_contract$_IERC20_$77_$",
															"typeString": "function (contract IERC20,address,address,uint256)"
														}
													},
													"id": 821,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1111:67:4",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 822,
												"nodeType": "ExpressionStatement",
												"src": "1111:67:4"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 827,
															"name": "router",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 735,
															"src": "1215:6:4",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 828,
															"name": "amountA",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 803,
															"src": "1223:7:4",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"expression": {
															"arguments": [
																{
																	"id": 824,
																	"name": "tokenA",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 801,
																	"src": "1195:6:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																],
																"id": 823,
																"name": "IERC20",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 77,
																"src": "1188:6:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_contract$_IERC20_$77_$",
																	"typeString": "type(contract IERC20)"
																}
															},
															"id": 825,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "1188:14:4",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_IERC20_$77",
																"typeString": "contract IERC20"
															}
														},
														"id": 826,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "1203:11:4",
														"memberName": "safeApprove",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 215,
														"src": "1188:26:4",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_contract$_IERC20_$77_$_t_address_$_t_uint256_$returns$__$bound_to$_t_contract$_IERC20_$77_$",
															"typeString": "function (contract IERC20,address,uint256)"
														}
													},
													"id": 829,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1188:43:4",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 830,
												"nodeType": "ExpressionStatement",
												"src": "1188:43:4"
											},
											{
												"expression": {
													"arguments": [
														{
															"expression": {
																"id": 835,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967281,
																"src": "1274:3:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 836,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "1278:6:4",
															"memberName": "sender",
															"nodeType": "MemberAccess",
															"src": "1274:10:4",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"arguments": [
																{
																	"id": 839,
																	"name": "this",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967268,
																	"src": "1294:4:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_contract$_MyTokenMarket_$985",
																		"typeString": "contract MyTokenMarket"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_contract$_MyTokenMarket_$985",
																		"typeString": "contract MyTokenMarket"
																	}
																],
																"id": 838,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "1286:7:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 837,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "1286:7:4",
																	"typeDescriptions": {}
																}
															},
															"id": 840,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "1286:13:4",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 841,
															"name": "amountB",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 807,
															"src": "1301:7:4",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"expression": {
															"arguments": [
																{
																	"id": 832,
																	"name": "tokenB",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 805,
																	"src": "1249:6:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																],
																"id": 831,
																"name": "IERC20",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 77,
																"src": "1242:6:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_contract$_IERC20_$77_$",
																	"typeString": "type(contract IERC20)"
																}
															},
															"id": 833,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "1242:14:4",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_IERC20_$77",
																"typeString": "contract IERC20"
															}
														},
														"id": 834,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "1257:16:4",
														"memberName": "safeTransferFrom",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 171,
														"src": "1242:31:4",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_contract$_IERC20_$77_$_t_address_$_t_address_$_t_uint256_$returns$__$bound_to$_t_contract$_IERC20_$77_$",
															"typeString": "function (contract IERC20,address,address,uint256)"
														}
													},
													"id": 842,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1242:67:4",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 843,
												"nodeType": "ExpressionStatement",
												"src": "1242:67:4"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 848,
															"name": "router",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 735,
															"src": "1346:6:4",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 849,
															"name": "amountB",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 807,
															"src": "1354:7:4",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"expression": {
															"arguments": [
																{
																	"id": 845,
																	"name": "tokenB",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 805,
																	"src": "1326:6:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																],
																"id": 844,
																"name": "IERC20",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 77,
																"src": "1319:6:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_contract$_IERC20_$77_$",
																	"typeString": "type(contract IERC20)"
																}
															},
															"id": 846,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "1319:14:4",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_IERC20_$77",
																"typeString": "contract IERC20"
															}
														},
														"id": 847,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "1334:11:4",
														"memberName": "safeApprove",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 215,
														"src": "1319:26:4",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_contract$_IERC20_$77_$_t_address_$_t_uint256_$returns$__$bound_to$_t_contract$_IERC20_$77_$",
															"typeString": "function (contract IERC20,address,uint256)"
														}
													},
													"id": 850,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1319:43:4",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 851,
												"nodeType": "ExpressionStatement",
												"src": "1319:43:4"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 856,
															"name": "tokenA",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 801,
															"src": "1413:6:4",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 857,
															"name": "tokenB",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 805,
															"src": "1421:6:4",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 858,
															"name": "amountA",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 803,
															"src": "1429:7:4",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"id": 859,
															"name": "amountB",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 807,
															"src": "1438:7:4",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"hexValue": "30",
															"id": 860,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "1447:1:4",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_0_by_1",
																"typeString": "int_const 0"
															},
															"value": "0"
														},
														{
															"hexValue": "30",
															"id": 861,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "1450:1:4",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_0_by_1",
																"typeString": "int_const 0"
															},
															"value": "0"
														},
														{
															"expression": {
																"id": 862,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967281,
																"src": "1453:3:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 863,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "1457:6:4",
															"memberName": "sender",
															"nodeType": "MemberAccess",
															"src": "1453:10:4",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"expression": {
																"id": 864,
																"name": "block",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967292,
																"src": "1465:5:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_block",
																	"typeString": "block"
																}
															},
															"id": 865,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "1471:9:4",
															"memberName": "timestamp",
															"nodeType": "MemberAccess",
															"src": "1465:15:4",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_rational_0_by_1",
																"typeString": "int_const 0"
															},
															{
																"typeIdentifier": "t_rational_0_by_1",
																"typeString": "int_const 0"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"expression": {
															"arguments": [
																{
																	"id": 853,
																	"name": "router",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 735,
																	"src": "1392:6:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																],
																"id": 852,
																"name": "IUniswapV2Router01",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1293,
																"src": "1373:18:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_contract$_IUniswapV2Router01_$1293_$",
																	"typeString": "type(contract IUniswapV2Router01)"
																}
															},
															"id": 854,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "1373:26:4",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_IUniswapV2Router01_$1293",
																"typeString": "contract IUniswapV2Router01"
															}
														},
														"id": 855,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "1400:12:4",
														"memberName": "addLiquidity",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 1022,
														"src": "1373:39:4",
														"typeDescriptions": {
															"typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_address_$_t_uint256_$_t_uint256_$_t_uint256_$_t_uint256_$_t_address_$_t_uint256_$returns$_t_uint256_$_t_uint256_$_t_uint256_$",
															"typeString": "function (address,address,uint256,uint256,uint256,uint256,address,uint256) external returns (uint256,uint256,uint256)"
														}
													},
													"id": 866,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1373:108:4",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$_t_uint256_$_t_uint256_$_t_uint256_$",
														"typeString": "tuple(uint256,uint256,uint256)"
													}
												},
												"id": 867,
												"nodeType": "ExpressionStatement",
												"src": "1373:108:4"
											}
										]
									},
									"functionSelector": "07ee83a1",
									"id": 869,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "AddLiquidity",
									"nameLocation": "1014:12:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 808,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 801,
												"mutability": "mutable",
												"name": "tokenA",
												"nameLocation": "1035:6:4",
												"nodeType": "VariableDeclaration",
												"scope": 869,
												"src": "1027:14:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 800,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1027:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 803,
												"mutability": "mutable",
												"name": "amountA",
												"nameLocation": "1048:7:4",
												"nodeType": "VariableDeclaration",
												"scope": 869,
												"src": "1043:12:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 802,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "1043:4:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 805,
												"mutability": "mutable",
												"name": "tokenB",
												"nameLocation": "1065:6:4",
												"nodeType": "VariableDeclaration",
												"scope": 869,
												"src": "1057:14:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 804,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1057:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 807,
												"mutability": "mutable",
												"name": "amountB",
												"nameLocation": "1078:7:4",
												"nodeType": "VariableDeclaration",
												"scope": 869,
												"src": "1073:12:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 806,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "1073:4:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1026:60:4"
									},
									"returnParameters": {
										"id": 809,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1101:0:4"
									},
									"scope": 985,
									"src": "1005:512:4",
									"stateMutability": "payable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 914,
										"nodeType": "Block",
										"src": "1627:234:4",
										"statements": [
											{
												"assignments": [
													880
												],
												"declarations": [
													{
														"constant": false,
														"id": 880,
														"mutability": "mutable",
														"name": "path",
														"nameLocation": "1654:4:4",
														"nodeType": "VariableDeclaration",
														"scope": 914,
														"src": "1637:21:4",
														"stateVariable": false,
														"storageLocation": "memory",
														"typeDescriptions": {
															"typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
															"typeString": "address[]"
														},
														"typeName": {
															"baseType": {
																"id": 878,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "1637:7:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"id": 879,
															"nodeType": "ArrayTypeName",
															"src": "1637:9:4",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_address_$dyn_storage_ptr",
																"typeString": "address[]"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 886,
												"initialValue": {
													"arguments": [
														{
															"hexValue": "32",
															"id": 884,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "1675:1:4",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_2_by_1",
																"typeString": "int_const 2"
															},
															"value": "2"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_rational_2_by_1",
																"typeString": "int_const 2"
															}
														],
														"id": 883,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"nodeType": "NewExpression",
														"src": "1661:13:4",
														"typeDescriptions": {
															"typeIdentifier": "t_function_objectcreation_pure$_t_uint256_$returns$_t_array$_t_address_$dyn_memory_ptr_$",
															"typeString": "function (uint256) pure returns (address[] memory)"
														},
														"typeName": {
															"baseType": {
																"id": 881,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "1665:7:4",
																"stateMutability": "nonpayable",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"id": 882,
															"nodeType": "ArrayTypeName",
															"src": "1665:9:4",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_address_$dyn_storage_ptr",
																"typeString": "address[]"
															}
														}
													},
													"id": 885,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1661:16:4",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
														"typeString": "address[] memory"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "1637:40:4"
											},
											{
												"expression": {
													"id": 891,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"id": 887,
															"name": "path",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 880,
															"src": "1687:4:4",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
																"typeString": "address[] memory"
															}
														},
														"id": 889,
														"indexExpression": {
															"hexValue": "30",
															"id": 888,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "1692:1:4",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_0_by_1",
																"typeString": "int_const 0"
															},
															"value": "0"
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "1687:7:4",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 890,
														"name": "weth",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 737,
														"src": "1697:4:4",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "1687:14:4",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"id": 892,
												"nodeType": "ExpressionStatement",
												"src": "1687:14:4"
											},
											{
												"expression": {
													"id": 897,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"id": 893,
															"name": "path",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 880,
															"src": "1711:4:4",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
																"typeString": "address[] memory"
															}
														},
														"id": 895,
														"indexExpression": {
															"hexValue": "31",
															"id": 894,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "1716:1:4",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_1_by_1",
																"typeString": "int_const 1"
															},
															"value": "1"
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "1711:7:4",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 896,
														"name": "token",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 871,
														"src": "1721:5:4",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "1711:15:4",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"id": 898,
												"nodeType": "ExpressionStatement",
												"src": "1711:15:4"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 906,
															"name": "minTokenAmount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 873,
															"src": "1804:14:4",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"id": 907,
															"name": "path",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 880,
															"src": "1820:4:4",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
																"typeString": "address[] memory"
															}
														},
														{
															"expression": {
																"id": 908,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967281,
																"src": "1826:3:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 909,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "1830:6:4",
															"memberName": "sender",
															"nodeType": "MemberAccess",
															"src": "1826:10:4",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"expression": {
																"id": 910,
																"name": "block",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967292,
																"src": "1838:5:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_block",
																	"typeString": "block"
																}
															},
															"id": 911,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "1844:9:4",
															"memberName": "timestamp",
															"nodeType": "MemberAccess",
															"src": "1838:15:4",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
																"typeString": "address[] memory"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																{
																	"typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
																	"typeString": "address[] memory"
																},
																{
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																},
																{
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															],
															"expression": {
																"arguments": [
																	{
																		"id": 900,
																		"name": "router",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 735,
																		"src": "1755:6:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 899,
																	"name": "IUniswapV2Router01",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1293,
																	"src": "1736:18:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_contract$_IUniswapV2Router01_$1293_$",
																		"typeString": "type(contract IUniswapV2Router01)"
																	}
																},
																"id": 901,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "typeConversion",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "1736:26:4",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_contract$_IUniswapV2Router01_$1293",
																	"typeString": "contract IUniswapV2Router01"
																}
															},
															"id": 902,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "1763:21:4",
															"memberName": "swapExactETHForTokens",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 1188,
															"src": "1736:48:4",
															"typeDescriptions": {
																"typeIdentifier": "t_function_external_payable$_t_uint256_$_t_array$_t_address_$dyn_memory_ptr_$_t_address_$_t_uint256_$returns$_t_array$_t_uint256_$dyn_memory_ptr_$",
																"typeString": "function (uint256,address[] memory,address,uint256) payable external returns (uint256[] memory)"
															}
														},
														"id": 905,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"names": [
															"value"
														],
														"nodeType": "FunctionCallOptions",
														"options": [
															{
																"expression": {
																	"id": 903,
																	"name": "msg",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967281,
																	"src": "1793:3:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_message",
																		"typeString": "msg"
																	}
																},
																"id": 904,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "1797:5:4",
																"memberName": "value",
																"nodeType": "MemberAccess",
																"src": "1793:9:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"src": "1736:67:4",
														"typeDescriptions": {
															"typeIdentifier": "t_function_external_payable$_t_uint256_$_t_array$_t_address_$dyn_memory_ptr_$_t_address_$_t_uint256_$returns$_t_array$_t_uint256_$dyn_memory_ptr_$value",
															"typeString": "function (uint256,address[] memory,address,uint256) payable external returns (uint256[] memory)"
														}
													},
													"id": 912,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1736:118:4",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
														"typeString": "uint256[] memory"
													}
												},
												"id": 913,
												"nodeType": "ExpressionStatement",
												"src": "1736:118:4"
											}
										]
									},
									"functionSelector": "b4688dc8",
									"id": 915,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "buyTokenWithETH",
									"nameLocation": "1560:15:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 874,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 871,
												"mutability": "mutable",
												"name": "token",
												"nameLocation": "1584:5:4",
												"nodeType": "VariableDeclaration",
												"scope": 915,
												"src": "1576:13:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 870,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1576:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 873,
												"mutability": "mutable",
												"name": "minTokenAmount",
												"nameLocation": "1596:14:4",
												"nodeType": "VariableDeclaration",
												"scope": 915,
												"src": "1591:19:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 872,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "1591:4:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1575:36:4"
									},
									"returnParameters": {
										"id": 875,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1627:0:4"
									},
									"scope": 985,
									"src": "1551:310:4",
									"stateMutability": "payable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 983,
										"nodeType": "Block",
										"src": "1991:363:4",
										"statements": [
											{
												"assignments": [
													930
												],
												"declarations": [
													{
														"constant": false,
														"id": 930,
														"mutability": "mutable",
														"name": "path",
														"nameLocation": "2018:4:4",
														"nodeType": "VariableDeclaration",
														"scope": 983,
														"src": "2001:21:4",
														"stateVariable": false,
														"storageLocation": "memory",
														"typeDescriptions": {
															"typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
															"typeString": "address[]"
														},
														"typeName": {
															"baseType": {
																"id": 928,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "2001:7:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"id": 929,
															"nodeType": "ArrayTypeName",
															"src": "2001:9:4",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_address_$dyn_storage_ptr",
																"typeString": "address[]"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 936,
												"initialValue": {
													"arguments": [
														{
															"hexValue": "32",
															"id": 934,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "2039:1:4",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_2_by_1",
																"typeString": "int_const 2"
															},
															"value": "2"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_rational_2_by_1",
																"typeString": "int_const 2"
															}
														],
														"id": 933,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"nodeType": "NewExpression",
														"src": "2025:13:4",
														"typeDescriptions": {
															"typeIdentifier": "t_function_objectcreation_pure$_t_uint256_$returns$_t_array$_t_address_$dyn_memory_ptr_$",
															"typeString": "function (uint256) pure returns (address[] memory)"
														},
														"typeName": {
															"baseType": {
																"id": 931,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "2029:7:4",
																"stateMutability": "nonpayable",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"id": 932,
															"nodeType": "ArrayTypeName",
															"src": "2029:9:4",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_address_$dyn_storage_ptr",
																"typeString": "address[]"
															}
														}
													},
													"id": 935,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2025:16:4",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
														"typeString": "address[] memory"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "2001:40:4"
											},
											{
												"expression": {
													"id": 941,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"id": 937,
															"name": "path",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 930,
															"src": "2051:4:4",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
																"typeString": "address[] memory"
															}
														},
														"id": 939,
														"indexExpression": {
															"hexValue": "30",
															"id": 938,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "2056:1:4",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_0_by_1",
																"typeString": "int_const 0"
															},
															"value": "0"
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "2051:7:4",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 940,
														"name": "tokenA",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 917,
														"src": "2061:6:4",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "2051:16:4",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"id": 942,
												"nodeType": "ExpressionStatement",
												"src": "2051:16:4"
											},
											{
												"expression": {
													"id": 947,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"id": 943,
															"name": "path",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 930,
															"src": "2077:4:4",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
																"typeString": "address[] memory"
															}
														},
														"id": 945,
														"indexExpression": {
															"hexValue": "31",
															"id": 944,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "2082:1:4",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_1_by_1",
																"typeString": "int_const 1"
															},
															"value": "1"
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "2077:7:4",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 946,
														"name": "tokenB",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 919,
														"src": "2087:6:4",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "2077:16:4",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"id": 948,
												"nodeType": "ExpressionStatement",
												"src": "2077:16:4"
											},
											{
												"expression": {
													"arguments": [
														{
															"expression": {
																"id": 953,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967281,
																"src": "2135:3:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 954,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "2139:6:4",
															"memberName": "sender",
															"nodeType": "MemberAccess",
															"src": "2135:10:4",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"arguments": [
																{
																	"id": 957,
																	"name": "this",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967268,
																	"src": "2155:4:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_contract$_MyTokenMarket_$985",
																		"typeString": "contract MyTokenMarket"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_contract$_MyTokenMarket_$985",
																		"typeString": "contract MyTokenMarket"
																	}
																],
																"id": 956,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "2147:7:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 955,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "2147:7:4",
																	"typeDescriptions": {}
																}
															},
															"id": 958,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "2147:13:4",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 959,
															"name": "amountIn",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 921,
															"src": "2162:8:4",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"expression": {
															"arguments": [
																{
																	"id": 950,
																	"name": "tokenA",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 917,
																	"src": "2110:6:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																],
																"id": 949,
																"name": "IERC20",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 77,
																"src": "2103:6:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_contract$_IERC20_$77_$",
																	"typeString": "type(contract IERC20)"
																}
															},
															"id": 951,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "2103:14:4",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_IERC20_$77",
																"typeString": "contract IERC20"
															}
														},
														"id": 952,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "2118:16:4",
														"memberName": "safeTransferFrom",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 171,
														"src": "2103:31:4",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_contract$_IERC20_$77_$_t_address_$_t_address_$_t_uint256_$returns$__$bound_to$_t_contract$_IERC20_$77_$",
															"typeString": "function (contract IERC20,address,address,uint256)"
														}
													},
													"id": 960,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2103:68:4",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 961,
												"nodeType": "ExpressionStatement",
												"src": "2103:68:4"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 966,
															"name": "router",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 735,
															"src": "2208:6:4",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 967,
															"name": "amountIn",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 921,
															"src": "2216:8:4",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"expression": {
															"arguments": [
																{
																	"id": 963,
																	"name": "tokenA",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 917,
																	"src": "2188:6:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																],
																"id": 962,
																"name": "IERC20",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 77,
																"src": "2181:6:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_contract$_IERC20_$77_$",
																	"typeString": "type(contract IERC20)"
																}
															},
															"id": 964,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "2181:14:4",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_IERC20_$77",
																"typeString": "contract IERC20"
															}
														},
														"id": 965,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "2196:11:4",
														"memberName": "safeApprove",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 215,
														"src": "2181:26:4",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_contract$_IERC20_$77_$_t_address_$_t_uint256_$returns$__$bound_to$_t_contract$_IERC20_$77_$",
															"typeString": "function (contract IERC20,address,uint256)"
														}
													},
													"id": 968,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2181:44:4",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 969,
												"nodeType": "ExpressionStatement",
												"src": "2181:44:4"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 974,
															"name": "amountIn",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 921,
															"src": "2287:8:4",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"id": 975,
															"name": "minTokenAmount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 923,
															"src": "2297:14:4",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"id": 976,
															"name": "path",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 930,
															"src": "2313:4:4",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
																"typeString": "address[] memory"
															}
														},
														{
															"expression": {
																"id": 977,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967281,
																"src": "2319:3:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 978,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "2323:6:4",
															"memberName": "sender",
															"nodeType": "MemberAccess",
															"src": "2319:10:4",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"expression": {
																"id": 979,
																"name": "block",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967292,
																"src": "2331:5:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_block",
																	"typeString": "block"
																}
															},
															"id": 980,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "2337:9:4",
															"memberName": "timestamp",
															"nodeType": "MemberAccess",
															"src": "2331:15:4",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
																"typeString": "address[] memory"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"expression": {
															"arguments": [
																{
																	"id": 971,
																	"name": "router",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 735,
																	"src": "2254:6:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																],
																"id": 970,
																"name": "IUniswapV2Router01",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1293,
																"src": "2235:18:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_contract$_IUniswapV2Router01_$1293_$",
																	"typeString": "type(contract IUniswapV2Router01)"
																}
															},
															"id": 972,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "2235:26:4",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_IUniswapV2Router01_$1293",
																"typeString": "contract IUniswapV2Router01"
															}
														},
														"id": 973,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "2262:24:4",
														"memberName": "swapExactTokensForTokens",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 1156,
														"src": "2235:51:4",
														"typeDescriptions": {
															"typeIdentifier": "t_function_external_nonpayable$_t_uint256_$_t_uint256_$_t_array$_t_address_$dyn_memory_ptr_$_t_address_$_t_uint256_$returns$_t_array$_t_uint256_$dyn_memory_ptr_$",
															"typeString": "function (uint256,uint256,address[] memory,address,uint256) external returns (uint256[] memory)"
														}
													},
													"id": 981,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2235:112:4",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
														"typeString": "uint256[] memory"
													}
												},
												"id": 982,
												"nodeType": "ExpressionStatement",
												"src": "2235:112:4"
											}
										]
									},
									"functionSelector": "7d17ff3d",
									"id": 984,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "buyToken",
									"nameLocation": "1907:8:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 924,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 917,
												"mutability": "mutable",
												"name": "tokenA",
												"nameLocation": "1924:6:4",
												"nodeType": "VariableDeclaration",
												"scope": 984,
												"src": "1916:14:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 916,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1916:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 919,
												"mutability": "mutable",
												"name": "tokenB",
												"nameLocation": "1940:6:4",
												"nodeType": "VariableDeclaration",
												"scope": 984,
												"src": "1932:14:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 918,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1932:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 921,
												"mutability": "mutable",
												"name": "amountIn",
												"nameLocation": "1953:8:4",
												"nodeType": "VariableDeclaration",
												"scope": 984,
												"src": "1948:13:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 920,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "1948:4:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 923,
												"mutability": "mutable",
												"name": "minTokenAmount",
												"nameLocation": "1968:14:4",
												"nodeType": "VariableDeclaration",
												"scope": 984,
												"src": "1963:19:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 922,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "1963:4:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1915:68:4"
									},
									"returnParameters": {
										"id": 925,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1991:0:4"
									},
									"scope": 985,
									"src": "1898:456:4",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								}
							],
							"scope": 986,
							"src": "235:2122:4",
							"usedErrors": []
						}
					],
					"src": "31:2326:4"
				},
				"id": 4
			},
			"DengLianHW/w5-2/contracts/Uniswap/interfaces/IUniswapV2Router01.sol": {
				"ast": {
					"absolutePath": "DengLianHW/w5-2/contracts/Uniswap/interfaces/IUniswapV2Router01.sol",
					"exportedSymbols": {
						"IUniswapV2Router01": [
							1293
						]
					},
					"id": 1294,
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 987,
							"literals": [
								"solidity",
								">=",
								"0.6",
								".2"
							],
							"nodeType": "PragmaDirective",
							"src": "0:24:5"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "IUniswapV2Router01",
							"contractDependencies": [],
							"contractKind": "interface",
							"fullyImplemented": false,
							"id": 1293,
							"linearizedBaseContracts": [
								1293
							],
							"name": "IUniswapV2Router01",
							"nameLocation": "36:18:5",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"functionSelector": "c45a0155",
									"id": 992,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "factory",
									"nameLocation": "70:7:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 988,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "77:2:5"
									},
									"returnParameters": {
										"id": 991,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 990,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 992,
												"src": "103:7:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 989,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "103:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "102:9:5"
									},
									"scope": 1293,
									"src": "61:51:5",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "external"
								},
								{
									"functionSelector": "ad5c4648",
									"id": 997,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "WETH",
									"nameLocation": "126:4:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 993,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "130:2:5"
									},
									"returnParameters": {
										"id": 996,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 995,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 997,
												"src": "156:7:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 994,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "156:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "155:9:5"
									},
									"scope": 1293,
									"src": "117:48:5",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "external"
								},
								{
									"functionSelector": "e8e33700",
									"id": 1022,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "addLiquidity",
									"nameLocation": "180:12:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1014,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 999,
												"mutability": "mutable",
												"name": "tokenA",
												"nameLocation": "210:6:5",
												"nodeType": "VariableDeclaration",
												"scope": 1022,
												"src": "202:14:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 998,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "202:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1001,
												"mutability": "mutable",
												"name": "tokenB",
												"nameLocation": "234:6:5",
												"nodeType": "VariableDeclaration",
												"scope": 1022,
												"src": "226:14:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1000,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "226:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1003,
												"mutability": "mutable",
												"name": "amountADesired",
												"nameLocation": "255:14:5",
												"nodeType": "VariableDeclaration",
												"scope": 1022,
												"src": "250:19:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1002,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "250:4:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1005,
												"mutability": "mutable",
												"name": "amountBDesired",
												"nameLocation": "284:14:5",
												"nodeType": "VariableDeclaration",
												"scope": 1022,
												"src": "279:19:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1004,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "279:4:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1007,
												"mutability": "mutable",
												"name": "amountAMin",
												"nameLocation": "313:10:5",
												"nodeType": "VariableDeclaration",
												"scope": 1022,
												"src": "308:15:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1006,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "308:4:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1009,
												"mutability": "mutable",
												"name": "amountBMin",
												"nameLocation": "338:10:5",
												"nodeType": "VariableDeclaration",
												"scope": 1022,
												"src": "333:15:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1008,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "333:4:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1011,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "366:2:5",
												"nodeType": "VariableDeclaration",
												"scope": 1022,
												"src": "358:10:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1010,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "358:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1013,
												"mutability": "mutable",
												"name": "deadline",
												"nameLocation": "383:8:5",
												"nodeType": "VariableDeclaration",
												"scope": 1022,
												"src": "378:13:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1012,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "378:4:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "192:205:5"
									},
									"returnParameters": {
										"id": 1021,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1016,
												"mutability": "mutable",
												"name": "amountA",
												"nameLocation": "421:7:5",
												"nodeType": "VariableDeclaration",
												"scope": 1022,
												"src": "416:12:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1015,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "416:4:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1018,
												"mutability": "mutable",
												"name": "amountB",
												"nameLocation": "435:7:5",
												"nodeType": "VariableDeclaration",
												"scope": 1022,
												"src": "430:12:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1017,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "430:4:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1020,
												"mutability": "mutable",
												"name": "liquidity",
												"nameLocation": "449:9:5",
												"nodeType": "VariableDeclaration",
												"scope": 1022,
												"src": "444:14:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1019,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "444:4:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "415:44:5"
									},
									"scope": 1293,
									"src": "171:289:5",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"functionSelector": "f305d719",
									"id": 1043,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "addLiquidityETH",
									"nameLocation": "474:15:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1035,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1024,
												"mutability": "mutable",
												"name": "token",
												"nameLocation": "507:5:5",
												"nodeType": "VariableDeclaration",
												"scope": 1043,
												"src": "499:13:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1023,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "499:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1026,
												"mutability": "mutable",
												"name": "amountTokenDesired",
												"nameLocation": "527:18:5",
												"nodeType": "VariableDeclaration",
												"scope": 1043,
												"src": "522:23:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1025,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "522:4:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1028,
												"mutability": "mutable",
												"name": "amountTokenMin",
												"nameLocation": "560:14:5",
												"nodeType": "VariableDeclaration",
												"scope": 1043,
												"src": "555:19:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1027,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "555:4:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1030,
												"mutability": "mutable",
												"name": "amountETHMin",
												"nameLocation": "589:12:5",
												"nodeType": "VariableDeclaration",
												"scope": 1043,
												"src": "584:17:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1029,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "584:4:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1032,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "619:2:5",
												"nodeType": "VariableDeclaration",
												"scope": 1043,
												"src": "611:10:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1031,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "611:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1034,
												"mutability": "mutable",
												"name": "deadline",
												"nameLocation": "636:8:5",
												"nodeType": "VariableDeclaration",
												"scope": 1043,
												"src": "631:13:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1033,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "631:4:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "489:161:5"
									},
									"returnParameters": {
										"id": 1042,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1037,
												"mutability": "mutable",
												"name": "amountToken",
												"nameLocation": "682:11:5",
												"nodeType": "VariableDeclaration",
												"scope": 1043,
												"src": "677:16:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1036,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "677:4:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1039,
												"mutability": "mutable",
												"name": "amountETH",
												"nameLocation": "700:9:5",
												"nodeType": "VariableDeclaration",
												"scope": 1043,
												"src": "695:14:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1038,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "695:4:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1041,
												"mutability": "mutable",
												"name": "liquidity",
												"nameLocation": "716:9:5",
												"nodeType": "VariableDeclaration",
												"scope": 1043,
												"src": "711:14:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1040,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "711:4:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "676:50:5"
									},
									"scope": 1293,
									"src": "465:262:5",
									"stateMutability": "payable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"functionSelector": "baa2abde",
									"id": 1064,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "removeLiquidity",
									"nameLocation": "741:15:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1058,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1045,
												"mutability": "mutable",
												"name": "tokenA",
												"nameLocation": "774:6:5",
												"nodeType": "VariableDeclaration",
												"scope": 1064,
												"src": "766:14:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1044,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "766:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1047,
												"mutability": "mutable",
												"name": "tokenB",
												"nameLocation": "798:6:5",
												"nodeType": "VariableDeclaration",
												"scope": 1064,
												"src": "790:14:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1046,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "790:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1049,
												"mutability": "mutable",
												"name": "liquidity",
												"nameLocation": "819:9:5",
												"nodeType": "VariableDeclaration",
												"scope": 1064,
												"src": "814:14:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1048,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "814:4:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1051,
												"mutability": "mutable",
												"name": "amountAMin",
												"nameLocation": "843:10:5",
												"nodeType": "VariableDeclaration",
												"scope": 1064,
												"src": "838:15:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1050,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "838:4:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1053,
												"mutability": "mutable",
												"name": "amountBMin",
												"nameLocation": "868:10:5",
												"nodeType": "VariableDeclaration",
												"scope": 1064,
												"src": "863:15:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1052,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "863:4:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1055,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "896:2:5",
												"nodeType": "VariableDeclaration",
												"scope": 1064,
												"src": "888:10:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1054,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "888:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1057,
												"mutability": "mutable",
												"name": "deadline",
												"nameLocation": "913:8:5",
												"nodeType": "VariableDeclaration",
												"scope": 1064,
												"src": "908:13:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1056,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "908:4:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "756:171:5"
									},
									"returnParameters": {
										"id": 1063,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1060,
												"mutability": "mutable",
												"name": "amountA",
												"nameLocation": "951:7:5",
												"nodeType": "VariableDeclaration",
												"scope": 1064,
												"src": "946:12:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1059,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "946:4:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1062,
												"mutability": "mutable",
												"name": "amountB",
												"nameLocation": "965:7:5",
												"nodeType": "VariableDeclaration",
												"scope": 1064,
												"src": "960:12:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1061,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "960:4:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "945:28:5"
									},
									"scope": 1293,
									"src": "732:242:5",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"functionSelector": "02751cec",
									"id": 1083,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "removeLiquidityETH",
									"nameLocation": "988:18:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1077,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1066,
												"mutability": "mutable",
												"name": "token",
												"nameLocation": "1024:5:5",
												"nodeType": "VariableDeclaration",
												"scope": 1083,
												"src": "1016:13:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1065,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1016:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1068,
												"mutability": "mutable",
												"name": "liquidity",
												"nameLocation": "1044:9:5",
												"nodeType": "VariableDeclaration",
												"scope": 1083,
												"src": "1039:14:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1067,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "1039:4:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1070,
												"mutability": "mutable",
												"name": "amountTokenMin",
												"nameLocation": "1068:14:5",
												"nodeType": "VariableDeclaration",
												"scope": 1083,
												"src": "1063:19:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1069,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "1063:4:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1072,
												"mutability": "mutable",
												"name": "amountETHMin",
												"nameLocation": "1097:12:5",
												"nodeType": "VariableDeclaration",
												"scope": 1083,
												"src": "1092:17:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1071,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "1092:4:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1074,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "1127:2:5",
												"nodeType": "VariableDeclaration",
												"scope": 1083,
												"src": "1119:10:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1073,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1119:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1076,
												"mutability": "mutable",
												"name": "deadline",
												"nameLocation": "1144:8:5",
												"nodeType": "VariableDeclaration",
												"scope": 1083,
												"src": "1139:13:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1075,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "1139:4:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1006:152:5"
									},
									"returnParameters": {
										"id": 1082,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1079,
												"mutability": "mutable",
												"name": "amountToken",
												"nameLocation": "1182:11:5",
												"nodeType": "VariableDeclaration",
												"scope": 1083,
												"src": "1177:16:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1078,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "1177:4:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1081,
												"mutability": "mutable",
												"name": "amountETH",
												"nameLocation": "1200:9:5",
												"nodeType": "VariableDeclaration",
												"scope": 1083,
												"src": "1195:14:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1080,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "1195:4:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1176:34:5"
									},
									"scope": 1293,
									"src": "979:232:5",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"functionSelector": "2195995c",
									"id": 1112,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "removeLiquidityWithPermit",
									"nameLocation": "1225:25:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1106,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1085,
												"mutability": "mutable",
												"name": "tokenA",
												"nameLocation": "1268:6:5",
												"nodeType": "VariableDeclaration",
												"scope": 1112,
												"src": "1260:14:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1084,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1260:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1087,
												"mutability": "mutable",
												"name": "tokenB",
												"nameLocation": "1292:6:5",
												"nodeType": "VariableDeclaration",
												"scope": 1112,
												"src": "1284:14:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1086,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1284:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1089,
												"mutability": "mutable",
												"name": "liquidity",
												"nameLocation": "1313:9:5",
												"nodeType": "VariableDeclaration",
												"scope": 1112,
												"src": "1308:14:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1088,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "1308:4:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1091,
												"mutability": "mutable",
												"name": "amountAMin",
												"nameLocation": "1337:10:5",
												"nodeType": "VariableDeclaration",
												"scope": 1112,
												"src": "1332:15:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1090,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "1332:4:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1093,
												"mutability": "mutable",
												"name": "amountBMin",
												"nameLocation": "1362:10:5",
												"nodeType": "VariableDeclaration",
												"scope": 1112,
												"src": "1357:15:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1092,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "1357:4:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1095,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "1390:2:5",
												"nodeType": "VariableDeclaration",
												"scope": 1112,
												"src": "1382:10:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1094,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1382:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1097,
												"mutability": "mutable",
												"name": "deadline",
												"nameLocation": "1407:8:5",
												"nodeType": "VariableDeclaration",
												"scope": 1112,
												"src": "1402:13:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1096,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "1402:4:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1099,
												"mutability": "mutable",
												"name": "approveMax",
												"nameLocation": "1430:10:5",
												"nodeType": "VariableDeclaration",
												"scope": 1112,
												"src": "1425:15:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 1098,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "1425:4:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1101,
												"mutability": "mutable",
												"name": "v",
												"nameLocation": "1448:1:5",
												"nodeType": "VariableDeclaration",
												"scope": 1112,
												"src": "1442:7:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint8",
													"typeString": "uint8"
												},
												"typeName": {
													"id": 1100,
													"name": "uint8",
													"nodeType": "ElementaryTypeName",
													"src": "1442:5:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint8",
														"typeString": "uint8"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1103,
												"mutability": "mutable",
												"name": "r",
												"nameLocation": "1459:1:5",
												"nodeType": "VariableDeclaration",
												"scope": 1112,
												"src": "1451:9:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 1102,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "1451:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1105,
												"mutability": "mutable",
												"name": "s",
												"nameLocation": "1470:1:5",
												"nodeType": "VariableDeclaration",
												"scope": 1112,
												"src": "1462:9:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 1104,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "1462:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1250:227:5"
									},
									"returnParameters": {
										"id": 1111,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1108,
												"mutability": "mutable",
												"name": "amountA",
												"nameLocation": "1501:7:5",
												"nodeType": "VariableDeclaration",
												"scope": 1112,
												"src": "1496:12:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1107,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "1496:4:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1110,
												"mutability": "mutable",
												"name": "amountB",
												"nameLocation": "1515:7:5",
												"nodeType": "VariableDeclaration",
												"scope": 1112,
												"src": "1510:12:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1109,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "1510:4:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1495:28:5"
									},
									"scope": 1293,
									"src": "1216:308:5",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"functionSelector": "ded9382a",
									"id": 1139,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "removeLiquidityETHWithPermit",
									"nameLocation": "1538:28:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1133,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1114,
												"mutability": "mutable",
												"name": "token",
												"nameLocation": "1584:5:5",
												"nodeType": "VariableDeclaration",
												"scope": 1139,
												"src": "1576:13:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1113,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1576:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1116,
												"mutability": "mutable",
												"name": "liquidity",
												"nameLocation": "1604:9:5",
												"nodeType": "VariableDeclaration",
												"scope": 1139,
												"src": "1599:14:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1115,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "1599:4:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1118,
												"mutability": "mutable",
												"name": "amountTokenMin",
												"nameLocation": "1628:14:5",
												"nodeType": "VariableDeclaration",
												"scope": 1139,
												"src": "1623:19:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1117,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "1623:4:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1120,
												"mutability": "mutable",
												"name": "amountETHMin",
												"nameLocation": "1657:12:5",
												"nodeType": "VariableDeclaration",
												"scope": 1139,
												"src": "1652:17:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1119,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "1652:4:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1122,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "1687:2:5",
												"nodeType": "VariableDeclaration",
												"scope": 1139,
												"src": "1679:10:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1121,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1679:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1124,
												"mutability": "mutable",
												"name": "deadline",
												"nameLocation": "1704:8:5",
												"nodeType": "VariableDeclaration",
												"scope": 1139,
												"src": "1699:13:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1123,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "1699:4:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1126,
												"mutability": "mutable",
												"name": "approveMax",
												"nameLocation": "1727:10:5",
												"nodeType": "VariableDeclaration",
												"scope": 1139,
												"src": "1722:15:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 1125,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "1722:4:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1128,
												"mutability": "mutable",
												"name": "v",
												"nameLocation": "1745:1:5",
												"nodeType": "VariableDeclaration",
												"scope": 1139,
												"src": "1739:7:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint8",
													"typeString": "uint8"
												},
												"typeName": {
													"id": 1127,
													"name": "uint8",
													"nodeType": "ElementaryTypeName",
													"src": "1739:5:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint8",
														"typeString": "uint8"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1130,
												"mutability": "mutable",
												"name": "r",
												"nameLocation": "1756:1:5",
												"nodeType": "VariableDeclaration",
												"scope": 1139,
												"src": "1748:9:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 1129,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "1748:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1132,
												"mutability": "mutable",
												"name": "s",
												"nameLocation": "1767:1:5",
												"nodeType": "VariableDeclaration",
												"scope": 1139,
												"src": "1759:9:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 1131,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "1759:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1566:208:5"
									},
									"returnParameters": {
										"id": 1138,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1135,
												"mutability": "mutable",
												"name": "amountToken",
												"nameLocation": "1798:11:5",
												"nodeType": "VariableDeclaration",
												"scope": 1139,
												"src": "1793:16:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1134,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "1793:4:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1137,
												"mutability": "mutable",
												"name": "amountETH",
												"nameLocation": "1816:9:5",
												"nodeType": "VariableDeclaration",
												"scope": 1139,
												"src": "1811:14:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1136,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "1811:4:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1792:34:5"
									},
									"scope": 1293,
									"src": "1529:298:5",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"functionSelector": "38ed1739",
									"id": 1156,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "swapExactTokensForTokens",
									"nameLocation": "1841:24:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1151,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1141,
												"mutability": "mutable",
												"name": "amountIn",
												"nameLocation": "1880:8:5",
												"nodeType": "VariableDeclaration",
												"scope": 1156,
												"src": "1875:13:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1140,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "1875:4:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1143,
												"mutability": "mutable",
												"name": "amountOutMin",
												"nameLocation": "1903:12:5",
												"nodeType": "VariableDeclaration",
												"scope": 1156,
												"src": "1898:17:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1142,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "1898:4:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1146,
												"mutability": "mutable",
												"name": "path",
												"nameLocation": "1944:4:5",
												"nodeType": "VariableDeclaration",
												"scope": 1156,
												"src": "1925:23:5",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_address_$dyn_calldata_ptr",
													"typeString": "address[]"
												},
												"typeName": {
													"baseType": {
														"id": 1144,
														"name": "address",
														"nodeType": "ElementaryTypeName",
														"src": "1925:7:5",
														"stateMutability": "nonpayable",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"id": 1145,
													"nodeType": "ArrayTypeName",
													"src": "1925:9:5",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_address_$dyn_storage_ptr",
														"typeString": "address[]"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1148,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "1966:2:5",
												"nodeType": "VariableDeclaration",
												"scope": 1156,
												"src": "1958:10:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1147,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1958:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1150,
												"mutability": "mutable",
												"name": "deadline",
												"nameLocation": "1983:8:5",
												"nodeType": "VariableDeclaration",
												"scope": 1156,
												"src": "1978:13:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1149,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "1978:4:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1865:132:5"
									},
									"returnParameters": {
										"id": 1155,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1154,
												"mutability": "mutable",
												"name": "amounts",
												"nameLocation": "2030:7:5",
												"nodeType": "VariableDeclaration",
												"scope": 1156,
												"src": "2016:21:5",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
													"typeString": "uint256[]"
												},
												"typeName": {
													"baseType": {
														"id": 1152,
														"name": "uint",
														"nodeType": "ElementaryTypeName",
														"src": "2016:4:5",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 1153,
													"nodeType": "ArrayTypeName",
													"src": "2016:6:5",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
														"typeString": "uint256[]"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2015:23:5"
									},
									"scope": 1293,
									"src": "1832:207:5",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"functionSelector": "8803dbee",
									"id": 1173,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "swapTokensForExactTokens",
									"nameLocation": "2053:24:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1168,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1158,
												"mutability": "mutable",
												"name": "amountOut",
												"nameLocation": "2092:9:5",
												"nodeType": "VariableDeclaration",
												"scope": 1173,
												"src": "2087:14:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1157,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "2087:4:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1160,
												"mutability": "mutable",
												"name": "amountInMax",
												"nameLocation": "2116:11:5",
												"nodeType": "VariableDeclaration",
												"scope": 1173,
												"src": "2111:16:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1159,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "2111:4:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1163,
												"mutability": "mutable",
												"name": "path",
												"nameLocation": "2156:4:5",
												"nodeType": "VariableDeclaration",
												"scope": 1173,
												"src": "2137:23:5",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_address_$dyn_calldata_ptr",
													"typeString": "address[]"
												},
												"typeName": {
													"baseType": {
														"id": 1161,
														"name": "address",
														"nodeType": "ElementaryTypeName",
														"src": "2137:7:5",
														"stateMutability": "nonpayable",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"id": 1162,
													"nodeType": "ArrayTypeName",
													"src": "2137:9:5",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_address_$dyn_storage_ptr",
														"typeString": "address[]"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1165,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "2178:2:5",
												"nodeType": "VariableDeclaration",
												"scope": 1173,
												"src": "2170:10:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1164,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2170:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1167,
												"mutability": "mutable",
												"name": "deadline",
												"nameLocation": "2195:8:5",
												"nodeType": "VariableDeclaration",
												"scope": 1173,
												"src": "2190:13:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1166,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "2190:4:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2077:132:5"
									},
									"returnParameters": {
										"id": 1172,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1171,
												"mutability": "mutable",
												"name": "amounts",
												"nameLocation": "2242:7:5",
												"nodeType": "VariableDeclaration",
												"scope": 1173,
												"src": "2228:21:5",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
													"typeString": "uint256[]"
												},
												"typeName": {
													"baseType": {
														"id": 1169,
														"name": "uint",
														"nodeType": "ElementaryTypeName",
														"src": "2228:4:5",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 1170,
													"nodeType": "ArrayTypeName",
													"src": "2228:6:5",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
														"typeString": "uint256[]"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2227:23:5"
									},
									"scope": 1293,
									"src": "2044:207:5",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"functionSelector": "7ff36ab5",
									"id": 1188,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "swapExactETHForTokens",
									"nameLocation": "2265:21:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1183,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1175,
												"mutability": "mutable",
												"name": "amountOutMin",
												"nameLocation": "2292:12:5",
												"nodeType": "VariableDeclaration",
												"scope": 1188,
												"src": "2287:17:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1174,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "2287:4:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1178,
												"mutability": "mutable",
												"name": "path",
												"nameLocation": "2325:4:5",
												"nodeType": "VariableDeclaration",
												"scope": 1188,
												"src": "2306:23:5",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_address_$dyn_calldata_ptr",
													"typeString": "address[]"
												},
												"typeName": {
													"baseType": {
														"id": 1176,
														"name": "address",
														"nodeType": "ElementaryTypeName",
														"src": "2306:7:5",
														"stateMutability": "nonpayable",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"id": 1177,
													"nodeType": "ArrayTypeName",
													"src": "2306:9:5",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_address_$dyn_storage_ptr",
														"typeString": "address[]"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1180,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "2339:2:5",
												"nodeType": "VariableDeclaration",
												"scope": 1188,
												"src": "2331:10:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1179,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2331:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1182,
												"mutability": "mutable",
												"name": "deadline",
												"nameLocation": "2348:8:5",
												"nodeType": "VariableDeclaration",
												"scope": 1188,
												"src": "2343:13:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1181,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "2343:4:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2286:71:5"
									},
									"returnParameters": {
										"id": 1187,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1186,
												"mutability": "mutable",
												"name": "amounts",
												"nameLocation": "2422:7:5",
												"nodeType": "VariableDeclaration",
												"scope": 1188,
												"src": "2408:21:5",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
													"typeString": "uint256[]"
												},
												"typeName": {
													"baseType": {
														"id": 1184,
														"name": "uint",
														"nodeType": "ElementaryTypeName",
														"src": "2408:4:5",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 1185,
													"nodeType": "ArrayTypeName",
													"src": "2408:6:5",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
														"typeString": "uint256[]"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2407:23:5"
									},
									"scope": 1293,
									"src": "2256:175:5",
									"stateMutability": "payable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"functionSelector": "4a25d94a",
									"id": 1205,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "swapTokensForExactETH",
									"nameLocation": "2445:21:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1200,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1190,
												"mutability": "mutable",
												"name": "amountOut",
												"nameLocation": "2472:9:5",
												"nodeType": "VariableDeclaration",
												"scope": 1205,
												"src": "2467:14:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1189,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "2467:4:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1192,
												"mutability": "mutable",
												"name": "amountInMax",
												"nameLocation": "2488:11:5",
												"nodeType": "VariableDeclaration",
												"scope": 1205,
												"src": "2483:16:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1191,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "2483:4:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1195,
												"mutability": "mutable",
												"name": "path",
												"nameLocation": "2520:4:5",
												"nodeType": "VariableDeclaration",
												"scope": 1205,
												"src": "2501:23:5",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_address_$dyn_calldata_ptr",
													"typeString": "address[]"
												},
												"typeName": {
													"baseType": {
														"id": 1193,
														"name": "address",
														"nodeType": "ElementaryTypeName",
														"src": "2501:7:5",
														"stateMutability": "nonpayable",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"id": 1194,
													"nodeType": "ArrayTypeName",
													"src": "2501:9:5",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_address_$dyn_storage_ptr",
														"typeString": "address[]"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1197,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "2534:2:5",
												"nodeType": "VariableDeclaration",
												"scope": 1205,
												"src": "2526:10:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1196,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2526:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1199,
												"mutability": "mutable",
												"name": "deadline",
												"nameLocation": "2543:8:5",
												"nodeType": "VariableDeclaration",
												"scope": 1205,
												"src": "2538:13:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1198,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "2538:4:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2466:86:5"
									},
									"returnParameters": {
										"id": 1204,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1203,
												"mutability": "mutable",
												"name": "amounts",
												"nameLocation": "2601:7:5",
												"nodeType": "VariableDeclaration",
												"scope": 1205,
												"src": "2587:21:5",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
													"typeString": "uint256[]"
												},
												"typeName": {
													"baseType": {
														"id": 1201,
														"name": "uint",
														"nodeType": "ElementaryTypeName",
														"src": "2587:4:5",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 1202,
													"nodeType": "ArrayTypeName",
													"src": "2587:6:5",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
														"typeString": "uint256[]"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2586:23:5"
									},
									"scope": 1293,
									"src": "2436:174:5",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"functionSelector": "18cbafe5",
									"id": 1222,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "swapExactTokensForETH",
									"nameLocation": "2624:21:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1217,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1207,
												"mutability": "mutable",
												"name": "amountIn",
												"nameLocation": "2651:8:5",
												"nodeType": "VariableDeclaration",
												"scope": 1222,
												"src": "2646:13:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1206,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "2646:4:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1209,
												"mutability": "mutable",
												"name": "amountOutMin",
												"nameLocation": "2666:12:5",
												"nodeType": "VariableDeclaration",
												"scope": 1222,
												"src": "2661:17:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1208,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "2661:4:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1212,
												"mutability": "mutable",
												"name": "path",
												"nameLocation": "2699:4:5",
												"nodeType": "VariableDeclaration",
												"scope": 1222,
												"src": "2680:23:5",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_address_$dyn_calldata_ptr",
													"typeString": "address[]"
												},
												"typeName": {
													"baseType": {
														"id": 1210,
														"name": "address",
														"nodeType": "ElementaryTypeName",
														"src": "2680:7:5",
														"stateMutability": "nonpayable",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"id": 1211,
													"nodeType": "ArrayTypeName",
													"src": "2680:9:5",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_address_$dyn_storage_ptr",
														"typeString": "address[]"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1214,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "2713:2:5",
												"nodeType": "VariableDeclaration",
												"scope": 1222,
												"src": "2705:10:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1213,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2705:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1216,
												"mutability": "mutable",
												"name": "deadline",
												"nameLocation": "2722:8:5",
												"nodeType": "VariableDeclaration",
												"scope": 1222,
												"src": "2717:13:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1215,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "2717:4:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2645:86:5"
									},
									"returnParameters": {
										"id": 1221,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1220,
												"mutability": "mutable",
												"name": "amounts",
												"nameLocation": "2780:7:5",
												"nodeType": "VariableDeclaration",
												"scope": 1222,
												"src": "2766:21:5",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
													"typeString": "uint256[]"
												},
												"typeName": {
													"baseType": {
														"id": 1218,
														"name": "uint",
														"nodeType": "ElementaryTypeName",
														"src": "2766:4:5",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 1219,
													"nodeType": "ArrayTypeName",
													"src": "2766:6:5",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
														"typeString": "uint256[]"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2765:23:5"
									},
									"scope": 1293,
									"src": "2615:174:5",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"functionSelector": "fb3bdb41",
									"id": 1237,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "swapETHForExactTokens",
									"nameLocation": "2803:21:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1232,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1224,
												"mutability": "mutable",
												"name": "amountOut",
												"nameLocation": "2830:9:5",
												"nodeType": "VariableDeclaration",
												"scope": 1237,
												"src": "2825:14:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1223,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "2825:4:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1227,
												"mutability": "mutable",
												"name": "path",
												"nameLocation": "2860:4:5",
												"nodeType": "VariableDeclaration",
												"scope": 1237,
												"src": "2841:23:5",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_address_$dyn_calldata_ptr",
													"typeString": "address[]"
												},
												"typeName": {
													"baseType": {
														"id": 1225,
														"name": "address",
														"nodeType": "ElementaryTypeName",
														"src": "2841:7:5",
														"stateMutability": "nonpayable",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"id": 1226,
													"nodeType": "ArrayTypeName",
													"src": "2841:9:5",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_address_$dyn_storage_ptr",
														"typeString": "address[]"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1229,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "2874:2:5",
												"nodeType": "VariableDeclaration",
												"scope": 1237,
												"src": "2866:10:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1228,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2866:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1231,
												"mutability": "mutable",
												"name": "deadline",
												"nameLocation": "2883:8:5",
												"nodeType": "VariableDeclaration",
												"scope": 1237,
												"src": "2878:13:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1230,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "2878:4:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2824:68:5"
									},
									"returnParameters": {
										"id": 1236,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1235,
												"mutability": "mutable",
												"name": "amounts",
												"nameLocation": "2957:7:5",
												"nodeType": "VariableDeclaration",
												"scope": 1237,
												"src": "2943:21:5",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
													"typeString": "uint256[]"
												},
												"typeName": {
													"baseType": {
														"id": 1233,
														"name": "uint",
														"nodeType": "ElementaryTypeName",
														"src": "2943:4:5",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 1234,
													"nodeType": "ArrayTypeName",
													"src": "2943:6:5",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
														"typeString": "uint256[]"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2942:23:5"
									},
									"scope": 1293,
									"src": "2794:172:5",
									"stateMutability": "payable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"functionSelector": "ad615dec",
									"id": 1248,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "quote",
									"nameLocation": "2981:5:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1244,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1239,
												"mutability": "mutable",
												"name": "amountA",
												"nameLocation": "2992:7:5",
												"nodeType": "VariableDeclaration",
												"scope": 1248,
												"src": "2987:12:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1238,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "2987:4:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1241,
												"mutability": "mutable",
												"name": "reserveA",
												"nameLocation": "3006:8:5",
												"nodeType": "VariableDeclaration",
												"scope": 1248,
												"src": "3001:13:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1240,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "3001:4:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1243,
												"mutability": "mutable",
												"name": "reserveB",
												"nameLocation": "3021:8:5",
												"nodeType": "VariableDeclaration",
												"scope": 1248,
												"src": "3016:13:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1242,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "3016:4:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2986:44:5"
									},
									"returnParameters": {
										"id": 1247,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1246,
												"mutability": "mutable",
												"name": "amountB",
												"nameLocation": "3059:7:5",
												"nodeType": "VariableDeclaration",
												"scope": 1248,
												"src": "3054:12:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1245,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "3054:4:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3053:14:5"
									},
									"scope": 1293,
									"src": "2972:96:5",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "external"
								},
								{
									"functionSelector": "054d50d4",
									"id": 1259,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "getAmountOut",
									"nameLocation": "3082:12:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1255,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1250,
												"mutability": "mutable",
												"name": "amountIn",
												"nameLocation": "3100:8:5",
												"nodeType": "VariableDeclaration",
												"scope": 1259,
												"src": "3095:13:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1249,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "3095:4:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1252,
												"mutability": "mutable",
												"name": "reserveIn",
												"nameLocation": "3115:9:5",
												"nodeType": "VariableDeclaration",
												"scope": 1259,
												"src": "3110:14:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1251,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "3110:4:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1254,
												"mutability": "mutable",
												"name": "reserveOut",
												"nameLocation": "3131:10:5",
												"nodeType": "VariableDeclaration",
												"scope": 1259,
												"src": "3126:15:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1253,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "3126:4:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3094:48:5"
									},
									"returnParameters": {
										"id": 1258,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1257,
												"mutability": "mutable",
												"name": "amountOut",
												"nameLocation": "3171:9:5",
												"nodeType": "VariableDeclaration",
												"scope": 1259,
												"src": "3166:14:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1256,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "3166:4:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3165:16:5"
									},
									"scope": 1293,
									"src": "3073:109:5",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "external"
								},
								{
									"functionSelector": "85f8c259",
									"id": 1270,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "getAmountIn",
									"nameLocation": "3196:11:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1266,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1261,
												"mutability": "mutable",
												"name": "amountOut",
												"nameLocation": "3213:9:5",
												"nodeType": "VariableDeclaration",
												"scope": 1270,
												"src": "3208:14:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1260,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "3208:4:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1263,
												"mutability": "mutable",
												"name": "reserveIn",
												"nameLocation": "3229:9:5",
												"nodeType": "VariableDeclaration",
												"scope": 1270,
												"src": "3224:14:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1262,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "3224:4:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1265,
												"mutability": "mutable",
												"name": "reserveOut",
												"nameLocation": "3245:10:5",
												"nodeType": "VariableDeclaration",
												"scope": 1270,
												"src": "3240:15:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1264,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "3240:4:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3207:49:5"
									},
									"returnParameters": {
										"id": 1269,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1268,
												"mutability": "mutable",
												"name": "amountIn",
												"nameLocation": "3285:8:5",
												"nodeType": "VariableDeclaration",
												"scope": 1270,
												"src": "3280:13:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1267,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "3280:4:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3279:15:5"
									},
									"scope": 1293,
									"src": "3187:108:5",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "external"
								},
								{
									"functionSelector": "d06ca61f",
									"id": 1281,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "getAmountsOut",
									"nameLocation": "3309:13:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1276,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1272,
												"mutability": "mutable",
												"name": "amountIn",
												"nameLocation": "3328:8:5",
												"nodeType": "VariableDeclaration",
												"scope": 1281,
												"src": "3323:13:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1271,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "3323:4:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1275,
												"mutability": "mutable",
												"name": "path",
												"nameLocation": "3357:4:5",
												"nodeType": "VariableDeclaration",
												"scope": 1281,
												"src": "3338:23:5",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_address_$dyn_calldata_ptr",
													"typeString": "address[]"
												},
												"typeName": {
													"baseType": {
														"id": 1273,
														"name": "address",
														"nodeType": "ElementaryTypeName",
														"src": "3338:7:5",
														"stateMutability": "nonpayable",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"id": 1274,
													"nodeType": "ArrayTypeName",
													"src": "3338:9:5",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_address_$dyn_storage_ptr",
														"typeString": "address[]"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3322:40:5"
									},
									"returnParameters": {
										"id": 1280,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1279,
												"mutability": "mutable",
												"name": "amounts",
												"nameLocation": "3400:7:5",
												"nodeType": "VariableDeclaration",
												"scope": 1281,
												"src": "3386:21:5",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
													"typeString": "uint256[]"
												},
												"typeName": {
													"baseType": {
														"id": 1277,
														"name": "uint",
														"nodeType": "ElementaryTypeName",
														"src": "3386:4:5",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 1278,
													"nodeType": "ArrayTypeName",
													"src": "3386:6:5",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
														"typeString": "uint256[]"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3385:23:5"
									},
									"scope": 1293,
									"src": "3300:109:5",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"functionSelector": "1f00ca74",
									"id": 1292,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "getAmountsIn",
									"nameLocation": "3423:12:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1287,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1283,
												"mutability": "mutable",
												"name": "amountOut",
												"nameLocation": "3441:9:5",
												"nodeType": "VariableDeclaration",
												"scope": 1292,
												"src": "3436:14:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1282,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "3436:4:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1286,
												"mutability": "mutable",
												"name": "path",
												"nameLocation": "3471:4:5",
												"nodeType": "VariableDeclaration",
												"scope": 1292,
												"src": "3452:23:5",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_address_$dyn_calldata_ptr",
													"typeString": "address[]"
												},
												"typeName": {
													"baseType": {
														"id": 1284,
														"name": "address",
														"nodeType": "ElementaryTypeName",
														"src": "3452:7:5",
														"stateMutability": "nonpayable",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"id": 1285,
													"nodeType": "ArrayTypeName",
													"src": "3452:9:5",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_address_$dyn_storage_ptr",
														"typeString": "address[]"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3435:41:5"
									},
									"returnParameters": {
										"id": 1291,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1290,
												"mutability": "mutable",
												"name": "amounts",
												"nameLocation": "3514:7:5",
												"nodeType": "VariableDeclaration",
												"scope": 1292,
												"src": "3500:21:5",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
													"typeString": "uint256[]"
												},
												"typeName": {
													"baseType": {
														"id": 1288,
														"name": "uint",
														"nodeType": "ElementaryTypeName",
														"src": "3500:4:5",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 1289,
													"nodeType": "ArrayTypeName",
													"src": "3500:6:5",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
														"typeString": "uint256[]"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3499:23:5"
									},
									"scope": 1293,
									"src": "3414:109:5",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 1294,
							"src": "26:3499:5",
							"usedErrors": []
						}
					],
					"src": "0:3526:5"
				},
				"id": 5
			}
		}
	}
}